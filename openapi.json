{
    "openapi": "3.0.0",
    "info": {
      "title": "Sysdig Secure API",
      "description": "Sysdig Secure RESTful Documentation\n\n## Conventions\n### Access | Send | Receive\nAPI access is over HTTPS and accessed from:\n\n\nSaaS: See [SaaS Regions](https://docs.sysdig.com/en/saas-regions-and-ip-ranges.html) and IP Ranges for the URLs corresponding to different regions.\n\n\nFor example:\nSysdig Secure for US East: https://secure.sysdig.com\n\nSysdig Monitor for US West: https://us2.app.sysdig.com\n\nSysdig Secure for EU Central: https://eu1.app.sysdig.com/secure/\n\nSysdig Monitor for EU Central: https://eu1.app.sysdig.com\n\nOn-Prem: through your Sysdig application server address\n\n\nData is sent and received using `JSON` format.\n\n### Authorization\nThe Sysdig API token must be passed to the HTTPS server via the Authorization header with the format:\n\n`Authorization: Bearer [token]`\n\n### Encoding\nThe request should set the HTTP header:\n\n`Accept: application/json`\n\nEvery response is returned with the HTTP header\n\n`Content-Type: application/json;charset=UTF-8`\n\nTo reduce the size of the request and (primarily) the response, you can set the header to compress HTTP body and response:\n\n`Accept-Encoding:gzip, deflate, sdch`\n\n<SecurityDefinitions />\n",
      "version": "v2",
      "x-logo": {
        "url": "https://secure.sysdig.com/images/sds/sysdig-logo-horizontal.png"
      }
    },
    "externalDocs": {
      "description": "Sysdig Product Documentation",
      "url": "https://docs.sysdig.com"
    },
    "servers": [
      {
        "url": "https://secure.sysdig.com",
        "description": "Sysdig Secure API"
      }
    ],
    "paths": {
      "/api/v1/secure/overview/status": {
        "get": {
          "summary": "Check status of overview service.",
          "description": "Checks whether the overview service is available or not.",
          "tags": [
            "Overview"
          ],
          "responses": {
            "200": {
              "description": "Successfully returned status of overview service.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Status Unauthorized: Returned when user is not authorized\n"
            },
            "403": {
              "description": "Status Forbidden: Returned when Overview V2 is disabled\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/overview/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/secure/overview/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v1/secure/overview/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secure/overview/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secure/overview/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secure/overview": {
        "get": {
          "summary": "Datasource for the Secure Overview page.",
          "description": "Fetches overview data for a specified set of panels of the Secure Overview page. Customer ID is derived from API key.",
          "tags": [
            "Overview"
          ],
          "parameters": [
            {
              "name": "panel",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "buildtimeScanResults",
                  "buildtimeCveSeverity",
                  "runtimeScanResults",
                  "runtimeCveSeverity",
                  "policyEvents",
                  "benchmarks"
                ]
              },
              "description": "Comma seperated string of panel(s) for which to fetch metrics. Defaults to all panels if omitted.",
              "example": "buildtimeScanResults,runtimeScanResults,benchmarks"
            },
            {
              "name": "timeframe",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "instant",
                  "range"
                ]
              },
              "description": "Type of data to return. Either instant (Donut graphs) or range (Trend graphs). Defaults to both if omitted. If range data is included, a constant timeframe will be returned for all range data in the response, with a length of 90 days, or the number of days since customer creation, whichever is smaller."
            },
            {
              "name": "cluster",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "Cluster name (Applies to runtimeScanResults and runtimeCveSeverity). Can be set to `non-k8s` to get data not associated with a kubernetes cluster (e.g. locally run Docker images. Omit to include all data (both k8s and non-k8s)"
            },
            {
              "name": "namespace",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "Namespace name (Applies to runtimeScanResults and runtimeCveSeverity). Only available if `cluster` is set and valid. Omit to include all namespaces."
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully returned overview data.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "buildtimeScanResults": {
                            "type": "object",
                            "properties": {
                              "instant": {
                                "type": "object",
                                "properties": {
                                  "pass": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "fail": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  }
                                }
                              },
                              "range": {
                                "type": "object",
                                "properties": {
                                  "pass": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "fail": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  }
                                }
                              },
                              "warnings": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "errors": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "buildtimeCveSeverity": {
                            "type": "object",
                            "properties": {
                              "instant": {
                                "type": "object",
                                "properties": {
                                  "critical": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "high": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "medium": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "low": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  }
                                }
                              },
                              "range": {
                                "type": "object",
                                "properties": {
                                  "critical": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "high": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "medium": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "low": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  }
                                }
                              },
                              "warnings": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "errors": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "runtimeScanResults": {
                            "type": "object",
                            "properties": {
                              "instant": {
                                "type": "object",
                                "properties": {
                                  "pass": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "fail": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "unscanned": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  }
                                }
                              },
                              "range": {
                                "type": "object",
                                "properties": {
                                  "pass": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "fail": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "unscanned": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  }
                                }
                              },
                              "warnings": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "errors": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "runtimeCveSeverity": {
                            "type": "object",
                            "properties": {
                              "instant": {
                                "type": "object",
                                "properties": {
                                  "critical": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "high": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "medium": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "low": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  }
                                }
                              },
                              "range": {
                                "type": "object",
                                "properties": {
                                  "critical": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "high": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "medium": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "low": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  }
                                }
                              },
                              "warnings": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "errors": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "policyEvents": {
                            "type": "object",
                            "properties": {
                              "instant": {
                                "type": "object",
                                "properties": {
                                  "high": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "medium": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "low": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "information": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  }
                                }
                              },
                              "range": {
                                "type": "object",
                                "properties": {
                                  "high": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "medium": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "low": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "information": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  }
                                }
                              },
                              "warnings": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "errors": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "benchmarks": {
                            "type": "object",
                            "properties": {
                              "instant": {
                                "type": "object",
                                "properties": {
                                  "docker": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "kubernetes": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  },
                                  "linux": {
                                    "type": "array",
                                    "items": {
                                      "type": "number",
                                      "format": "integer"
                                    },
                                    "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                    "example": [
                                      1554508800,
                                      32
                                    ]
                                  }
                                }
                              },
                              "range": {
                                "type": "object",
                                "properties": {
                                  "docker": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "kubernetes": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  },
                                  "linux": {
                                    "type": "array",
                                    "items": {
                                      "type": "array",
                                      "items": {
                                        "type": "number",
                                        "format": "integer"
                                      },
                                      "description": "An array of two numbers representing a metric, where the first number is the unix timestamp in ms, and the second number is the metric value.",
                                      "example": [
                                        1554508800,
                                        32
                                      ]
                                    },
                                    "description": "An array of Instant objects representing a metric over a given time frame.",
                                    "example": [
                                      [
                                        1554508800,
                                        34
                                      ],
                                      [
                                        1586451864,
                                        3
                                      ]
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "time": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "format": "integer",
                            "description": "the earliest date in all returned timeseries as a unix timestamp in ms.",
                            "example": 1588801177000
                          },
                          "to": {
                            "type": "number",
                            "format": "integer",
                            "description": "the last date in the all returned timeseries as a unix timestamp in ms.",
                            "example": 1588883737000
                          },
                          "sampling": {
                            "type": "number",
                            "format": "integer",
                            "description": "the step size between subsequent datapoints in a timeseries in ms.",
                            "example": 960000
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Returned if panel, cluster or namespace are invalid.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human-readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token"
            },
            "404": {
              "description": "No record found for customerId"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/overview?panel=SOME_STRING_VALUE&timeframe=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/secure/overview?panel=SOME_STRING_VALUE&timeframe=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/secure/overview',\n  qs: {\n    panel: 'SOME_STRING_VALUE',\n    timeframe: 'SOME_STRING_VALUE',\n    cluster: 'SOME_STRING_VALUE',\n    namespace: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secure/overview?panel=SOME_STRING_VALUE&timeframe=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secure/overview?panel=SOME_STRING_VALUE&timeframe=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/status": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Status",
          "description": "Checks the availability of the Benchmarks V2 API. If Benchmarks V2 is disabled for the customer, and no Cloud Benchmark results are available, this endpoint will return a 403. If Benchmarks V2 is disabled for the customer, but Cloud Benchmark results are available, this endpoint will return 200 with a dummy TaskId in the response body to be used to request the Cloud Benchmark results. Finally, if Benchmark V2 is enabled, this endpoint will return a 200 with no body.\n",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "dummyCloudTaskId": {
                        "type": "string",
                        "example": "123",
                        "description": "This task Id is not a real task, but is used to request Cloud Benchmark results. If there are no Cloud Benchmark results available, this endpoint will return a `403 STATUS FORBIDDEN` instead.\n"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Status Forbidden: Returned when Benchmarks V2 is disabled, and there are no Cloud Benchmark Results available. FE should hide the Benchmarks V2 UI.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/benchmarks/v2/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/scopeOptions": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Scope Options",
          "description": "Returns the list of available Scope Labels and Operators that can be used when creating a Benchmark Task. If an optional 'schema' query param is provided, only Scope Labels relevant to that schema are returned, otherwise all possible Scope Labels are returned.\n",
          "parameters": [
            {
              "name": "schema",
              "in": "query",
              "description": "Fetch the Scope Labels and Operators for this schema. Use a value returned from `/benchmarks/v2/schemas`",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "A list of supported Scope Labels",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "host.hostName",
                          "host.mac",
                          "aws.account_id",
                          "aws.region",
                          "aws.instance_id",
                          "kubernetes.cluster.name",
                          "kubernetes.node.name"
                        ]
                      },
                      "operators": {
                        "type": "array",
                        "description": "A list of supported Scope Operators",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "in",
                          "equals"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/scopeOptions?schema=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/benchmarks/v2/scopeOptions?schema=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/scopeOptions',\n  qs: {schema: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/scopeOptions?schema=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/scopeOptions?schema=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/schemas": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "List Schemas",
          "description": "Returns the list of available Benchmark Schemas.",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "schema": {
                          "type": "string",
                          "description": "The internal Schema identifier"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The Schema display name"
                        },
                        "link": {
                          "type": "string",
                          "description": "A link to the official standard"
                        }
                      }
                    },
                    "example": [
                      {
                        "schema": "kube_bench_cis-1.5",
                        "displayName": "CIS Kubernetes Benchmark 1.5",
                        "link": "https://www.cisecurity.org/benchmark/kubernetes/"
                      },
                      {
                        "schema": "kube_bench_cis-1.6",
                        "displayName": "CIS Kubernetes Benchmark 1.6",
                        "link": "https://www.cisecurity.org/benchmark/kubernetes/"
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/schemas\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/schemas"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/benchmarks/v2/schemas'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/schemas\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/schemas\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/schemas/{schemaId}": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Get Schema Controls",
          "description": "Returns the list of Controls in a given Benchmark Schemas grouped by Family.",
          "parameters": [
            {
              "name": "schemaId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "familyId": {
                          "type": "string",
                          "description": "The ID of the family."
                        },
                        "title": {
                          "type": "string",
                          "description": "The Title (name) of the family."
                        },
                        "controls": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "controlId": {
                                "type": "string",
                                "description": "The ID of the control."
                              },
                              "title": {
                                "type": "string",
                                "description": "The Title (name) of the control."
                              },
                              "level": {
                                "type": "string",
                                "description": "The CIS Level of the control."
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": [
                      {
                        "familyId": "1.1",
                        "title": "Master Node Configuration Files",
                        "controls": [
                          {
                            "controlId": "1.1.1",
                            "title": "Ensure that the API server pod specification file permissions are set to 644 or more restrictive",
                            "level": "Level 1"
                          },
                          {
                            "controlId": "1.1.2",
                            "title": "Ensure that the API server pod specification file ownership is set to root:root",
                            "level": "Level 1"
                          }
                        ]
                      },
                      {
                        "familyId": "1.2",
                        "title": "API Server",
                        "controls": [
                          {
                            "controlId": "1.2.1",
                            "title": "Ensure that the --anonymous-auth argument is set to false",
                            "level": "Level 1"
                          },
                          {
                            "controlId": "1.2.2",
                            "title": "Ensure that the --basic-auth-file argument is not set",
                            "level": "Level 1"
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/schemas/%7BschemaId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/schemas/%7BschemaId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/schemas/%7BschemaId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/schemas/%7BschemaId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/schemas/%7BschemaId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "List Tasks",
          "description": "Fetches a list of Benchmark Tasks",
          "parameters": [
            {
              "name": "filter",
              "in": "query",
              "description": "Free text filter. Searches the following fields: `name`, `scope`",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema",
              "in": "query",
              "description": "Filter by schema. Valid list returned by `/schemas` endpoint.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "name",
                            "schedule",
                            "schema"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Kube-bench Production"
                            },
                            "schedule": {
                              "type": "string",
                              "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                              "description": "A cron-like expression representing a frequency.",
                              "example": "0 9 * * 1"
                            },
                            "schema": {
                              "type": "string",
                              "description": "Benchmark Schema",
                              "enum": [
                                "kube_bench_cis-1.5",
                                "kube_bench_cis-1.6",
                                "kube_bench_gke-1.0",
                                "kube_bench_eks-1.0",
                                "kube_bench_rh-0.7",
                                "linux_bench_cis-1.1",
                                "docker_bench_security_1.0",
                                "aws_foundations_bench-1.3"
                              ]
                            },
                            "scope": {
                              "type": "string",
                              "example": "kubernetes.cluster.name=\"production\"\n"
                            },
                            "enabled": {
                              "type": "boolean",
                              "default": false
                            },
                            "excludeControlList": {
                              "type": "array",
                              "description": "A list of controlIDs to be excluded",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "1.1.1.a",
                                "1.2.2"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "createdOn",
                            "modifiedOn"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "createdOn": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "modifiedOn": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastRunOn": {
                              "type": "string",
                              "format": "date-time"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks?filter=SOME_STRING_VALUE&schema=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/benchmarks/v2/tasks?filter=SOME_STRING_VALUE&schema=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks',\n  qs: {filter: 'SOME_STRING_VALUE', schema: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/tasks?filter=SOME_STRING_VALUE&schema=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/tasks?filter=SOME_STRING_VALUE&schema=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Create Task",
          "description": "Create a new Benchmark Task",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "schedule",
                    "schema"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Kube-bench Production"
                    },
                    "schedule": {
                      "type": "string",
                      "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                      "description": "A cron-like expression representing a frequency.",
                      "example": "0 9 * * 1"
                    },
                    "schema": {
                      "type": "string",
                      "description": "Benchmark Schema",
                      "enum": [
                        "kube_bench_cis-1.5",
                        "kube_bench_cis-1.6",
                        "kube_bench_gke-1.0",
                        "kube_bench_eks-1.0",
                        "kube_bench_rh-0.7",
                        "linux_bench_cis-1.1",
                        "docker_bench_security_1.0",
                        "aws_foundations_bench-1.3"
                      ]
                    },
                    "scope": {
                      "type": "string",
                      "example": "kubernetes.cluster.name=\"production\"\n"
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    },
                    "excludeControlList": {
                      "type": "array",
                      "description": "A list of controlIDs to be excluded",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "1.1.1.a",
                        "1.2.2"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "schedule",
                          "schema"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Kube-bench Production"
                          },
                          "schedule": {
                            "type": "string",
                            "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                            "description": "A cron-like expression representing a frequency.",
                            "example": "0 9 * * 1"
                          },
                          "schema": {
                            "type": "string",
                            "description": "Benchmark Schema",
                            "enum": [
                              "kube_bench_cis-1.5",
                              "kube_bench_cis-1.6",
                              "kube_bench_gke-1.0",
                              "kube_bench_eks-1.0",
                              "kube_bench_rh-0.7",
                              "linux_bench_cis-1.1",
                              "docker_bench_security_1.0",
                              "aws_foundations_bench-1.3"
                            ]
                          },
                          "scope": {
                            "type": "string",
                            "example": "kubernetes.cluster.name=\"production\"\n"
                          },
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "excludeControlList": {
                            "type": "array",
                            "description": "A list of controlIDs to be excluded",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "1.1.1.a",
                              "1.2.2"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "createdOn",
                          "modifiedOn"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "modifiedOn": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastRunOn": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Kube-bench Production\\\",\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"schema\\\":\\\"kube_bench_cis-1.5\\\",\\\"scope\\\":\\\"kubernetes.cluster.name=\\\\\\\"production\\\\\\\"\\\\n\\\",\\\"enabled\\\":false,\\\"excludeControlList\\\":[\\\"1.1.1.a\\\",\\\"1.2.2\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/tasks \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Kube-bench Production\",\"schedule\":\"0 9 * * 1\",\"schema\":\"kube_bench_cis-1.5\",\"scope\":\"kubernetes.cluster.name=\\\"production\\\"\\n\",\"enabled\":false,\"excludeControlList\":[\"1.1.1.a\",\"1.2.2\"]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Kube-bench Production',\n    schedule: '0 9 * * 1',\n    schema: 'kube_bench_cis-1.5',\n    scope: 'kubernetes.cluster.name=\"production\"\\n',\n    enabled: false,\n    excludeControlList: ['1.1.1.a', '1.2.2']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/benchmarks/v2/tasks\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Kube-bench Production\\\",\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"schema\\\":\\\"kube_bench_cis-1.5\\\",\\\"scope\\\":\\\"kubernetes.cluster.name=\\\\\\\"production\\\\\\\"\\\\n\\\",\\\"enabled\\\":false,\\\"excludeControlList\\\":[\\\"1.1.1.a\\\",\\\"1.2.2\\\"]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Kube-bench Production\\\",\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"schema\\\":\\\"kube_bench_cis-1.5\\\",\\\"scope\\\":\\\"kubernetes.cluster.name=\\\\\\\"production\\\\\\\"\\\\n\\\",\\\"enabled\\\":false,\\\"excludeControlList\\\":[\\\"1.1.1.a\\\",\\\"1.2.2\\\"]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/benchmarks/v2/tasks\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks/{taskId}": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Get Task",
          "description": "Fetches a Benchmark Task by Id",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "schedule",
                          "schema"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Kube-bench Production"
                          },
                          "schedule": {
                            "type": "string",
                            "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                            "description": "A cron-like expression representing a frequency.",
                            "example": "0 9 * * 1"
                          },
                          "schema": {
                            "type": "string",
                            "description": "Benchmark Schema",
                            "enum": [
                              "kube_bench_cis-1.5",
                              "kube_bench_cis-1.6",
                              "kube_bench_gke-1.0",
                              "kube_bench_eks-1.0",
                              "kube_bench_rh-0.7",
                              "linux_bench_cis-1.1",
                              "docker_bench_security_1.0",
                              "aws_foundations_bench-1.3"
                            ]
                          },
                          "scope": {
                            "type": "string",
                            "example": "kubernetes.cluster.name=\"production\"\n"
                          },
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "excludeControlList": {
                            "type": "array",
                            "description": "A list of controlIDs to be excluded",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "1.1.1.a",
                              "1.2.2"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "createdOn",
                          "modifiedOn"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "modifiedOn": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastRunOn": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Delete Task",
          "description": "Delete Benchmark Task with specified task Id. If task has results then the result must be deleted before deleting the task",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks/{taskId}/enable": {
        "put": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Enable Task",
          "description": "Enables the Benchmark Task with specified task Id. If the task is already enabled, this is a no-op.",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/enable\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/enable"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/enable'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/enable\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"PUT\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D/enable\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks/{taskId}/disable": {
        "put": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Disable Task",
          "description": "Disables the Benchmark Task with specified task Id. If the task is already disabled, this is a no-op.",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/disable\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/disable"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/disable'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/disable\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"PUT\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D/disable\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks/{taskId}/run": {
        "post": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Run now",
          "description": "Runs the Benchmark Task with the specified task Id",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "description": "Set to True if the run request was successfully enqueued"
                      },
                      "runID": {
                        "type": "string",
                        "description": "The run ID (and ensuing result ID) that was created. Present IFF `success=true`.",
                        "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                      },
                      "errMsg": {
                        "type": "string",
                        "description": "A description of what went wrong. Present IFF `success=false`.",
                        "example": "could not contact redis"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/run\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/run"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/run'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/run\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D/run\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks/{taskId}/result": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Get most recent Result ID",
          "description": "Fetches most recent result Id, and optionally redirects to the correct `/tasks/{taskId}/results/{resultId}` URL",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "redirect",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Returned when `redirect` is false or not provided.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "lastRunId": {
                        "type": "string",
                        "description": "The most recent run (result) ID",
                        "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                      }
                    }
                  }
                }
              }
            },
            "204": {
              "description": "Returned when task does not exist, or it has not yet been run"
            },
            "302": {
              "description": "Returned when `redirect` is true. Redirects the browser to the URL with latest resultId",
              "headers": {
                "Location": {
                  "schema": {
                    "type": "string",
                    "example": "/api/benchmarks/v2/tasks/1/results/10"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/result?redirect=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/result?redirect=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/result',\n  qs: {redirect: 'SOME_BOOLEAN_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/result?redirect=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D/result?redirect=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks/{taskId}/results/{resultId}": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Get Result",
          "description": "Fetches Benchmark Result",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "resultId",
              "description": "Load the result with this Id. Used when the Evaluation Date dropdown is changed. If this parameter is not provided, the most recent result for the given task will be returned.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "required": [
                        "id",
                        "taskId",
                        "success",
                        "startedAt",
                        "completedAt",
                        "failureDetails",
                        "counts",
                        "countLabel",
                        "otherResultByAccount",
                        "families",
                        "labels"
                      ],
                      "properties": {
                        "id": {
                          "type": "number",
                          "example": 9
                        },
                        "taskId": {
                          "type": "number",
                          "example": 2
                        },
                        "success": {
                          "type": "boolean",
                          "example": true
                        },
                        "startedAt": {
                          "type": "string",
                          "example": "2020-11-15T01:16:02.469729Z"
                        },
                        "completedAt": {
                          "type": "string",
                          "example": "2020-11-15T01:16:02.984179Z"
                        },
                        "failureDetails": {
                          "type": "string",
                          "example": "incomplete"
                        },
                        "counts": {
                          "type": "object",
                          "properties": {
                            "resources": {
                              "type": "object",
                              "required": [
                                "passPercent",
                                "pass",
                                "warn",
                                "fail"
                              ],
                              "properties": {
                                "passPercent": {
                                  "type": "number",
                                  "example": 81
                                },
                                "pass": {
                                  "type": "number",
                                  "example": 1847
                                },
                                "warn": {
                                  "type": "number",
                                  "example": 0
                                },
                                "fail": {
                                  "type": "number",
                                  "example": 416
                                }
                              }
                            },
                            "controls": {
                              "type": "object",
                              "required": [
                                "passPercent",
                                "pass",
                                "warn",
                                "fail"
                              ],
                              "properties": {
                                "passPercent": {
                                  "type": "number",
                                  "example": 81
                                },
                                "pass": {
                                  "type": "number",
                                  "example": 1847
                                },
                                "warn": {
                                  "type": "number",
                                  "example": 0
                                },
                                "fail": {
                                  "type": "number",
                                  "example": 416
                                }
                              }
                            }
                          }
                        },
                        "countLabel": {
                          "type": "string",
                          "example": "resources",
                          "description": "Controls if counts.resources or counts.controls is displayed in the UI. Must be either 'resources' or 'counts'"
                        },
                        "otherResultByAccount": {
                          "type": "object",
                          "description": "A map with keys corresponding to AWS Account Ids",
                          "additionalProperties": {
                            "type": "object",
                            "description": "A map with keys corresponding to AWS Regions",
                            "additionalProperties": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "example": 45
                                  },
                                  "startedOn": {
                                    "type": "string",
                                    "example": "2021-02-22T20:10:33.702261Z"
                                  }
                                }
                              }
                            }
                          },
                          "example": {
                            "059797578166": {
                              "us-east-1": [
                                {
                                  "id": 45,
                                  "startedOn": "2021-02-22T20:10:33.702261Z"
                                },
                                {
                                  "id": 23,
                                  "startedOn": "2021-02-22T20:10:33.702261Z"
                                }
                              ],
                              "us-west-2": [
                                {
                                  "id": 78,
                                  "startedOn": "2021-02-22T20:10:33.702261Z"
                                }
                              ]
                            },
                            "411571310278": {
                              "us-east-1": [
                                {
                                  "id": 3,
                                  "startedOn": "2021-02-22T20:10:33.702261Z"
                                }
                              ]
                            }
                          }
                        },
                        "labels": {
                          "type": "object",
                          "description": "A key value map of labels and their values.",
                          "properties": {
                            "aws.accountId": {
                              "type": "string",
                              "example": "411571310278"
                            },
                            "aws.region": {
                              "type": "string",
                              "example": "us-east-1"
                            }
                          }
                        },
                        "families": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "familyName": {
                                "type": "string",
                                "example": "Identity and Access Management"
                              },
                              "pass": {
                                "type": "number",
                                "example": 54
                              },
                              "fail": {
                                "type": "number",
                                "example": 12
                              },
                              "warn": {
                                "type": "number",
                                "example": 0
                              },
                              "controls": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "example": "cis-5-1"
                                    },
                                    "id": {
                                      "type": "string",
                                      "example": "5.1"
                                    },
                                    "title": {
                                      "type": "string",
                                      "example": "Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports"
                                    },
                                    "description": {
                                      "type": "string",
                                      "example": "The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port 22 and RDP to port 3389."
                                    },
                                    "rationale": {
                                      "type": "string",
                                      "example": "Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise."
                                    },
                                    "result": {
                                      "type": "string",
                                      "example": "Fail"
                                    },
                                    "level": {
                                      "type": "string",
                                      "example": "Level 1"
                                    },
                                    "familyName": {
                                      "type": "string",
                                      "example": "Networking"
                                    },
                                    "resourceName": {
                                      "type": "string",
                                      "example": "security-group"
                                    },
                                    "resources": {
                                      "type": "array",
                                      "items": {
                                        "additionalProperties": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "remediation": {
                                      "type": "string",
                                      "example": "increases resource attack surface and unnecessarily raises the risk of resource compromise."
                                    },
                                    "metrics": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "metricName": {
                                            "type": "string",
                                            "example": "ResourceCount"
                                          },
                                          "timestamp": {
                                            "type": "string",
                                            "example": "2020-11-13T02:57:43.748882"
                                          },
                                          "value": {
                                            "type": "number",
                                            "example": 4
                                          },
                                          "unit": {
                                            "type": "string",
                                            "example": "Count"
                                          }
                                        }
                                      }
                                    },
                                    "metadata": {
                                      "required": [
                                        "account_id",
                                        "region",
                                        "regions"
                                      ],
                                      "properties": {
                                        "account_id": {
                                          "type": "string",
                                          "example": "845151661675"
                                        },
                                        "region": {
                                          "type": "string",
                                          "example": "us-east-2"
                                        },
                                        "regions": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "example": [
                                            "us-east-2"
                                          ]
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "totalResourceCount": {
                                      "type": "number",
                                      "example": 13
                                    },
                                    "totalResourceFailedCount": {
                                      "type": "number",
                                      "example": 4
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "alias": {
                          "type": "string",
                          "example": "AWS Production"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks/{taskId}/results/{resultId}/csv": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Download CSV",
          "description": "Downloads a CSV of a specific set of Benchmark Results",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "resultId",
              "description": "Download the result with this Id as a CSV",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "failOnly",
              "description": "Only include controls with a result of Fail or Warn",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/csv?failOnly=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/csv?failOnly=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/csv',\n  qs: {failOnly: 'SOME_BOOLEAN_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/csv?failOnly=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/csv?failOnly=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/benchmarks/v2/tasks/{taskId}/results/{resultId}/pdf": {
        "get": {
          "tags": [
            "Benchmarks V2"
          ],
          "summary": "Download PDF",
          "description": "Downloads a PDF of a specific set of Benchmark Results",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "resultId",
              "description": "Download the result with this Id as a CSV",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "failOnly",
              "description": "Only include controls with a result of Fail or Warn",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/pdf": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/pdf?failOnly=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/pdf?failOnly=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/pdf',\n  qs: {failOnly: 'SOME_BOOLEAN_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/pdf?failOnly=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/benchmarks/v2/tasks/%7BtaskId%7D/results/%7BresultId%7D/pdf?failOnly=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v1/status": {
        "get": {
          "summary": "Check the status of Compliance service.",
          "description": "Checks whether the Compliance service is available or not.",
          "tags": [
            "Compliance"
          ],
          "responses": {
            "200": {
              "description": "Successfully returned compliance status.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Forbidden access to view Compliance."
            },
            "503": {
              "description": "Service is unavailable."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v1/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v1/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/compliance/v1/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v1/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v1/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v1/standards": {
        "get": {
          "summary": "List of supported Compliance standards.",
          "description": "Fetches list of compliance standards supported by Sysdig.",
          "tags": [
            "Compliance"
          ],
          "responses": {
            "200": {
              "description": "Successfully returned compliance standards list.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "PCI_3.2",
                      "NIST_800_53"
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Forbidden access to view Compliance."
            },
            "503": {
              "description": "Service is unavailable."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v1/standards\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v1/standards"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/compliance/v1/standards'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v1/standards\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v1/standards\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v1/environments": {
        "get": {
          "summary": "List of supported Compliance environments.",
          "description": "Fetches list of compliance environments supported by Sysdig.",
          "tags": [
            "Compliance"
          ],
          "responses": {
            "200": {
              "description": "Successfully returned compliance environments list.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "kubernetes"
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Forbidden access to view Compliance."
            },
            "503": {
              "description": "Service is unavailable."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v1/environments\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v1/environments"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/compliance/v1/environments'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v1/environments\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v1/environments\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v1/controls/description": {
        "get": {
          "summary": "Get detailed description of a specific control.",
          "description": "Fetches detailed description of a given control.",
          "tags": [
            "Compliance"
          ],
          "parameters": [
            {
              "name": "standard",
              "description": "The compliance standard to be queried.",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "PCI_3.2",
                  "SOC2",
                  "NIST_800_190"
                ],
                "example": "PCI_3.2, SOC2, NIST_800_190"
              }
            },
            {
              "name": "environment",
              "description": "The environemnt to be queried for a given standard.",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "kubernetes"
                ],
                "example": "kubernetes"
              }
            },
            {
              "name": "controlId",
              "description": "The control id to be queried for a given standard.",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "2.2.1.a",
                  "3.6.1",
                  "2.1.1"
                ],
                "example": "2.2.1.a, 3.6.1, 2.1.1"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully returned detailed description of specific control.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "standard": {
                        "type": "string",
                        "example": "PCI_3.2"
                      },
                      "controlId": {
                        "type": "string",
                        "example": "2.2.1.a"
                      },
                      "description": {
                        "type": "string",
                        "example": "Long form detailed description of the control"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Forbidden access to view Compliance."
            },
            "404": {
              "description": "The compliance info could not be found."
            },
            "503": {
              "description": "Service is unavailable."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v1/controls/description?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&controlId=2.2.1.a%2C%203.6.1%2C%202.1.1\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/compliance/v1/controls/description?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&controlId=2.2.1.a%2C%203.6.1%2C%202.1.1'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v1/controls/description',\n  qs: {\n    standard: 'PCI_3.2, SOC2, NIST_800_190',\n    environment: 'kubernetes',\n    controlId: '2.2.1.a, 3.6.1, 2.1.1'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v1/controls/description?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&controlId=2.2.1.a%2C%203.6.1%2C%202.1.1\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v1/controls/description?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&controlId=2.2.1.a%2C%203.6.1%2C%202.1.1\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v1/report": {
        "get": {
          "summary": "Get the complete compliance report for a given compliance standard.",
          "description": "Fetches the complete compliance report for a given compliance standard and environment.",
          "tags": [
            "Compliance"
          ],
          "parameters": [
            {
              "name": "standard",
              "description": "The compliance standard to be queried.",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "PCI_3.2",
                  "SOC2",
                  "NIST_800_190"
                ],
                "example": "PCI_3.2, SOC2, NIST_800_190"
              }
            },
            {
              "name": "environment",
              "description": "The environemnt to be queried for a given standard.",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "kubernetes"
                ],
                "example": "kubernetes"
              }
            },
            {
              "name": "cluster",
              "description": "The cluster name scope for a given compliance standard.",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "prod",
                  "test"
                ],
                "example": "prod"
              }
            },
            {
              "name": "detail",
              "description": "To fetch the long form description of every control in the compliance report",
              "required": true,
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true,
                "example": false
              }
            },
            {
              "name": "showBulkFail",
              "description": "To be used to determine whether to show bulk failures",
              "required": false,
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true,
                "example": false
              }
            },
            {
              "name": "status",
              "description": "To filter the results by status=FAIL/PASS/WARN",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "PASS",
                  "FAIL",
                  "WARN"
                ],
                "example": "WARN"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully returned the complete compliance report for a given compliance standard and environment.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pass": {
                        "type": "number",
                        "format": "integer",
                        "description": "Total number of passing controls for the entire compliance report",
                        "example": 30
                      },
                      "fail": {
                        "type": "number",
                        "format": "integer",
                        "description": "Total number of failing controls for the entire compliance report",
                        "example": 20
                      },
                      "warn": {
                        "type": "number",
                        "format": "integer",
                        "description": "Total number of controls in warn state for the entire compliance report",
                        "example": 7
                      },
                      "unchecked": {
                        "type": "number",
                        "format": "integer",
                        "description": "Total number of controls not checked by Sysdig for the entire compliance report",
                        "example": 20
                      },
                      "checkedTotal": {
                        "type": "number",
                        "format": "integer",
                        "description": "Total number of controls checked by Sysdig for the entire compliance report",
                        "example": 57
                      },
                      "families": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pass": {
                              "type": "number",
                              "format": "integer",
                              "description": "Total number of passing controls for the compliance family",
                              "example": 7
                            },
                            "total": {
                              "type": "number",
                              "format": "integer",
                              "description": "Total number of controls for the compliance family",
                              "example": 10
                            },
                            "name": {
                              "type": "string",
                              "description": "The name / heading of the given compliance family under a compliance section",
                              "example": "Do not use vendor-supplied defaults for system passwords and other security parameters"
                            },
                            "controls": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of a single compliance control per standard",
                                    "example": "One function per server isolation"
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The control id / number of the given control",
                                    "example": "2.2.1.a"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "PASS",
                                      "FAIL",
                                      "WARN"
                                    ],
                                    "example": "PASS"
                                  },
                                  "rationale": {
                                    "type": "string",
                                    "description": "The explanation of what the checks are for a given control from Sysdig POV. This will be empty when detail=false",
                                    "example": "Sysdig has falco policies that can be enabled to detect a particular scenario"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The long form detailed description of a given control. This will be empty when detail=false",
                                    "example": "Long form decsription"
                                  },
                                  "remediations": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "type": "string",
                                          "description": "The full url to view the proof / remediation action for a given control",
                                          "example": "https://secure.sysdig.com/#/policies?tags=PCI_3.2"
                                        },
                                        "text": {
                                          "type": "string",
                                          "description": "The link text that is to be displayed for a proof/remediation url",
                                          "example": "Enable k8s auditing"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description of what the link / activity is",
                                          "example": "Schedule a CIS Benchmark to run on your infrastructure"
                                        }
                                      }
                                    }
                                  },
                                  "proofs": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "url": {
                                          "type": "string",
                                          "description": "The full url to view the proof / remediation action for a given control",
                                          "example": "https://secure.sysdig.com/#/policies?tags=PCI_3.2"
                                        },
                                        "text": {
                                          "type": "string",
                                          "description": "The link text that is to be displayed for a proof/remediation url",
                                          "example": "Enable k8s auditing"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description of what the link / activity is",
                                          "example": "Schedule a CIS Benchmark to run on your infrastructure"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "bulkFails": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "action": {
                              "type": "string",
                              "description": "The short action text for the type of remediation recommended",
                              "example": "Enable Falco Policy"
                            },
                            "controls": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the control",
                                    "example": "Enable only necessary services, protocols and daemons."
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "Control id / number",
                                    "example": "2.2.1.a"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "PASS",
                                      "FAIL",
                                      "WARN"
                                    ],
                                    "example": "FAIL"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Forbidden access to view Compliance."
            },
            "404": {
              "description": "The compliance info could not be found."
            },
            "503": {
              "description": "Service is unavailable."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v1/report?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&cluster=prod&detail=false&showBulkFail=false&status=WARN\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/compliance/v1/report?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&cluster=prod&detail=false&showBulkFail=false&status=WARN'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v1/report',\n  qs: {\n    standard: 'PCI_3.2, SOC2, NIST_800_190',\n    environment: 'kubernetes',\n    cluster: 'prod',\n    detail: 'false',\n    showBulkFail: 'false',\n    status: 'WARN'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v1/report?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&cluster=prod&detail=false&showBulkFail=false&status=WARN\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v1/report?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&cluster=prod&detail=false&showBulkFail=false&status=WARN\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v1/report/csv": {
        "get": {
          "summary": "Get the complete compliance report for a given compliance standard in CSV format.",
          "description": "Fetches the complete compliance report for a given compliance standard and environment in CSV format.",
          "tags": [
            "Compliance"
          ],
          "parameters": [
            {
              "name": "standard",
              "description": "The compliance standard to be queried.",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "PCI_3.2",
                  "SOC2",
                  "NIST_800_190"
                ],
                "example": "PCI_3.2, SOC2, NIST_800_190"
              }
            },
            {
              "name": "environment",
              "description": "The environemnt to be queried for a given standard.",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "kubernetes"
                ],
                "example": "kubernetes"
              }
            },
            {
              "name": "cluster",
              "description": "The cluster name scope for a given compliance standard.",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "prod",
                  "test"
                ],
                "example": "prod"
              }
            },
            {
              "name": "detail",
              "description": "To fetch the long form description of every control in the compliance report",
              "required": true,
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": true,
                "example": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Successfully returned the complete compliance report for a given compliance standard and environment.",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Forbidden access to view Compliance."
            },
            "404": {
              "description": "The compliance info could not be found."
            },
            "503": {
              "description": "Service is unavailable."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v1/report/csv?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&cluster=prod&detail=false\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/compliance/v1/report/csv?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&cluster=prod&detail=false'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v1/report/csv',\n  qs: {\n    standard: 'PCI_3.2, SOC2, NIST_800_190',\n    environment: 'kubernetes',\n    cluster: 'prod',\n    detail: 'false'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v1/report/csv?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&cluster=prod&detail=false\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v1/report/csv?standard=PCI_3.2%2C%20SOC2%2C%20NIST_800_190&environment=kubernetes&cluster=prod&detail=false\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/status": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Status",
          "description": "Checks whether the Compliance V2 service is available or not.",
          "responses": {
            "200": {
              "description": "Successfully returned compliance v2 status.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Forbidden access to view Compliance v2."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            },
            "503": {
              "description": "Service is unavailable."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/compliance/v2/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/scopeOptions": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Scope Options",
          "description": "Returns the list of available Scope Labels and Operators that can be used when creating a Benchmark or Compliance Task.\n",
          "parameters": [
            {
              "name": "framework",
              "in": "query",
              "description": "Fetch the Scope Labels and Operators for this framework. Use a value returned from `/compliance/v2/frameworks`",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "platform",
              "in": "query",
              "description": "Fetch the Scope Labels and Operators for this platform. Use a value returned from `/compliance/v2/frameworks/{framework}/metadata`",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "query",
              "description": "Fetch the Scope Labels and Operators for this version. Use a value returned from `/compliance/v2/frameworks/{framework}/metadata`",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "labels": {
                        "type": "array",
                        "description": "A list of supported Scope Labels",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "host.hostName",
                          "host.mac",
                          "aws.account_id",
                          "aws.region",
                          "aws.instance_id",
                          "kubernetes.cluster.name",
                          "kubernetes.node.name"
                        ]
                      },
                      "operators": {
                        "type": "array",
                        "description": "A list of supported Scope Operators",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "in",
                          "equals"
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/scopeOptions?framework=SOME_STRING_VALUE&platform=SOME_STRING_VALUE&version=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/compliance/v2/scopeOptions?framework=SOME_STRING_VALUE&platform=SOME_STRING_VALUE&version=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v2/scopeOptions',\n  qs: {\n    framework: 'SOME_STRING_VALUE',\n    platform: 'SOME_STRING_VALUE',\n    version: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/scopeOptions?framework=SOME_STRING_VALUE&platform=SOME_STRING_VALUE&version=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/scopeOptions?framework=SOME_STRING_VALUE&platform=SOME_STRING_VALUE&version=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/scope/metadata": {
        "post": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Scope Metadata",
          "description": "Provides autocompletion values for scope fields during task creation.",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "metrics"
                  ],
                  "properties": {
                    "metrics": {
                      "type": "array",
                      "description": "A single metric for querying the respective cloud regions or accounts for the customer",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "aws.region",
                        "aws.accountId",
                        "gcp.projectId",
                        "gcp.region"
                      ]
                    },
                    "filter": {
                      "type": "string"
                    },
                    "paging": {
                      "type": "string"
                    },
                    "time": {
                      "type": "string"
                    },
                    "sort": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "time": {
                        "type": "object"
                      },
                      "paging": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "number",
                            "example": 0
                          },
                          "to": {
                            "type": "number",
                            "example": 0
                          },
                          "total": {
                            "type": "number",
                            "example": 20
                          }
                        }
                      },
                      "metrics": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "aws.region"
                        ]
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "aws.region": {
                              "type": "string",
                              "example": "us-east-1"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/scope/metadata\"\n\n\tpayload := strings.NewReader(\"{\\\"metrics\\\":[\\\"aws.region\\\",\\\"aws.accountId\\\",\\\"gcp.projectId\\\",\\\"gcp.region\\\"],\\\"filter\\\":\\\"string\\\",\\\"paging\\\":\\\"string\\\",\\\"time\\\":\\\"string\\\",\\\"sort\\\":[]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/compliance/v2/scope/metadata \\\n  --header 'content-type: application/json' \\\n  --data '{\"metrics\":[\"aws.region\",\"aws.accountId\",\"gcp.projectId\",\"gcp.region\"],\"filter\":\"string\",\"paging\":\"string\",\"time\":\"string\",\"sort\":[]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/compliance/v2/scope/metadata',\n  headers: {'content-type': 'application/json'},\n  body: {\n    metrics: ['aws.region', 'aws.accountId', 'gcp.projectId', 'gcp.region'],\n    filter: 'string',\n    paging: 'string',\n    time: 'string',\n    sort: []\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/compliance/v2/scope/metadata\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"metrics\\\":[\\\"aws.region\\\",\\\"aws.accountId\\\",\\\"gcp.projectId\\\",\\\"gcp.region\\\"],\\\"filter\\\":\\\"string\\\",\\\"paging\\\":\\\"string\\\",\\\"time\\\":\\\"string\\\",\\\"sort\\\":[]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"metrics\\\":[\\\"aws.region\\\",\\\"aws.accountId\\\",\\\"gcp.projectId\\\",\\\"gcp.region\\\"],\\\"filter\\\":\\\"string\\\",\\\"paging\\\":\\\"string\\\",\\\"time\\\":\\\"string\\\",\\\"sort\\\":[]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/compliance/v2/scope/metadata\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/platforms": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "List Platforms",
          "description": "Returns the list of available Platforms.",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "description": "Represents a list of supported platforms",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "WORKLOAD",
                      "AWS",
                      "Kubernetes"
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/platforms\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/platforms"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/compliance/v2/platforms'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/platforms\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/platforms\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/frameworks": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "List Frameworks",
          "description": "Returns the list of available Frameworks.",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "framework": {
                          "type": "string",
                          "description": "Represents a grouping of standards",
                          "example": "kube_bench"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Represents the readable name of a framework",
                          "example": "CIS Kubernetes Benchmark"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/frameworks\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/frameworks"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/compliance/v2/frameworks'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/frameworks\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/frameworks\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/frameworks/{framework}/metadata": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Get Framework Metadata",
          "description": "Returns the list of versions and platforms for a given framework.",
          "parameters": [
            {
              "name": "framework",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "versions": {
                        "type": "array",
                        "description": "The versions that belong to the framework.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "Latest"
                        ]
                      },
                      "platforms": {
                        "type": "array",
                        "description": "The platforms that belong to the framework.",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "WORKLOAD",
                          "AWS"
                        ]
                      },
                      "type": {
                        "type": "string",
                        "example": "Compliance"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/frameworks/%7Bframework%7D/metadata\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/frameworks/%7Bframework%7D/metadata"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v2/frameworks/%7Bframework%7D/metadata'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/frameworks/%7Bframework%7D/metadata\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/frameworks/%7Bframework%7D/metadata\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/schemas/{schemaID}": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Get Schema Details",
          "description": "Returns the schema details (controlIDs/titles) for a given schemaID.",
          "parameters": [
            {
              "name": "schemaID",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "familyId",
                        "title",
                        "controls"
                      ],
                      "properties": {
                        "familyId": {
                          "type": "string",
                          "example": "1.1"
                        },
                        "title": {
                          "type": "string",
                          "example": "Master Node Configuration Files"
                        },
                        "controls": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "controlId",
                              "title",
                              "level"
                            ],
                            "properties": {
                              "controlId": {
                                "type": "string",
                                "example": "1.1.1"
                              },
                              "title": {
                                "type": "string",
                                "example": "Ensure that the API server pod specification file permissions are set to 644 or more restrictive"
                              },
                              "level": {
                                "type": "string",
                                "example": "Level 1"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/schemas/%7BschemaID%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/schemas/%7BschemaID%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v2/schemas/%7BschemaID%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/schemas/%7BschemaID%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/schemas/%7BschemaID%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/tasks": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "List Tasks",
          "description": "Fetches a list of Benchmark and Compliance Tasks",
          "parameters": [
            {
              "name": "filter",
              "in": "query",
              "description": "Free text filter. Searches on the following fields: `name`, `scope`",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "framework",
              "in": "query",
              "description": "Filter by framework. Valid list returned by `/compliance/v2/frameworks` endpoint.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "platform",
              "in": "query",
              "description": "Filter by platform: AWS, GCP, IBM, WORKLOAD, Kubernetes, Docker, Linux",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "version",
              "in": "query",
              "description": "Filter by version",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "name",
                            "schedule",
                            "framework",
                            "platform",
                            "version"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Kube-bench Production"
                            },
                            "schedule": {
                              "type": "string",
                              "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                              "description": "A cron-like expression representing a frequency.",
                              "example": "0 9 * * 1"
                            },
                            "schema": {
                              "type": "string",
                              "description": "Benchmark and Compliance Schemas",
                              "enum": [
                                "kube_bench_cis-1.5",
                                "kube_bench_cis-1.6",
                                "kube_bench_gke-1.0",
                                "kube_bench_eks-1.0",
                                "kube_bench_rh-0.7",
                                "linux_bench_cis-1.1",
                                "docker_bench_security_1.0",
                                "aws_foundations_bench-1.3",
                                "NIST-800-53-Rev4-WORKLOAD",
                                "NIST-800-53-Rev4-AWS",
                                "NIST-800-53-Rev5-WORKLOAD",
                                "NIST-800-53-Rev5-AWS",
                                "NIST-800-190-WORKLOAD"
                              ]
                            },
                            "scope": {
                              "type": "string",
                              "example": "kubernetes.cluster.name=\"production\"\n"
                            },
                            "framework": {
                              "type": "string",
                              "example": "SOC2"
                            },
                            "platform": {
                              "type": "string",
                              "example": "WORKLOAD"
                            },
                            "version": {
                              "type": "string",
                              "example": "Latest"
                            },
                            "enabled": {
                              "type": "boolean",
                              "default": false
                            },
                            "excludeControlList": {
                              "type": "array",
                              "description": "A list of controlIDs to be excluded",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "1.1.1.a",
                                "1.2.2"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "createdOn",
                            "modifiedOn",
                            "counts",
                            "readOnly",
                            "state",
                            "lastRunStartedAt",
                            "lastRunStartedId",
                            "lastRunCompletedAt",
                            "lastRunCompletedId"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "example": 1
                            },
                            "createdOn": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "modifiedOn": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "counts": {
                              "type": "object",
                              "properties": {
                                "resources": {
                                  "type": "object",
                                  "required": [
                                    "fail"
                                  ],
                                  "properties": {
                                    "fail": {
                                      "type": "number",
                                      "example": 0
                                    }
                                  }
                                },
                                "controls": {
                                  "type": "object",
                                  "required": [
                                    "passPercent",
                                    "pass",
                                    "warn",
                                    "fail"
                                  ],
                                  "properties": {
                                    "passPercent": {
                                      "type": "number",
                                      "example": 100
                                    },
                                    "pass": {
                                      "type": "number",
                                      "example": 9
                                    },
                                    "warn": {
                                      "type": "number",
                                      "example": 0
                                    },
                                    "fail": {
                                      "type": "number",
                                      "example": 0
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": {
                              "type": "boolean",
                              "default": false
                            },
                            "state": {
                              "type": "string",
                              "description": "Current lifecycle state of the task",
                              "enum": [
                                "Complete",
                                "Running",
                                "NeverRun"
                              ]
                            },
                            "lastRunStartedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastRunStartedId": {
                              "type": "string",
                              "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                            },
                            "lastRunCompletedAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "lastRunCompletedId": {
                              "type": "string",
                              "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "404": {
              "description": "The compliance info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks?filter=SOME_STRING_VALUE&framework=SOME_STRING_VALUE&platform=SOME_STRING_VALUE&version=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/compliance/v2/tasks?filter=SOME_STRING_VALUE&framework=SOME_STRING_VALUE&platform=SOME_STRING_VALUE&version=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks',\n  qs: {\n    filter: 'SOME_STRING_VALUE',\n    framework: 'SOME_STRING_VALUE',\n    platform: 'SOME_STRING_VALUE',\n    version: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/tasks?filter=SOME_STRING_VALUE&framework=SOME_STRING_VALUE&platform=SOME_STRING_VALUE&version=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/tasks?filter=SOME_STRING_VALUE&framework=SOME_STRING_VALUE&platform=SOME_STRING_VALUE&version=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Create Task",
          "description": "Creates a new Benchmark or Compliance Task. If schema is not specified then framework, platform, and version must be specified. If there is no version, use `Latest`.\n",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "schedule",
                    "framework",
                    "platform",
                    "version"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "example": "Kube-bench Production"
                    },
                    "schedule": {
                      "type": "string",
                      "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                      "description": "A cron-like expression representing a frequency.",
                      "example": "0 9 * * 1"
                    },
                    "schema": {
                      "type": "string",
                      "description": "Benchmark and Compliance Schemas",
                      "enum": [
                        "kube_bench_cis-1.5",
                        "kube_bench_cis-1.6",
                        "kube_bench_gke-1.0",
                        "kube_bench_eks-1.0",
                        "kube_bench_rh-0.7",
                        "linux_bench_cis-1.1",
                        "docker_bench_security_1.0",
                        "aws_foundations_bench-1.3",
                        "NIST-800-53-Rev4-WORKLOAD",
                        "NIST-800-53-Rev4-AWS",
                        "NIST-800-53-Rev5-WORKLOAD",
                        "NIST-800-53-Rev5-AWS",
                        "NIST-800-190-WORKLOAD"
                      ]
                    },
                    "scope": {
                      "type": "string",
                      "example": "kubernetes.cluster.name=\"production\"\n"
                    },
                    "framework": {
                      "type": "string",
                      "example": "SOC2"
                    },
                    "platform": {
                      "type": "string",
                      "example": "WORKLOAD"
                    },
                    "version": {
                      "type": "string",
                      "example": "Latest"
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    },
                    "excludeControlList": {
                      "type": "array",
                      "description": "A list of controlIDs to be excluded",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "1.1.1.a",
                        "1.2.2"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "schedule",
                          "framework",
                          "platform",
                          "version"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Kube-bench Production"
                          },
                          "schedule": {
                            "type": "string",
                            "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                            "description": "A cron-like expression representing a frequency.",
                            "example": "0 9 * * 1"
                          },
                          "schema": {
                            "type": "string",
                            "description": "Benchmark and Compliance Schemas",
                            "enum": [
                              "kube_bench_cis-1.5",
                              "kube_bench_cis-1.6",
                              "kube_bench_gke-1.0",
                              "kube_bench_eks-1.0",
                              "kube_bench_rh-0.7",
                              "linux_bench_cis-1.1",
                              "docker_bench_security_1.0",
                              "aws_foundations_bench-1.3",
                              "NIST-800-53-Rev4-WORKLOAD",
                              "NIST-800-53-Rev4-AWS",
                              "NIST-800-53-Rev5-WORKLOAD",
                              "NIST-800-53-Rev5-AWS",
                              "NIST-800-190-WORKLOAD"
                            ]
                          },
                          "scope": {
                            "type": "string",
                            "example": "kubernetes.cluster.name=\"production\"\n"
                          },
                          "framework": {
                            "type": "string",
                            "example": "SOC2"
                          },
                          "platform": {
                            "type": "string",
                            "example": "WORKLOAD"
                          },
                          "version": {
                            "type": "string",
                            "example": "Latest"
                          },
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "excludeControlList": {
                            "type": "array",
                            "description": "A list of controlIDs to be excluded",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "1.1.1.a",
                              "1.2.2"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "createdOn",
                          "modifiedOn"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "modifiedOn": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Kube-bench Production\\\",\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"schema\\\":\\\"kube_bench_cis-1.5\\\",\\\"scope\\\":\\\"kubernetes.cluster.name=\\\\\\\"production\\\\\\\"\\\\n\\\",\\\"framework\\\":\\\"SOC2\\\",\\\"platform\\\":\\\"WORKLOAD\\\",\\\"version\\\":\\\"Latest\\\",\\\"enabled\\\":false,\\\"excludeControlList\\\":[\\\"1.1.1.a\\\",\\\"1.2.2\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/compliance/v2/tasks \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Kube-bench Production\",\"schedule\":\"0 9 * * 1\",\"schema\":\"kube_bench_cis-1.5\",\"scope\":\"kubernetes.cluster.name=\\\"production\\\"\\n\",\"framework\":\"SOC2\",\"platform\":\"WORKLOAD\",\"version\":\"Latest\",\"enabled\":false,\"excludeControlList\":[\"1.1.1.a\",\"1.2.2\"]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Kube-bench Production',\n    schedule: '0 9 * * 1',\n    schema: 'kube_bench_cis-1.5',\n    scope: 'kubernetes.cluster.name=\"production\"\\n',\n    framework: 'SOC2',\n    platform: 'WORKLOAD',\n    version: 'Latest',\n    enabled: false,\n    excludeControlList: ['1.1.1.a', '1.2.2']\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/compliance/v2/tasks\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Kube-bench Production\\\",\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"schema\\\":\\\"kube_bench_cis-1.5\\\",\\\"scope\\\":\\\"kubernetes.cluster.name=\\\\\\\"production\\\\\\\"\\\\n\\\",\\\"framework\\\":\\\"SOC2\\\",\\\"platform\\\":\\\"WORKLOAD\\\",\\\"version\\\":\\\"Latest\\\",\\\"enabled\\\":false,\\\"excludeControlList\\\":[\\\"1.1.1.a\\\",\\\"1.2.2\\\"]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Kube-bench Production\\\",\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"schema\\\":\\\"kube_bench_cis-1.5\\\",\\\"scope\\\":\\\"kubernetes.cluster.name=\\\\\\\"production\\\\\\\"\\\\n\\\",\\\"framework\\\":\\\"SOC2\\\",\\\"platform\\\":\\\"WORKLOAD\\\",\\\"version\\\":\\\"Latest\\\",\\\"enabled\\\":false,\\\"excludeControlList\\\":[\\\"1.1.1.a\\\",\\\"1.2.2\\\"]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/compliance/v2/tasks\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/tasks/{taskId}": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Get Task",
          "description": "Fetches a Benchmark or Compliance Task by Id",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "name",
                          "schedule",
                          "framework",
                          "platform",
                          "version"
                        ],
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "Kube-bench Production"
                          },
                          "schedule": {
                            "type": "string",
                            "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                            "description": "A cron-like expression representing a frequency.",
                            "example": "0 9 * * 1"
                          },
                          "schema": {
                            "type": "string",
                            "description": "Benchmark and Compliance Schemas",
                            "enum": [
                              "kube_bench_cis-1.5",
                              "kube_bench_cis-1.6",
                              "kube_bench_gke-1.0",
                              "kube_bench_eks-1.0",
                              "kube_bench_rh-0.7",
                              "linux_bench_cis-1.1",
                              "docker_bench_security_1.0",
                              "aws_foundations_bench-1.3",
                              "NIST-800-53-Rev4-WORKLOAD",
                              "NIST-800-53-Rev4-AWS",
                              "NIST-800-53-Rev5-WORKLOAD",
                              "NIST-800-53-Rev5-AWS",
                              "NIST-800-190-WORKLOAD"
                            ]
                          },
                          "scope": {
                            "type": "string",
                            "example": "kubernetes.cluster.name=\"production\"\n"
                          },
                          "framework": {
                            "type": "string",
                            "example": "SOC2"
                          },
                          "platform": {
                            "type": "string",
                            "example": "WORKLOAD"
                          },
                          "version": {
                            "type": "string",
                            "example": "Latest"
                          },
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "excludeControlList": {
                            "type": "array",
                            "description": "A list of controlIDs to be excluded",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "1.1.1.a",
                              "1.2.2"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "createdOn",
                          "modifiedOn",
                          "counts",
                          "readOnly",
                          "state",
                          "lastRunStartedAt",
                          "lastRunStartedId",
                          "lastRunCompletedAt",
                          "lastRunCompletedId"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "modifiedOn": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "counts": {
                            "type": "object",
                            "properties": {
                              "resources": {
                                "type": "object",
                                "required": [
                                  "fail"
                                ],
                                "properties": {
                                  "fail": {
                                    "type": "number",
                                    "example": 0
                                  }
                                }
                              },
                              "controls": {
                                "type": "object",
                                "required": [
                                  "passPercent",
                                  "pass",
                                  "warn",
                                  "fail"
                                ],
                                "properties": {
                                  "passPercent": {
                                    "type": "number",
                                    "example": 100
                                  },
                                  "pass": {
                                    "type": "number",
                                    "example": 9
                                  },
                                  "warn": {
                                    "type": "number",
                                    "example": 0
                                  },
                                  "fail": {
                                    "type": "number",
                                    "example": 0
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": {
                            "type": "boolean",
                            "default": false
                          },
                          "state": {
                            "type": "string",
                            "description": "Current lifecycle state of the task",
                            "enum": [
                              "Complete",
                              "Running",
                              "NeverRun"
                            ]
                          },
                          "lastRunStartedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastRunStartedId": {
                            "type": "string",
                            "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                          },
                          "lastRunCompletedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastRunCompletedId": {
                            "type": "string",
                            "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "404": {
              "description": "The compliance info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/tasks/%7BtaskId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Delete Task",
          "description": "Delete Benchmark or Compliance Task with specified task Id. If task has reports then the report must be deleted before deleting the task",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "404": {
              "description": "The compliance info could not be found."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/compliance/v2/tasks/%7BtaskId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/tasks/{taskId}/enable": {
        "put": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Enable Task",
          "description": "Enables the Benchmark or Compliance Task with specified task Id. If the task is already enabled, this is a no-op.",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "404": {
              "description": "The compliance info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/enable\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/enable"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/enable'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/enable\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"PUT\", \"/api/compliance/v2/tasks/%7BtaskId%7D/enable\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/tasks/{taskId}/disable": {
        "put": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Disable Task",
          "description": "Disables the Benchmark or Compliance Task with specified task Id. If the task is already disabled, this is a no-op.",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "404": {
              "description": "The compliance info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/disable\"\n\n\treq, _ := http.NewRequest(\"PUT\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/disable"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/disable'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/disable\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"PUT\", \"/api/compliance/v2/tasks/%7BtaskId%7D/disable\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/tasks/{taskId}/run": {
        "post": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Run now",
          "description": "Runs the Benchmark or Compliance Task with the specified task Id. If its a Compliance Task then this endpoint will return a 403 status code. This endpoint will return a 200 status code if it is a Host Benchmark.",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "isTest",
              "in": "query",
              "required": true,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "description": "Set to True if the run request was successfully enqueued"
                      },
                      "runID": {
                        "type": "string",
                        "description": "The run ID (and ensuing report ID) that was created. Present IFF `success=true`.",
                        "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                      },
                      "errMsg": {
                        "type": "string",
                        "description": "A description of what went wrong. Present IFF `success=false`.",
                        "example": "could not contact redis"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Status Forbidden: Returned when the endpoint is provided a compliance task Id."
            },
            "404": {
              "description": "The compliance info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/run?isTest=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/run?isTest=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/run',\n  qs: {isTest: 'SOME_BOOLEAN_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/run?isTest=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/compliance/v2/tasks/%7BtaskId%7D/run?isTest=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/tasks/{taskId}/counts/control": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Control Counts",
          "description": "Returns the control counts for the latest reportID for a Benchmark or Compliance task",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "passPercent",
                      "pass",
                      "warn",
                      "fail"
                    ],
                    "properties": {
                      "passPercent": {
                        "type": "number",
                        "example": 100
                      },
                      "pass": {
                        "type": "number",
                        "example": 9
                      },
                      "warn": {
                        "type": "number",
                        "example": 0
                      },
                      "fail": {
                        "type": "number",
                        "example": 0
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/counts/control\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/counts/control"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/counts/control'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/counts/control\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/tasks/%7BtaskId%7D/counts/control\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/tasks/{taskId}/reports": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Latest Report",
          "description": "Fetches the latest reportID for a Benchmark or Compliance task",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "reportID": {
                        "type": "string",
                        "example": "74de661f-502e-496a-b119-8121e42248b9"
                      }
                    }
                  }
                }
              }
            },
            "204": {
              "description": "Returned when a report has not yet been generated for the task."
            },
            "400": {
              "description": "The given request is invalid."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/reports\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/reports"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/reports'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/reports\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/tasks/%7BtaskId%7D/reports\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/compliance/v2/tasks/{taskId}/reports/{reportID}": {
        "get": {
          "tags": [
            "Compliance V2"
          ],
          "summary": "Get Report",
          "description": "Fetches Compliance or Benchmark Task Report by Id",
          "parameters": [
            {
              "name": "taskId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "reportID",
              "description": "Fetch the report with this Id.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "required": [
                      "id",
                      "taskId",
                      "startedAt",
                      "completedAt",
                      "fromTime",
                      "toTime",
                      "customerId",
                      "reportType",
                      "schema",
                      "framework",
                      "platform",
                      "version",
                      "counts",
                      "families",
                      "otherResults",
                      "labels"
                    ],
                    "properties": {
                      "id": {
                        "type": "number",
                        "example": 9
                      },
                      "taskId": {
                        "type": "number",
                        "example": 2
                      },
                      "reportType": {
                        "type": "string",
                        "description": "Type of Report",
                        "enum": [
                          "compliance_report",
                          "benchmarks_report"
                        ]
                      },
                      "schema": {
                        "type": "string",
                        "description": "The schema represents the complete name of a framework, version, and platform.",
                        "example": "SOC2-WORKLOAD"
                      },
                      "framework": {
                        "type": "string",
                        "description": "The framework represents a grouping of standards.",
                        "example": "SOC2"
                      },
                      "platform": {
                        "type": "string",
                        "description": "The platform that belongs to the framework.",
                        "example": "WORKLOAD"
                      },
                      "version": {
                        "type": "string",
                        "description": "The version that belongs to the framework.",
                        "example": "Latest"
                      },
                      "startedAt": {
                        "type": "string",
                        "example": "2021-10-07T18:45:34.899960227Z"
                      },
                      "completedAt": {
                        "type": "string",
                        "example": "2021-10-08T18:45:34.175162448Z"
                      },
                      "fromTime": {
                        "type": "string",
                        "example": "2021-10-07T18:45:34.899960227Z"
                      },
                      "toTime": {
                        "type": "string",
                        "example": "2021-10-08T18:45:34.899960227Z"
                      },
                      "customerId": {
                        "type": "number",
                        "example": 1
                      },
                      "counts": {
                        "type": "object",
                        "properties": {
                          "resources": {
                            "type": "object",
                            "required": [
                              "fail"
                            ],
                            "properties": {
                              "fail": {
                                "type": "number",
                                "example": 0
                              }
                            }
                          },
                          "controls": {
                            "type": "object",
                            "required": [
                              "passPercent",
                              "pass",
                              "warn",
                              "fail"
                            ],
                            "properties": {
                              "passPercent": {
                                "type": "number",
                                "example": 100
                              },
                              "pass": {
                                "type": "number",
                                "example": 9
                              },
                              "warn": {
                                "type": "number",
                                "example": 0
                              },
                              "fail": {
                                "type": "number",
                                "example": 0
                              }
                            }
                          }
                        }
                      },
                      "families": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "Control Activities"
                            },
                            "counts": {
                              "type": "object",
                              "properties": {
                                "resources": {
                                  "type": "object",
                                  "required": [
                                    "fail"
                                  ],
                                  "properties": {
                                    "fail": {
                                      "type": "number",
                                      "example": 0
                                    }
                                  }
                                },
                                "controls": {
                                  "type": "object",
                                  "required": [
                                    "passPercent",
                                    "pass",
                                    "warn",
                                    "fail"
                                  ],
                                  "properties": {
                                    "passPercent": {
                                      "type": "number",
                                      "example": 100
                                    },
                                    "pass": {
                                      "type": "number",
                                      "example": 9
                                    },
                                    "warn": {
                                      "type": "number",
                                      "example": 0
                                    },
                                    "fail": {
                                      "type": "number",
                                      "example": 0
                                    }
                                  }
                                }
                              }
                            },
                            "controls": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "example": "Control Selection and Development for objectives"
                                  },
                                  "id": {
                                    "type": "string",
                                    "example": "CC5.2"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "Fail",
                                      "Pass",
                                      "Warn"
                                    ]
                                  },
                                  "description": {
                                    "type": "string",
                                    "example": "The entity also selects and develops general control activities over technology to support the achievement of objectives."
                                  },
                                  "rationale": {
                                    "type": "string",
                                    "example": "Falco runtime rules detect security relevant events on kernel syscalls and Kubernetes audit log in real time. Enabling Kubernetes audit log lets Falco rules monitor a cluster for security issues on Kubernetes events."
                                  },
                                  "familyName": {
                                    "type": "string",
                                    "example": "Control Activities"
                                  },
                                  "remediations": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "Disallowed K8s User: Consider restricting k8s users in your kubernetes cluster"
                                    }
                                  },
                                  "proofs": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "example": "Kubernetes Auditing is enabled"
                                    }
                                  },
                                  "resources": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "example": "onprem-ac"
                                        },
                                        "remediations": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "example": "Disallowed K8s User: Consider restricting k8s users in your kubernetes cluster"
                                          }
                                        },
                                        "resourceType": {
                                          "type": "string",
                                          "example": "kubernetes.cluster.name"
                                        },
                                        "falcoRulesTriggered": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "example": "Disallowed K8s User"
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "index": {
                                    "type": "number",
                                    "example": 3
                                  },
                                  "counts": {
                                    "type": "object",
                                    "properties": {
                                      "resources": {
                                        "type": "object",
                                        "required": [
                                          "fail"
                                        ],
                                        "properties": {
                                          "fail": {
                                            "type": "number",
                                            "example": 0
                                          }
                                        }
                                      },
                                      "controls": {
                                        "type": "object",
                                        "required": [
                                          "passPercent",
                                          "pass",
                                          "warn",
                                          "fail"
                                        ],
                                        "properties": {
                                          "passPercent": {
                                            "type": "number",
                                            "example": 100
                                          },
                                          "pass": {
                                            "type": "number",
                                            "example": 9
                                          },
                                          "warn": {
                                            "type": "number",
                                            "example": 0
                                          },
                                          "fail": {
                                            "type": "number",
                                            "example": 0
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "otherResults": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "startedAt",
                            "labels"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "6994066a-6f3e-4291-8be5-2cfccd7579c0"
                            },
                            "startedAt": {
                              "type": "string",
                              "example": "2021-10-11T05:55:34.240453002Z"
                            },
                            "labels": {
                              "type": "object",
                              "properties": {
                                "runID": {
                                  "type": "string",
                                  "example": "6994066a-6f3e-4291-8be5-2cfccd7579c0"
                                },
                                "taskID": {
                                  "type": "string",
                                  "example": "28"
                                }
                              }
                            }
                          }
                        }
                      },
                      "labels": {
                        "type": "object",
                        "properties": {
                          "runID": {
                            "type": "string",
                            "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                          },
                          "taskID": {
                            "type": "string",
                            "example": "674088d3-c9a8-4f04-b47a-5ade04d36faf"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "204": {
              "description": "Returned when report for the task does not exist."
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/reports/%7BreportID%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/reports/%7BreportID%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/reports/%7BreportID%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/compliance/v2/tasks/%7BtaskId%7D/reports/%7BreportID%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/compliance/v2/tasks/%7BtaskId%7D/reports/%7BreportID%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/reporting/v1/{domain}/{reportType}/config": {
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "enum": [
                "scanning"
              ]
            },
            "required": true,
            "description": "The data domain of the report. The only supported value is `scanning`",
            "example": "scanning"
          },
          {
            "in": "path",
            "name": "reportType",
            "schema": {
              "type": "string",
              "enum": [
                "vulnerabilities",
                "policies"
              ]
            },
            "required": true,
            "description": "The kind of report to generate",
            "example": "vulnerabilities"
          }
        ],
        "get": {
          "summary": "Get all the options available to define a report configuration",
          "tags": [
            "Reporting"
          ],
          "responses": {
            "200": {
              "description": "Options available to define a report configuration",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "availableColumns": {
                        "type": "array",
                        "readOnly": true,
                        "description": "The available columns that can be chosen and included in a generated report",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dataKey": {
                              "type": "string",
                              "description": "Column identifier",
                              "example": "severity"
                            },
                            "label": {
                              "type": "string",
                              "nullable": true,
                              "description": "Human-readable name for the column",
                              "example": "Severity"
                            },
                            "isRequired": {
                              "type": "boolean",
                              "description": "Whether the columns must be included when specifying a report configuration",
                              "example": true
                            }
                          }
                        }
                      },
                      "availableFilters": {
                        "type": "array",
                        "readOnly": true,
                        "description": "The available conditions that can be set to filter the results in a generated report",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "string",
                                "number",
                                "boolean",
                                "stringarray"
                              ],
                              "description": "Data type for the filter values",
                              "example": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "Filter identifier",
                              "example": "severity"
                            },
                            "label": {
                              "type": "string",
                              "nullable": true,
                              "description": "Human-readable label for the filter",
                              "example": "Severity"
                            },
                            "labelSuffix": {
                              "type": "string",
                              "nullable": true,
                              "description": "Human-readable suffix for the filter value",
                              "example": "sev."
                            },
                            "allowedValues": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ],
                                    "description": "One of the allowed value for the filter",
                                    "example": "high"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "Human-readable label for the filter value",
                                    "example": "High"
                                  }
                                }
                              },
                              "description": "Full list of the allowed values for the filter"
                            },
                            "min": {
                              "type": "number",
                              "nullable": true,
                              "description": "Minimum allowed value for filters with type number",
                              "example": 0
                            },
                            "max": {
                              "type": "number",
                              "nullable": true,
                              "description": "Maximum allowed value for filters with type number",
                              "example": 10
                            },
                            "comparisons": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "Optional list of comparison operators which can be used when applying the filter",
                              "example": [
                                ">=",
                                "<="
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/vulnerabilities/config\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/vulnerabilities/config"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/vulnerabilities/config'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/reporting/v1/scanning/vulnerabilities/config\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/reporting/v1/scanning/vulnerabilities/config\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/reporting/v1/{domain}/{reportType}/preview": {
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "enum": [
                "scanning"
              ]
            },
            "required": true,
            "description": "The data domain of the report. The only supported value is `scanning`",
            "example": "scanning"
          },
          {
            "in": "path",
            "name": "reportType",
            "schema": {
              "type": "string",
              "enum": [
                "vulnerabilities",
                "policies"
              ]
            },
            "required": true,
            "description": "The kind of report to generate",
            "example": "vulnerabilities"
          }
        ],
        "post": {
          "summary": "Get a result preview of a report with the given configuration",
          "tags": [
            "Reporting"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Configuration of a report generation",
                  "required": [
                    "scope",
                    "columns",
                    "sorting"
                  ],
                  "properties": {
                    "scope": {
                      "type": "object",
                      "description": "Filter the results based on the given scope",
                      "properties": {
                        "imageId": {
                          "type": "string",
                          "nullable": true,
                          "description": "restrict the report generation on the given image ID",
                          "example": "sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f"
                        },
                        "runtimeEnabled": {
                          "type": "boolean",
                          "description": "whether the report should be filtered using a runtime scope",
                          "example": true
                        },
                        "runtimeScope": {
                          "type": "string",
                          "nullable": true,
                          "description": "An AND-composed string of predicates that restrict the scope of the generated report"
                        },
                        "registry": {
                          "type": "string",
                          "nullable": true,
                          "description": "Docker registry",
                          "example": "docker.io"
                        },
                        "repository": {
                          "type": "string",
                          "nullable": true,
                          "description": "Docker image repository",
                          "example": "debian"
                        },
                        "tag": {
                          "type": "string",
                          "nullable": true,
                          "description": "Docker image tag",
                          "example": "stable"
                        }
                      }
                    },
                    "queryFilters": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "number"
                              },
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            ],
                            "description": "Filter value"
                          },
                          "comparision": {
                            "type": "string",
                            "nullable": true,
                            "enum": [
                              "<",
                              "<=",
                              "=",
                              ">=",
                              ">"
                            ],
                            "description": "Comparison operator to be applied with the chosen filter value"
                          }
                        }
                      },
                      "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                      "example": {
                        "vulnType": {
                          "value": "os"
                        },
                        "fixAvailable": {
                          "value": false
                        },
                        "severity": {
                          "value": "high",
                          "comparison": ">="
                        }
                      }
                    },
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "The columns to be included in the generated report, in the order desired",
                      "example": [
                        "vulnId",
                        "severity",
                        "package"
                      ]
                    },
                    "sorting": {
                      "type": "array",
                      "description": "Sorting criteria",
                      "items": {
                        "type": "object",
                        "required": [
                          "column",
                          "sortOrder"
                        ],
                        "properties": {
                          "column": {
                            "type": "string",
                            "description": "The column identifier chosen for sorting",
                            "example": "vulnId"
                          },
                          "sortOrder": {
                            "type": "string",
                            "enum": [
                              "asc",
                              "desc"
                            ],
                            "description": "The sorting order (ascending or descending) for the given column",
                            "example": "asc"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The result preview for the requested report configuration",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "nullable": true,
                        "description": "A record of the requested report. Record keys are the column identifiers."
                      },
                      "example": {
                        "vulnId": "CVE-2017-14062",
                        "severity": "High",
                        "package": "log4j"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid report configuration"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/vulnerabilities/preview\"\n\n\tpayload := strings.NewReader(\"{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/vulnerabilities/preview \\\n  --header 'content-type: application/json' \\\n  --data '{\"scope\":{\"imageId\":\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\",\"runtimeEnabled\":true,\"runtimeScope\":\"string\",\"registry\":\"docker.io\",\"repository\":\"debian\",\"tag\":\"stable\"},\"queryFilters\":{\"vulnType\":{\"value\":\"os\"},\"fixAvailable\":{\"value\":false},\"severity\":{\"value\":\"high\",\"comparison\":\">=\"}},\"columns\":[\"vulnId\",\"severity\",\"package\"],\"sorting\":[{\"column\":\"vulnId\",\"sortOrder\":\"asc\"}]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/vulnerabilities/preview',\n  headers: {'content-type': 'application/json'},\n  body: {\n    scope: {\n      imageId: 'sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f',\n      runtimeEnabled: true,\n      runtimeScope: 'string',\n      registry: 'docker.io',\n      repository: 'debian',\n      tag: 'stable'\n    },\n    queryFilters: {\n      vulnType: {value: 'os'},\n      fixAvailable: {value: false},\n      severity: {value: 'high', comparison: '>='}\n    },\n    columns: ['vulnId', 'severity', 'package'],\n    sorting: [{column: 'vulnId', sortOrder: 'asc'}]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/reporting/v1/scanning/vulnerabilities/preview\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/reporting/v1/scanning/vulnerabilities/preview\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/reporting/v1/{domain}/schedules": {
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "enum": [
                "scanning"
              ]
            },
            "required": true,
            "description": "The data domain of the report. The only supported value is `scanning`",
            "example": "scanning"
          }
        ],
        "get": {
          "summary": "List all the saved schedules for report generation",
          "tags": [
            "Reporting"
          ],
          "responses": {
            "200": {
              "description": "The list of all saved schedules for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Schedule and configuration definition for a report generation",
                      "required": [
                        "id",
                        "name",
                        "configuration",
                        "schedule",
                        "format",
                        "enabled",
                        "notificationChannelIds"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique opaque identifier of the report generation schedule.",
                          "example": "schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                        },
                        "name": {
                          "type": "string",
                          "description": "The title for the generated reports.",
                          "example": "Weekly vulnerability report"
                        },
                        "description": {
                          "type": "string",
                          "description": "A human-readable description for the report content.",
                          "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                        },
                        "reportType": {
                          "type": "string",
                          "description": "The kind of report to generate",
                          "enum": [
                            "vulnerabilities",
                            "policies"
                          ],
                          "example": "vulnerabilities"
                        },
                        "configuration": {
                          "type": "object",
                          "description": "Configuration of a report generation",
                          "required": [
                            "scope",
                            "columns",
                            "sorting"
                          ],
                          "properties": {
                            "scope": {
                              "type": "object",
                              "description": "Filter the results based on the given scope",
                              "properties": {
                                "imageId": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "restrict the report generation on the given image ID",
                                  "example": "sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f"
                                },
                                "runtimeEnabled": {
                                  "type": "boolean",
                                  "description": "whether the report should be filtered using a runtime scope",
                                  "example": true
                                },
                                "runtimeScope": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "An AND-composed string of predicates that restrict the scope of the generated report"
                                },
                                "registry": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Docker registry",
                                  "example": "docker.io"
                                },
                                "repository": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Docker image repository",
                                  "example": "debian"
                                },
                                "tag": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Docker image tag",
                                  "example": "stable"
                                }
                              }
                            },
                            "queryFilters": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ],
                                    "description": "Filter value"
                                  },
                                  "comparision": {
                                    "type": "string",
                                    "nullable": true,
                                    "enum": [
                                      "<",
                                      "<=",
                                      "=",
                                      ">=",
                                      ">"
                                    ],
                                    "description": "Comparison operator to be applied with the chosen filter value"
                                  }
                                }
                              },
                              "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                              "example": {
                                "vulnType": {
                                  "value": "os"
                                },
                                "fixAvailable": {
                                  "value": false
                                },
                                "severity": {
                                  "value": "high",
                                  "comparison": ">="
                                }
                              }
                            },
                            "columns": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "The columns to be included in the generated report, in the order desired",
                              "example": [
                                "vulnId",
                                "severity",
                                "package"
                              ]
                            },
                            "sorting": {
                              "type": "array",
                              "description": "Sorting criteria",
                              "items": {
                                "type": "object",
                                "required": [
                                  "column",
                                  "sortOrder"
                                ],
                                "properties": {
                                  "column": {
                                    "type": "string",
                                    "description": "The column identifier chosen for sorting",
                                    "example": "vulnId"
                                  },
                                  "sortOrder": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ],
                                    "description": "The sorting order (ascending or descending) for the given column",
                                    "example": "asc"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "schedule": {
                          "type": "string",
                          "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                          "description": "A cron-like expression representing the generation frequency of the reports.",
                          "example": "0 9 * * 1"
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether the report generation is active or not",
                          "example": true
                        },
                        "notificationChannels": {
                          "type": "array",
                          "description": "Notification channels where to notify the generation of a new report along with the chosen report format",
                          "items": {
                            "type": "object",
                            "properties": {
                              "notificationChannelId": {
                                "type": "integer",
                                "description": "ID of notification channel where the generation of new reports is notified",
                                "example": 12456
                              },
                              "format": {
                                "type": "string",
                                "enum": [
                                  "csv",
                                  "json",
                                  "pdf"
                                ],
                                "description": "Format of the generated report",
                                "example": "csv"
                              }
                            }
                          }
                        },
                        "resources": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "readOnly": true,
                          "nullable": true,
                          "description": "The download link of the last generated report for each configured format",
                          "example": {
                            "csv": "api/reporting/v1/my-domain/reports/my-file-id-1234"
                          }
                        },
                        "onDemandGenerationEnabled": {
                          "type": "boolean",
                          "description": "Whether the on-demand report generation is enabled or not",
                          "example": false
                        },
                        "status": {
                          "type": "object",
                          "readOnly": true,
                          "description": "Schedule, start and completion timestamps for the latest report",
                          "properties": {
                            "lastScheduledAt": {
                              "type": "integer",
                              "readOnly": true,
                              "nullable": true,
                              "description": "The timestamp when a new generation of the scheduled report was last queued",
                              "example": 1602674500
                            },
                            "lastStartedAt": {
                              "type": "integer",
                              "readOnly": true,
                              "nullable": true,
                              "description": "The timestamp when the generation of the scheduled report started the last time",
                              "example": 1602674521
                            },
                            "lastCompletedAt": {
                              "type": "integer",
                              "readOnly": true,
                              "nullable": true,
                              "description": "The timestamp when the generation of the scheduled report completed the last time",
                              "example": 1602674554
                            }
                          }
                        },
                        "createdAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the schedule was defined the first time",
                          "example": 1602672997
                        },
                        "updatedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the schedule was last updated",
                          "example": 1602673124
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/schedules\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/schedules"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/schedules'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/reporting/v1/scanning/schedules\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/reporting/v1/scanning/schedules\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create a new schedule for report generation",
          "tags": [
            "Reporting"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schedule and configuration definition for a report generation",
                  "required": [
                    "id",
                    "name",
                    "configuration",
                    "schedule",
                    "format",
                    "enabled",
                    "notificationChannelIds"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique opaque identifier of the report generation schedule.",
                      "example": "schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                    },
                    "name": {
                      "type": "string",
                      "description": "The title for the generated reports.",
                      "example": "Weekly vulnerability report"
                    },
                    "description": {
                      "type": "string",
                      "description": "A human-readable description for the report content.",
                      "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                    },
                    "reportType": {
                      "type": "string",
                      "description": "The kind of report to generate",
                      "enum": [
                        "vulnerabilities",
                        "policies"
                      ],
                      "example": "vulnerabilities"
                    },
                    "configuration": {
                      "type": "object",
                      "description": "Configuration of a report generation",
                      "required": [
                        "scope",
                        "columns",
                        "sorting"
                      ],
                      "properties": {
                        "scope": {
                          "type": "object",
                          "description": "Filter the results based on the given scope",
                          "properties": {
                            "imageId": {
                              "type": "string",
                              "nullable": true,
                              "description": "restrict the report generation on the given image ID",
                              "example": "sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f"
                            },
                            "runtimeEnabled": {
                              "type": "boolean",
                              "description": "whether the report should be filtered using a runtime scope",
                              "example": true
                            },
                            "runtimeScope": {
                              "type": "string",
                              "nullable": true,
                              "description": "An AND-composed string of predicates that restrict the scope of the generated report"
                            },
                            "registry": {
                              "type": "string",
                              "nullable": true,
                              "description": "Docker registry",
                              "example": "docker.io"
                            },
                            "repository": {
                              "type": "string",
                              "nullable": true,
                              "description": "Docker image repository",
                              "example": "debian"
                            },
                            "tag": {
                              "type": "string",
                              "nullable": true,
                              "description": "Docker image tag",
                              "example": "stable"
                            }
                          }
                        },
                        "queryFilters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                ],
                                "description": "Filter value"
                              },
                              "comparision": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "<",
                                  "<=",
                                  "=",
                                  ">=",
                                  ">"
                                ],
                                "description": "Comparison operator to be applied with the chosen filter value"
                              }
                            }
                          },
                          "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                          "example": {
                            "vulnType": {
                              "value": "os"
                            },
                            "fixAvailable": {
                              "value": false
                            },
                            "severity": {
                              "value": "high",
                              "comparison": ">="
                            }
                          }
                        },
                        "columns": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The columns to be included in the generated report, in the order desired",
                          "example": [
                            "vulnId",
                            "severity",
                            "package"
                          ]
                        },
                        "sorting": {
                          "type": "array",
                          "description": "Sorting criteria",
                          "items": {
                            "type": "object",
                            "required": [
                              "column",
                              "sortOrder"
                            ],
                            "properties": {
                              "column": {
                                "type": "string",
                                "description": "The column identifier chosen for sorting",
                                "example": "vulnId"
                              },
                              "sortOrder": {
                                "type": "string",
                                "enum": [
                                  "asc",
                                  "desc"
                                ],
                                "description": "The sorting order (ascending or descending) for the given column",
                                "example": "asc"
                              }
                            }
                          }
                        }
                      }
                    },
                    "schedule": {
                      "type": "string",
                      "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                      "description": "A cron-like expression representing the generation frequency of the reports.",
                      "example": "0 9 * * 1"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the report generation is active or not",
                      "example": true
                    },
                    "notificationChannels": {
                      "type": "array",
                      "description": "Notification channels where to notify the generation of a new report along with the chosen report format",
                      "items": {
                        "type": "object",
                        "properties": {
                          "notificationChannelId": {
                            "type": "integer",
                            "description": "ID of notification channel where the generation of new reports is notified",
                            "example": 12456
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "csv",
                              "json",
                              "pdf"
                            ],
                            "description": "Format of the generated report",
                            "example": "csv"
                          }
                        }
                      }
                    },
                    "resources": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "nullable": true,
                      "description": "The download link of the last generated report for each configured format",
                      "example": {
                        "csv": "api/reporting/v1/my-domain/reports/my-file-id-1234"
                      }
                    },
                    "onDemandGenerationEnabled": {
                      "type": "boolean",
                      "description": "Whether the on-demand report generation is enabled or not",
                      "example": false
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "description": "Schedule, start and completion timestamps for the latest report",
                      "properties": {
                        "lastScheduledAt": {
                          "type": "integer",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when a new generation of the scheduled report was last queued",
                          "example": 1602674500
                        },
                        "lastStartedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when the generation of the scheduled report started the last time",
                          "example": 1602674521
                        },
                        "lastCompletedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when the generation of the scheduled report completed the last time",
                          "example": 1602674554
                        }
                      }
                    },
                    "createdAt": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "The timestamp when the schedule was defined the first time",
                      "example": 1602672997
                    },
                    "updatedAt": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "The timestamp when the schedule was last updated",
                      "example": 1602673124
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The created schedule for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Schedule and configuration definition for a report generation",
                    "required": [
                      "id",
                      "name",
                      "configuration",
                      "schedule",
                      "format",
                      "enabled",
                      "notificationChannelIds"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the report generation schedule.",
                        "example": "schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "name": {
                        "type": "string",
                        "description": "The title for the generated reports.",
                        "example": "Weekly vulnerability report"
                      },
                      "description": {
                        "type": "string",
                        "description": "A human-readable description for the report content.",
                        "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                      },
                      "reportType": {
                        "type": "string",
                        "description": "The kind of report to generate",
                        "enum": [
                          "vulnerabilities",
                          "policies"
                        ],
                        "example": "vulnerabilities"
                      },
                      "configuration": {
                        "type": "object",
                        "description": "Configuration of a report generation",
                        "required": [
                          "scope",
                          "columns",
                          "sorting"
                        ],
                        "properties": {
                          "scope": {
                            "type": "object",
                            "description": "Filter the results based on the given scope",
                            "properties": {
                              "imageId": {
                                "type": "string",
                                "nullable": true,
                                "description": "restrict the report generation on the given image ID",
                                "example": "sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f"
                              },
                              "runtimeEnabled": {
                                "type": "boolean",
                                "description": "whether the report should be filtered using a runtime scope",
                                "example": true
                              },
                              "runtimeScope": {
                                "type": "string",
                                "nullable": true,
                                "description": "An AND-composed string of predicates that restrict the scope of the generated report"
                              },
                              "registry": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker registry",
                                "example": "docker.io"
                              },
                              "repository": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker image repository",
                                "example": "debian"
                              },
                              "tag": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker image tag",
                                "example": "stable"
                              }
                            }
                          },
                          "queryFilters": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "description": "Filter value"
                                },
                                "comparision": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "<",
                                    "<=",
                                    "=",
                                    ">=",
                                    ">"
                                  ],
                                  "description": "Comparison operator to be applied with the chosen filter value"
                                }
                              }
                            },
                            "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                            "example": {
                              "vulnType": {
                                "value": "os"
                              },
                              "fixAvailable": {
                                "value": false
                              },
                              "severity": {
                                "value": "high",
                                "comparison": ">="
                              }
                            }
                          },
                          "columns": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The columns to be included in the generated report, in the order desired",
                            "example": [
                              "vulnId",
                              "severity",
                              "package"
                            ]
                          },
                          "sorting": {
                            "type": "array",
                            "description": "Sorting criteria",
                            "items": {
                              "type": "object",
                              "required": [
                                "column",
                                "sortOrder"
                              ],
                              "properties": {
                                "column": {
                                  "type": "string",
                                  "description": "The column identifier chosen for sorting",
                                  "example": "vulnId"
                                },
                                "sortOrder": {
                                  "type": "string",
                                  "enum": [
                                    "asc",
                                    "desc"
                                  ],
                                  "description": "The sorting order (ascending or descending) for the given column",
                                  "example": "asc"
                                }
                              }
                            }
                          }
                        }
                      },
                      "schedule": {
                        "type": "string",
                        "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                        "description": "A cron-like expression representing the generation frequency of the reports.",
                        "example": "0 9 * * 1"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the report generation is active or not",
                        "example": true
                      },
                      "notificationChannels": {
                        "type": "array",
                        "description": "Notification channels where to notify the generation of a new report along with the chosen report format",
                        "items": {
                          "type": "object",
                          "properties": {
                            "notificationChannelId": {
                              "type": "integer",
                              "description": "ID of notification channel where the generation of new reports is notified",
                              "example": 12456
                            },
                            "format": {
                              "type": "string",
                              "enum": [
                                "csv",
                                "json",
                                "pdf"
                              ],
                              "description": "Format of the generated report",
                              "example": "csv"
                            }
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "description": "The download link of the last generated report for each configured format",
                        "example": {
                          "csv": "api/reporting/v1/my-domain/reports/my-file-id-1234"
                        }
                      },
                      "onDemandGenerationEnabled": {
                        "type": "boolean",
                        "description": "Whether the on-demand report generation is enabled or not",
                        "example": false
                      },
                      "status": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Schedule, start and completion timestamps for the latest report",
                        "properties": {
                          "lastScheduledAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when a new generation of the scheduled report was last queued",
                            "example": 1602674500
                          },
                          "lastStartedAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report started the last time",
                            "example": 1602674521
                          },
                          "lastCompletedAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report completed the last time",
                            "example": 1602674554
                          }
                        }
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was defined the first time",
                        "example": 1602672997
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was last updated",
                        "example": 1602673124
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid report configuration"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/schedules\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"configuration\\\":{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]},\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"notificationChannelId\\\":12456,\\\"format\\\":\\\"csv\\\"}],\\\"onDemandGenerationEnabled\\\":false}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/schedules \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Weekly vulnerability report\",\"description\":\"Weekly report for package vulnerabilities fount in the Production environment.\\nRequired for compliance needs.\\n\",\"reportType\":\"vulnerabilities\",\"configuration\":{\"scope\":{\"imageId\":\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\",\"runtimeEnabled\":true,\"runtimeScope\":\"string\",\"registry\":\"docker.io\",\"repository\":\"debian\",\"tag\":\"stable\"},\"queryFilters\":{\"vulnType\":{\"value\":\"os\"},\"fixAvailable\":{\"value\":false},\"severity\":{\"value\":\"high\",\"comparison\":\">=\"}},\"columns\":[\"vulnId\",\"severity\",\"package\"],\"sorting\":[{\"column\":\"vulnId\",\"sortOrder\":\"asc\"}]},\"schedule\":\"0 9 * * 1\",\"enabled\":true,\"notificationChannels\":[{\"notificationChannelId\":12456,\"format\":\"csv\"}],\"onDemandGenerationEnabled\":false}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/schedules',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Weekly vulnerability report',\n    description: 'Weekly report for package vulnerabilities fount in the Production environment.\\nRequired for compliance needs.\\n',\n    reportType: 'vulnerabilities',\n    configuration: {\n      scope: {\n        imageId: 'sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f',\n        runtimeEnabled: true,\n        runtimeScope: 'string',\n        registry: 'docker.io',\n        repository: 'debian',\n        tag: 'stable'\n      },\n      queryFilters: {\n        vulnType: {value: 'os'},\n        fixAvailable: {value: false},\n        severity: {value: 'high', comparison: '>='}\n      },\n      columns: ['vulnId', 'severity', 'package'],\n      sorting: [{column: 'vulnId', sortOrder: 'asc'}]\n    },\n    schedule: '0 9 * * 1',\n    enabled: true,\n    notificationChannels: [{notificationChannelId: 12456, format: 'csv'}],\n    onDemandGenerationEnabled: false\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/reporting/v1/scanning/schedules\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"configuration\\\":{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]},\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"notificationChannelId\\\":12456,\\\"format\\\":\\\"csv\\\"}],\\\"onDemandGenerationEnabled\\\":false}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"configuration\\\":{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]},\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"notificationChannelId\\\":12456,\\\"format\\\":\\\"csv\\\"}],\\\"onDemandGenerationEnabled\\\":false}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/reporting/v1/scanning/schedules\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/reporting/v1/{domain}/schedules/{scheduleId}/run": {
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "enum": [
                "scanning"
              ]
            },
            "required": true,
            "description": "The data domain of the report. The only supported value is `scanning`",
            "example": "scanning"
          },
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "post": {
          "summary": "Generate an on-demand report using the configuration of the requested schedule",
          "tags": [
            "Reporting"
          ],
          "responses": {
            "202": {
              "description": "Generation of requested report accepted"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid request payload"
                }
              }
            },
            "403": {
              "description": "Generation of requested report is either forbidden or disabled",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation forbidden or disabled"
                }
              }
            },
            "404": {
              "description": "Requested report generation schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation schedule not found"
                }
              }
            },
            "429": {
              "description": "Report generation is either already running or will be running shortly",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation already running"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV/run\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV/run"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV/run'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV/run\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV/run\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/reporting/v1/{domain}/schedules/{scheduleId}": {
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "enum": [
                "scanning"
              ]
            },
            "required": true,
            "description": "The data domain of the report. The only supported value is `scanning`",
            "example": "scanning"
          },
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "get": {
          "summary": "Get the configuration of the requested schedule for report generation",
          "tags": [
            "Reporting"
          ],
          "responses": {
            "200": {
              "description": "Configuration for the requested schedule for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Schedule and configuration definition for a report generation",
                    "required": [
                      "id",
                      "name",
                      "configuration",
                      "schedule",
                      "format",
                      "enabled",
                      "notificationChannelIds"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the report generation schedule.",
                        "example": "schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "name": {
                        "type": "string",
                        "description": "The title for the generated reports.",
                        "example": "Weekly vulnerability report"
                      },
                      "description": {
                        "type": "string",
                        "description": "A human-readable description for the report content.",
                        "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                      },
                      "reportType": {
                        "type": "string",
                        "description": "The kind of report to generate",
                        "enum": [
                          "vulnerabilities",
                          "policies"
                        ],
                        "example": "vulnerabilities"
                      },
                      "configuration": {
                        "type": "object",
                        "description": "Configuration of a report generation",
                        "required": [
                          "scope",
                          "columns",
                          "sorting"
                        ],
                        "properties": {
                          "scope": {
                            "type": "object",
                            "description": "Filter the results based on the given scope",
                            "properties": {
                              "imageId": {
                                "type": "string",
                                "nullable": true,
                                "description": "restrict the report generation on the given image ID",
                                "example": "sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f"
                              },
                              "runtimeEnabled": {
                                "type": "boolean",
                                "description": "whether the report should be filtered using a runtime scope",
                                "example": true
                              },
                              "runtimeScope": {
                                "type": "string",
                                "nullable": true,
                                "description": "An AND-composed string of predicates that restrict the scope of the generated report"
                              },
                              "registry": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker registry",
                                "example": "docker.io"
                              },
                              "repository": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker image repository",
                                "example": "debian"
                              },
                              "tag": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker image tag",
                                "example": "stable"
                              }
                            }
                          },
                          "queryFilters": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "description": "Filter value"
                                },
                                "comparision": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "<",
                                    "<=",
                                    "=",
                                    ">=",
                                    ">"
                                  ],
                                  "description": "Comparison operator to be applied with the chosen filter value"
                                }
                              }
                            },
                            "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                            "example": {
                              "vulnType": {
                                "value": "os"
                              },
                              "fixAvailable": {
                                "value": false
                              },
                              "severity": {
                                "value": "high",
                                "comparison": ">="
                              }
                            }
                          },
                          "columns": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The columns to be included in the generated report, in the order desired",
                            "example": [
                              "vulnId",
                              "severity",
                              "package"
                            ]
                          },
                          "sorting": {
                            "type": "array",
                            "description": "Sorting criteria",
                            "items": {
                              "type": "object",
                              "required": [
                                "column",
                                "sortOrder"
                              ],
                              "properties": {
                                "column": {
                                  "type": "string",
                                  "description": "The column identifier chosen for sorting",
                                  "example": "vulnId"
                                },
                                "sortOrder": {
                                  "type": "string",
                                  "enum": [
                                    "asc",
                                    "desc"
                                  ],
                                  "description": "The sorting order (ascending or descending) for the given column",
                                  "example": "asc"
                                }
                              }
                            }
                          }
                        }
                      },
                      "schedule": {
                        "type": "string",
                        "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                        "description": "A cron-like expression representing the generation frequency of the reports.",
                        "example": "0 9 * * 1"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the report generation is active or not",
                        "example": true
                      },
                      "notificationChannels": {
                        "type": "array",
                        "description": "Notification channels where to notify the generation of a new report along with the chosen report format",
                        "items": {
                          "type": "object",
                          "properties": {
                            "notificationChannelId": {
                              "type": "integer",
                              "description": "ID of notification channel where the generation of new reports is notified",
                              "example": 12456
                            },
                            "format": {
                              "type": "string",
                              "enum": [
                                "csv",
                                "json",
                                "pdf"
                              ],
                              "description": "Format of the generated report",
                              "example": "csv"
                            }
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "description": "The download link of the last generated report for each configured format",
                        "example": {
                          "csv": "api/reporting/v1/my-domain/reports/my-file-id-1234"
                        }
                      },
                      "onDemandGenerationEnabled": {
                        "type": "boolean",
                        "description": "Whether the on-demand report generation is enabled or not",
                        "example": false
                      },
                      "status": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Schedule, start and completion timestamps for the latest report",
                        "properties": {
                          "lastScheduledAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when a new generation of the scheduled report was last queued",
                            "example": 1602674500
                          },
                          "lastStartedAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report started the last time",
                            "example": 1602674521
                          },
                          "lastCompletedAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report completed the last time",
                            "example": 1602674554
                          }
                        }
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was defined the first time",
                        "example": 1602672997
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was last updated",
                        "example": 1602673124
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Requested report generation schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation schedule not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Edit the configuration of the requested schedule for report generation",
          "tags": [
            "Reporting"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schedule and configuration definition for a report generation",
                  "required": [
                    "id",
                    "name",
                    "configuration",
                    "schedule",
                    "format",
                    "enabled",
                    "notificationChannelIds"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique opaque identifier of the report generation schedule.",
                      "example": "schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                    },
                    "name": {
                      "type": "string",
                      "description": "The title for the generated reports.",
                      "example": "Weekly vulnerability report"
                    },
                    "description": {
                      "type": "string",
                      "description": "A human-readable description for the report content.",
                      "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                    },
                    "reportType": {
                      "type": "string",
                      "description": "The kind of report to generate",
                      "enum": [
                        "vulnerabilities",
                        "policies"
                      ],
                      "example": "vulnerabilities"
                    },
                    "configuration": {
                      "type": "object",
                      "description": "Configuration of a report generation",
                      "required": [
                        "scope",
                        "columns",
                        "sorting"
                      ],
                      "properties": {
                        "scope": {
                          "type": "object",
                          "description": "Filter the results based on the given scope",
                          "properties": {
                            "imageId": {
                              "type": "string",
                              "nullable": true,
                              "description": "restrict the report generation on the given image ID",
                              "example": "sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f"
                            },
                            "runtimeEnabled": {
                              "type": "boolean",
                              "description": "whether the report should be filtered using a runtime scope",
                              "example": true
                            },
                            "runtimeScope": {
                              "type": "string",
                              "nullable": true,
                              "description": "An AND-composed string of predicates that restrict the scope of the generated report"
                            },
                            "registry": {
                              "type": "string",
                              "nullable": true,
                              "description": "Docker registry",
                              "example": "docker.io"
                            },
                            "repository": {
                              "type": "string",
                              "nullable": true,
                              "description": "Docker image repository",
                              "example": "debian"
                            },
                            "tag": {
                              "type": "string",
                              "nullable": true,
                              "description": "Docker image tag",
                              "example": "stable"
                            }
                          }
                        },
                        "queryFilters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                ],
                                "description": "Filter value"
                              },
                              "comparision": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "<",
                                  "<=",
                                  "=",
                                  ">=",
                                  ">"
                                ],
                                "description": "Comparison operator to be applied with the chosen filter value"
                              }
                            }
                          },
                          "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                          "example": {
                            "vulnType": {
                              "value": "os"
                            },
                            "fixAvailable": {
                              "value": false
                            },
                            "severity": {
                              "value": "high",
                              "comparison": ">="
                            }
                          }
                        },
                        "columns": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "The columns to be included in the generated report, in the order desired",
                          "example": [
                            "vulnId",
                            "severity",
                            "package"
                          ]
                        },
                        "sorting": {
                          "type": "array",
                          "description": "Sorting criteria",
                          "items": {
                            "type": "object",
                            "required": [
                              "column",
                              "sortOrder"
                            ],
                            "properties": {
                              "column": {
                                "type": "string",
                                "description": "The column identifier chosen for sorting",
                                "example": "vulnId"
                              },
                              "sortOrder": {
                                "type": "string",
                                "enum": [
                                  "asc",
                                  "desc"
                                ],
                                "description": "The sorting order (ascending or descending) for the given column",
                                "example": "asc"
                              }
                            }
                          }
                        }
                      }
                    },
                    "schedule": {
                      "type": "string",
                      "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                      "description": "A cron-like expression representing the generation frequency of the reports.",
                      "example": "0 9 * * 1"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the report generation is active or not",
                      "example": true
                    },
                    "notificationChannels": {
                      "type": "array",
                      "description": "Notification channels where to notify the generation of a new report along with the chosen report format",
                      "items": {
                        "type": "object",
                        "properties": {
                          "notificationChannelId": {
                            "type": "integer",
                            "description": "ID of notification channel where the generation of new reports is notified",
                            "example": 12456
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "csv",
                              "json",
                              "pdf"
                            ],
                            "description": "Format of the generated report",
                            "example": "csv"
                          }
                        }
                      }
                    },
                    "resources": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      },
                      "readOnly": true,
                      "nullable": true,
                      "description": "The download link of the last generated report for each configured format",
                      "example": {
                        "csv": "api/reporting/v1/my-domain/reports/my-file-id-1234"
                      }
                    },
                    "onDemandGenerationEnabled": {
                      "type": "boolean",
                      "description": "Whether the on-demand report generation is enabled or not",
                      "example": false
                    },
                    "status": {
                      "type": "object",
                      "readOnly": true,
                      "description": "Schedule, start and completion timestamps for the latest report",
                      "properties": {
                        "lastScheduledAt": {
                          "type": "integer",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when a new generation of the scheduled report was last queued",
                          "example": 1602674500
                        },
                        "lastStartedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when the generation of the scheduled report started the last time",
                          "example": 1602674521
                        },
                        "lastCompletedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when the generation of the scheduled report completed the last time",
                          "example": 1602674554
                        }
                      }
                    },
                    "createdAt": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "The timestamp when the schedule was defined the first time",
                      "example": 1602672997
                    },
                    "updatedAt": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "The timestamp when the schedule was last updated",
                      "example": 1602673124
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updated configuration for the requested schedule for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Schedule and configuration definition for a report generation",
                    "required": [
                      "id",
                      "name",
                      "configuration",
                      "schedule",
                      "format",
                      "enabled",
                      "notificationChannelIds"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the report generation schedule.",
                        "example": "schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "name": {
                        "type": "string",
                        "description": "The title for the generated reports.",
                        "example": "Weekly vulnerability report"
                      },
                      "description": {
                        "type": "string",
                        "description": "A human-readable description for the report content.",
                        "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                      },
                      "reportType": {
                        "type": "string",
                        "description": "The kind of report to generate",
                        "enum": [
                          "vulnerabilities",
                          "policies"
                        ],
                        "example": "vulnerabilities"
                      },
                      "configuration": {
                        "type": "object",
                        "description": "Configuration of a report generation",
                        "required": [
                          "scope",
                          "columns",
                          "sorting"
                        ],
                        "properties": {
                          "scope": {
                            "type": "object",
                            "description": "Filter the results based on the given scope",
                            "properties": {
                              "imageId": {
                                "type": "string",
                                "nullable": true,
                                "description": "restrict the report generation on the given image ID",
                                "example": "sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f"
                              },
                              "runtimeEnabled": {
                                "type": "boolean",
                                "description": "whether the report should be filtered using a runtime scope",
                                "example": true
                              },
                              "runtimeScope": {
                                "type": "string",
                                "nullable": true,
                                "description": "An AND-composed string of predicates that restrict the scope of the generated report"
                              },
                              "registry": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker registry",
                                "example": "docker.io"
                              },
                              "repository": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker image repository",
                                "example": "debian"
                              },
                              "tag": {
                                "type": "string",
                                "nullable": true,
                                "description": "Docker image tag",
                                "example": "stable"
                              }
                            }
                          },
                          "queryFilters": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "description": "Filter value"
                                },
                                "comparision": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "<",
                                    "<=",
                                    "=",
                                    ">=",
                                    ">"
                                  ],
                                  "description": "Comparison operator to be applied with the chosen filter value"
                                }
                              }
                            },
                            "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                            "example": {
                              "vulnType": {
                                "value": "os"
                              },
                              "fixAvailable": {
                                "value": false
                              },
                              "severity": {
                                "value": "high",
                                "comparison": ">="
                              }
                            }
                          },
                          "columns": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "The columns to be included in the generated report, in the order desired",
                            "example": [
                              "vulnId",
                              "severity",
                              "package"
                            ]
                          },
                          "sorting": {
                            "type": "array",
                            "description": "Sorting criteria",
                            "items": {
                              "type": "object",
                              "required": [
                                "column",
                                "sortOrder"
                              ],
                              "properties": {
                                "column": {
                                  "type": "string",
                                  "description": "The column identifier chosen for sorting",
                                  "example": "vulnId"
                                },
                                "sortOrder": {
                                  "type": "string",
                                  "enum": [
                                    "asc",
                                    "desc"
                                  ],
                                  "description": "The sorting order (ascending or descending) for the given column",
                                  "example": "asc"
                                }
                              }
                            }
                          }
                        }
                      },
                      "schedule": {
                        "type": "string",
                        "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                        "description": "A cron-like expression representing the generation frequency of the reports.",
                        "example": "0 9 * * 1"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the report generation is active or not",
                        "example": true
                      },
                      "notificationChannels": {
                        "type": "array",
                        "description": "Notification channels where to notify the generation of a new report along with the chosen report format",
                        "items": {
                          "type": "object",
                          "properties": {
                            "notificationChannelId": {
                              "type": "integer",
                              "description": "ID of notification channel where the generation of new reports is notified",
                              "example": 12456
                            },
                            "format": {
                              "type": "string",
                              "enum": [
                                "csv",
                                "json",
                                "pdf"
                              ],
                              "description": "Format of the generated report",
                              "example": "csv"
                            }
                          }
                        }
                      },
                      "resources": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "readOnly": true,
                        "nullable": true,
                        "description": "The download link of the last generated report for each configured format",
                        "example": {
                          "csv": "api/reporting/v1/my-domain/reports/my-file-id-1234"
                        }
                      },
                      "onDemandGenerationEnabled": {
                        "type": "boolean",
                        "description": "Whether the on-demand report generation is enabled or not",
                        "example": false
                      },
                      "status": {
                        "type": "object",
                        "readOnly": true,
                        "description": "Schedule, start and completion timestamps for the latest report",
                        "properties": {
                          "lastScheduledAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when a new generation of the scheduled report was last queued",
                            "example": 1602674500
                          },
                          "lastStartedAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report started the last time",
                            "example": 1602674521
                          },
                          "lastCompletedAt": {
                            "type": "integer",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report completed the last time",
                            "example": 1602674554
                          }
                        }
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was defined the first time",
                        "example": 1602672997
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was last updated",
                        "example": 1602673124
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid report configuration"
                }
              }
            },
            "404": {
              "description": "Requested report generation schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation schedule not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"configuration\\\":{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]},\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"notificationChannelId\\\":12456,\\\"format\\\":\\\"csv\\\"}],\\\"onDemandGenerationEnabled\\\":false}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Weekly vulnerability report\",\"description\":\"Weekly report for package vulnerabilities fount in the Production environment.\\nRequired for compliance needs.\\n\",\"reportType\":\"vulnerabilities\",\"configuration\":{\"scope\":{\"imageId\":\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\",\"runtimeEnabled\":true,\"runtimeScope\":\"string\",\"registry\":\"docker.io\",\"repository\":\"debian\",\"tag\":\"stable\"},\"queryFilters\":{\"vulnType\":{\"value\":\"os\"},\"fixAvailable\":{\"value\":false},\"severity\":{\"value\":\"high\",\"comparison\":\">=\"}},\"columns\":[\"vulnId\",\"severity\",\"package\"],\"sorting\":[{\"column\":\"vulnId\",\"sortOrder\":\"asc\"}]},\"schedule\":\"0 9 * * 1\",\"enabled\":true,\"notificationChannels\":[{\"notificationChannelId\":12456,\"format\":\"csv\"}],\"onDemandGenerationEnabled\":false}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Weekly vulnerability report',\n    description: 'Weekly report for package vulnerabilities fount in the Production environment.\\nRequired for compliance needs.\\n',\n    reportType: 'vulnerabilities',\n    configuration: {\n      scope: {\n        imageId: 'sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f',\n        runtimeEnabled: true,\n        runtimeScope: 'string',\n        registry: 'docker.io',\n        repository: 'debian',\n        tag: 'stable'\n      },\n      queryFilters: {\n        vulnType: {value: 'os'},\n        fixAvailable: {value: false},\n        severity: {value: 'high', comparison: '>='}\n      },\n      columns: ['vulnId', 'severity', 'package'],\n      sorting: [{column: 'vulnId', sortOrder: 'asc'}]\n    },\n    schedule: '0 9 * * 1',\n    enabled: true,\n    notificationChannels: [{notificationChannelId: 12456, format: 'csv'}],\n    onDemandGenerationEnabled: false\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"configuration\\\":{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]},\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"notificationChannelId\\\":12456,\\\"format\\\":\\\"csv\\\"}],\\\"onDemandGenerationEnabled\\\":false}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"configuration\\\":{\\\"scope\\\":{\\\"imageId\\\":\\\"sha256:b6fa739cedf5ea12a620a439402b6004d057da800f91c7524b5086a5e4749c9f\\\",\\\"runtimeEnabled\\\":true,\\\"runtimeScope\\\":\\\"string\\\",\\\"registry\\\":\\\"docker.io\\\",\\\"repository\\\":\\\"debian\\\",\\\"tag\\\":\\\"stable\\\"},\\\"queryFilters\\\":{\\\"vulnType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"severity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"columns\\\":[\\\"vulnId\\\",\\\"severity\\\",\\\"package\\\"],\\\"sorting\\\":[{\\\"column\\\":\\\"vulnId\\\",\\\"sortOrder\\\":\\\"asc\\\"}]},\\\"schedule\\\":\\\"0 9 * * 1\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"notificationChannelId\\\":12456,\\\"format\\\":\\\"csv\\\"}],\\\"onDemandGenerationEnabled\\\":false}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Remove the requested schedule for report generation",
          "tags": [
            "Reporting"
          ],
          "responses": {
            "204": {
              "description": "Schedule for report generation removed"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/reporting/v1/scanning/schedules/schedule-1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/reporting/v1/{domain}/reports/{fileId}": {
        "parameters": [
          {
            "in": "path",
            "name": "domain",
            "schema": {
              "type": "string",
              "enum": [
                "scanning"
              ]
            },
            "required": true,
            "description": "The data domain of the report. The only supported value is `scanning`",
            "example": "scanning"
          },
          {
            "in": "path",
            "name": "fileId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the generated report ready for download",
            "example": "1ueqXHvmzvtwJV2lFr8z8wdydu"
          }
        ],
        "get": {
          "summary": "Download a previously generated report",
          "tags": [
            "Reporting"
          ],
          "responses": {
            "200": {
              "description": "Report content",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "string"
                  }
                },
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "nullable": true,
                        "description": "A record of the requested report. Record keys are the column identifiers."
                      },
                      "example": {
                        "vulnId": "CVE-2017-14062",
                        "severity": "High",
                        "package": "log4j"
                      }
                    }
                  }
                },
                "application/pdf": {
                  "schema": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            },
            "307": {
              "description": "Requested report available for download at another location",
              "headers": {
                "Location": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Requested report not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/reporting/v1/scanning/reports/1ueqXHvmzvtwJV2lFr8z8wdydu\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/reporting/v1/scanning/reports/1ueqXHvmzvtwJV2lFr8z8wdydu"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/reporting/v1/scanning/reports/1ueqXHvmzvtwJV2lFr8z8wdydu'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/reporting/v1/scanning/reports/1ueqXHvmzvtwJV2lFr8z8wdydu\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/reporting/v1/scanning/reports/1ueqXHvmzvtwJV2lFr8z8wdydu\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/clusters": {
        "get": {
          "summary": "Returns all cluster names for the customer",
          "description": "Returns all cluster names for the customer",
          "tags": [
            "Network Topology"
          ],
          "parameters": [
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested cluster names were successfully returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "description": "Cluster names",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/clusters?from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/clusters?from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/clusters',\n  qs: {from: 'SOME_INTEGER_VALUE', to: 'SOME_INTEGER_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/clusters?from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/clusters?from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/namespaces": {
        "get": {
          "summary": "Returns all namespace names for the cluster",
          "description": "Returns all namespace names for the cluster",
          "tags": [
            "Network Topology"
          ],
          "parameters": [
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested namespaces were successfully returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "name of the object"
                            },
                            "labels": {
                              "description": "For pod owners, the labels are used to identify the pods related to the deployment/job/etc. For services, the labels are used to identify the endpoints for the service. For namespaces, the labels will be put in any knp generated based on objects in this namespace.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "kind": {
                              "type": "string",
                              "description": "Owner type",
                              "enum": [
                                "Service",
                                "Deployment",
                                "StatefulSet",
                                "DaemonSet",
                                "Pod",
                                "Namespace"
                              ]
                            },
                            "cluster": {
                              "type": "string",
                              "description": "the name of the cluster"
                            }
                          }
                        },
                        {
                          "type": "object"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/namespaces?cluster=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/namespaces?cluster=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/namespaces',\n  qs: {\n    cluster: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/namespaces?cluster=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/namespaces?cluster=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/owners": {
        "get": {
          "summary": "Returns all pod owners for a cluster, namespace, and time range",
          "tags": [
            "Network Topology"
          ],
          "description": "Returns a map of owner type to a list of owner selectors",
          "parameters": [
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            },
            {
              "name": "namespace",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes namespace"
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested map of owner type to a list of owner selectors were successfully returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "name of the object"
                            },
                            "labels": {
                              "description": "For pod owners, the labels are used to identify the pods related to the deployment/job/etc. For services, the labels are used to identify the endpoints for the service. For namespaces, the labels will be put in any knp generated based on objects in this namespace.",
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "kind": {
                              "type": "string",
                              "description": "Owner type",
                              "enum": [
                                "Service",
                                "Deployment",
                                "StatefulSet",
                                "DaemonSet",
                                "Pod",
                                "Namespace"
                              ]
                            },
                            "cluster": {
                              "type": "string",
                              "description": "the name of the cluster"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "namespace": {
                              "type": "string",
                              "description": "the name of the namespace that the pod owner belongs to"
                            },
                            "podControllerLabels": {
                              "allOf": [
                                {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "Array of kubernetes labels"
                                }
                              ],
                              "description": "Kubernetes labels of the pod controller. If the pod owner is a service, the labels are for the pod owner of the service’s endpoint."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/owners?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/owners?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/owners',\n  qs: {\n    cluster: 'SOME_STRING_VALUE',\n    namespace: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/owners?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/owners?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/ingressSummaries": {
        "get": {
          "summary": "Returns an overview of ingress networking traffic",
          "tags": [
            "Network Topology"
          ],
          "description": "Returns an overview of ingress networking traffic",
          "parameters": [
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            },
            {
              "name": "namespace",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes namespace"
            },
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a pod owner"
            },
            {
              "name": "kind",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "Service",
                  "Deployment",
                  "StatefulSet",
                  "DaemonSet",
                  "Pod",
                  "Namespace"
                ]
              },
              "description": "Specifies how to group pods"
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested overview of ingress networking traffic was successfully returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "resolvedFrom": {
                            "type": "integer",
                            "description": "The from parameter after being normalized to fit the closest approximate available time range"
                          },
                          "resolvedTo": {
                            "type": "integer",
                            "description": "The to parameter after being normalized to fit the closest approximate available time range"
                          }
                        }
                      },
                      "connections": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "clientOwner": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "name of the object"
                                    },
                                    "labels": {
                                      "description": "For pod owners, the labels are used to identify the pods related to the deployment/job/etc. For services, the labels are used to identify the endpoints for the service. For namespaces, the labels will be put in any knp generated based on objects in this namespace.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "kind": {
                                      "type": "string",
                                      "description": "Owner type",
                                      "enum": [
                                        "Service",
                                        "Deployment",
                                        "StatefulSet",
                                        "DaemonSet",
                                        "Pod",
                                        "Namespace"
                                      ]
                                    },
                                    "cluster": {
                                      "type": "string",
                                      "description": "the name of the cluster"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "namespace": {
                                      "type": "string",
                                      "description": "the name of the namespace that the pod owner belongs to"
                                    },
                                    "podControllerLabels": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Array of kubernetes labels"
                                        }
                                      ],
                                      "description": "Kubernetes labels of the pod controller. If the pod owner is a service, the labels are for the pod owner of the service’s endpoint."
                                    }
                                  }
                                }
                              ]
                            },
                            "clientNamespace": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "name of the object"
                                    },
                                    "labels": {
                                      "description": "For pod owners, the labels are used to identify the pods related to the deployment/job/etc. For services, the labels are used to identify the endpoints for the service. For namespaces, the labels will be put in any knp generated based on objects in this namespace.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "kind": {
                                      "type": "string",
                                      "description": "Owner type",
                                      "enum": [
                                        "Service",
                                        "Deployment",
                                        "StatefulSet",
                                        "DaemonSet",
                                        "Pod",
                                        "Namespace"
                                      ]
                                    },
                                    "cluster": {
                                      "type": "string",
                                      "description": "the name of the cluster"
                                    }
                                  }
                                },
                                {
                                  "type": "object"
                                }
                              ]
                            },
                            "serverProcess": {
                              "type": "string",
                              "description": "The process on the server",
                              "example": "nginx"
                            },
                            "serverPort": {
                              "type": "number",
                              "description": "The port on the server"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/ingressSummaries?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/ingressSummaries?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/ingressSummaries',\n  qs: {\n    cluster: 'SOME_STRING_VALUE',\n    namespace: 'SOME_STRING_VALUE',\n    name: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/ingressSummaries?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/ingressSummaries?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/egressSummaries": {
        "get": {
          "summary": "Returns an overview of egress networking traffic",
          "tags": [
            "Network Topology"
          ],
          "description": "Returns an overview of egress networking traffic",
          "parameters": [
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            },
            {
              "name": "namespace",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes namespace"
            },
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a pod owner"
            },
            {
              "name": "kind",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "Service",
                  "Deployment",
                  "StatefulSet",
                  "DaemonSet",
                  "Pod",
                  "Namespace"
                ]
              },
              "description": "Specifies how to group pods"
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested overview of egress networking traffic was successfully returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "resolvedFrom": {
                            "type": "integer",
                            "description": "The from parameter after being normalized to fit the closest approximate available time range"
                          },
                          "resolvedTo": {
                            "type": "integer",
                            "description": "The to parameter after being normalized to fit the closest approximate available time range"
                          }
                        }
                      },
                      "connections": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "serverOwner": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "name of the object"
                                    },
                                    "labels": {
                                      "description": "For pod owners, the labels are used to identify the pods related to the deployment/job/etc. For services, the labels are used to identify the endpoints for the service. For namespaces, the labels will be put in any knp generated based on objects in this namespace.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "kind": {
                                      "type": "string",
                                      "description": "Owner type",
                                      "enum": [
                                        "Service",
                                        "Deployment",
                                        "StatefulSet",
                                        "DaemonSet",
                                        "Pod",
                                        "Namespace"
                                      ]
                                    },
                                    "cluster": {
                                      "type": "string",
                                      "description": "the name of the cluster"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "namespace": {
                                      "type": "string",
                                      "description": "the name of the namespace that the pod owner belongs to"
                                    },
                                    "podControllerLabels": {
                                      "allOf": [
                                        {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          },
                                          "description": "Array of kubernetes labels"
                                        }
                                      ],
                                      "description": "Kubernetes labels of the pod controller. If the pod owner is a service, the labels are for the pod owner of the service’s endpoint."
                                    }
                                  }
                                }
                              ]
                            },
                            "serverNamespace": {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "name of the object"
                                    },
                                    "labels": {
                                      "description": "For pod owners, the labels are used to identify the pods related to the deployment/job/etc. For services, the labels are used to identify the endpoints for the service. For namespaces, the labels will be put in any knp generated based on objects in this namespace.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "kind": {
                                      "type": "string",
                                      "description": "Owner type",
                                      "enum": [
                                        "Service",
                                        "Deployment",
                                        "StatefulSet",
                                        "DaemonSet",
                                        "Pod",
                                        "Namespace"
                                      ]
                                    },
                                    "cluster": {
                                      "type": "string",
                                      "description": "the name of the cluster"
                                    }
                                  }
                                },
                                {
                                  "type": "object"
                                }
                              ]
                            },
                            "clientProcess": {
                              "type": "string",
                              "description": "The process on the client",
                              "example": "nginx"
                            },
                            "serverPort": {
                              "type": "number",
                              "description": "The port on the server"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/egressSummaries?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/egressSummaries?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/egressSummaries',\n  qs: {\n    cluster: 'SOME_STRING_VALUE',\n    namespace: 'SOME_STRING_VALUE',\n    name: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/egressSummaries?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/egressSummaries?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/ingressUnresolvedIps": {
        "get": {
          "summary": "Returns the unresolved ips for a time range and pod owner",
          "tags": [
            "Network Topology"
          ],
          "description": "Returns the unresolved ips for a time range and pod owner",
          "parameters": [
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            },
            {
              "name": "namespace",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes namespace"
            },
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a pod owner"
            },
            {
              "name": "kind",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "Service",
                  "Deployment",
                  "StatefulSet",
                  "DaemonSet",
                  "Pod",
                  "Namespace"
                ]
              },
              "description": "Specifies how to group pods"
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested ingress unresolved ips were successfully returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "clusterSubnetsComplete": {
                        "type": "boolean",
                        "description": "If false, the FE will display the warning “Cluster subnet list is incomplete. IPs not mapping to known subnets will be marked as external”."
                      },
                      "unresolveds": {
                        "type": "array",
                        "description": "Collection of unresolved egress IPs",
                        "items": {
                          "type": "object",
                          "properties": {
                            "serverIPMetadata": {
                              "type": "object",
                              "properties": {
                                "origin": {
                                  "type": "string",
                                  "description": "IP origin",
                                  "enum": [
                                    "internal",
                                    "external"
                                  ]
                                },
                                "ip": {
                                  "type": "string",
                                  "format": "ipv4",
                                  "description": "Unresolved IP address"
                                }
                              }
                            },
                            "clientProcess": {
                              "type": "string",
                              "description": "The process on the client"
                            },
                            "serverPort": {
                              "type": "object",
                              "properties": {
                                "port": {
                                  "type": "integer",
                                  "description": "port on the pod"
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "The protocol by which traffic must match. Defaults to TCP if not specified. In the future UDP and SCTP may be supported.",
                                  "enum": [
                                    "TCP"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/ingressUnresolvedIps?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/ingressUnresolvedIps?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/ingressUnresolvedIps',\n  qs: {\n    cluster: 'SOME_STRING_VALUE',\n    namespace: 'SOME_STRING_VALUE',\n    name: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/ingressUnresolvedIps?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/ingressUnresolvedIps?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/egressUnresolvedIps": {
        "get": {
          "summary": "Returns the unresolved ips for a time range and pod owner",
          "tags": [
            "Network Topology"
          ],
          "description": "Returns the unresolved ips for a time range and pod owner",
          "parameters": [
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            },
            {
              "name": "namespace",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes namespace"
            },
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a pod owner"
            },
            {
              "name": "kind",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "Service",
                  "Deployment",
                  "StatefulSet",
                  "DaemonSet",
                  "Pod",
                  "Namespace"
                ]
              },
              "description": "Specifies how to group pods"
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested egress unresolved ips were successfully returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "clusterSubnetsComplete": {
                        "type": "boolean",
                        "description": "If false, the FE will display the warning “Cluster subnet list is incomplete. IPs not mapping to known subnets will be marked as external”."
                      },
                      "unresolveds": {
                        "type": "array",
                        "description": "Collection of unresolved ingress IPs",
                        "items": {
                          "type": "object",
                          "properties": {
                            "clientIPMetadata": {
                              "type": "object",
                              "properties": {
                                "origin": {
                                  "type": "string",
                                  "description": "IP origin",
                                  "enum": [
                                    "internal",
                                    "external"
                                  ]
                                },
                                "ip": {
                                  "type": "string",
                                  "format": "ipv4",
                                  "description": "Unresolved IP address"
                                }
                              }
                            },
                            "serverProcess": {
                              "type": "string",
                              "description": "The process on the server"
                            },
                            "serverPort": {
                              "type": "object",
                              "properties": {
                                "port": {
                                  "type": "integer",
                                  "description": "port on the pod"
                                },
                                "protocol": {
                                  "type": "string",
                                  "description": "The protocol by which traffic must match. Defaults to TCP if not specified. In the future UDP and SCTP may be supported.",
                                  "enum": [
                                    "TCP"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/egressUnresolvedIps?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/egressUnresolvedIps?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/egressUnresolvedIps',\n  qs: {\n    cluster: 'SOME_STRING_VALUE',\n    namespace: 'SOME_STRING_VALUE',\n    name: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/egressUnresolvedIps?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/egressUnresolvedIps?cluster=SOME_STRING_VALUE&namespace=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/ownerTopology": {
        "get": {
          "summary": "Creates a communication topology graph around the specified owner",
          "tags": [
            "Network Topology"
          ],
          "description": "Creates a communication topology graph around the specified owner",
          "parameters": [
            {
              "name": "namespace",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes namespace"
            },
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            },
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a pod owner"
            },
            {
              "name": "kind",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "Service",
                  "Deployment",
                  "StatefulSet",
                  "DaemonSet",
                  "Pod",
                  "Namespace"
                ]
              },
              "description": "Specifies how to group pods"
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested topology graph is sucessfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Owner communication topology graph",
                    "properties": {
                      "graph": {
                        "type": "object",
                        "description": "Communication topology graph",
                        "properties": {
                          "metadata": {
                            "description": "Metadata, could be attached to a graph, an edge, or a vertex",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "vertices": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Pod Owner",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Vertex ID"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "service",
                                    "deployment",
                                    "statefulset",
                                    "daemonset",
                                    "namespace",
                                    "unresolvedip"
                                  ],
                                  "description": "Vertex type"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Pod Owner name"
                                },
                                "metadata": {
                                  "description": "Metadata, could be attached to a graph, an edge, or a vertex",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "parent": {
                                  "type": "string",
                                  "description": "Namespace vertex ID; required for all pod owner types except 'namespace' and 'unresolvedip'"
                                }
                              }
                            }
                          },
                          "edges": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "A directed edge, indicates a relationship between two vertices",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "endpoints",
                                    "communication"
                                  ],
                                  "description": "Type of edge relationship"
                                },
                                "source": {
                                  "type": "string",
                                  "description": "ID of the source vertex"
                                },
                                "destination": {
                                  "type": "string",
                                  "description": "ID of the destination vertex"
                                },
                                "metadata": {
                                  "description": "Metadata, could be attached to a graph, an edge, or a vertex",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/ownerTopology?namespace=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/ownerTopology?namespace=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/ownerTopology',\n  qs: {\n    namespace: 'SOME_STRING_VALUE',\n    cluster: 'SOME_STRING_VALUE',\n    name: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/ownerTopology?namespace=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/ownerTopology?namespace=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/status": {
        "get": {
          "summary": "Ping the status",
          "tags": [
            "Network Topology"
          ],
          "description": "Retrieves a 200 to double check if the topology feature on the\nbackend is available.\n",
          "responses": {
            "200": {
              "description": "Indicates the topology feature is available",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status.",
                        "enum": [
                          "ok"
                        ],
                        "example": "ok"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/networkTopology/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v1/networkTopology/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkSecurity/namespaces/{namespaceName}/simulatedPolicies": {
        "post": {
          "summary": "Creates a Kubernetes Network Policy",
          "description": "Creates a Kubernetes Network Policy",
          "tags": [
            "Network Security"
          ],
          "parameters": [
            {
              "name": "namespaceName",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes namespace"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "spec": {
                      "type": "object",
                      "properties": {
                        "ingress": {
                          "type": "array",
                          "description": "List of ingress rules to be applied to the selected pods",
                          "items": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "array",
                                "description": "List of sources which should be able to access the pods selected for this rule",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipBlock": {
                                      "description": "Defines policy on a particular IPBlock",
                                      "type": "object",
                                      "properties": {
                                        "cidr": {
                                          "type": "string",
                                          "description": "Represents an IP Block",
                                          "example": "192.168.1.1/24"
                                        },
                                        "except": {
                                          "type": "array",
                                          "description": "CIDRs that should not be included within an IP Block",
                                          "items": {
                                            "type": "string",
                                            "description": "a CIDR",
                                            "example": "192.168.1.1/24"
                                          }
                                        }
                                      }
                                    },
                                    "namespaceSelector": {
                                      "description": "Matches all pods in all namespaces selected by this label selector",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "description": "A list of label selector requirements. The requirements are ANDed.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string",
                                                "description": "The label key that the selector applies to."
                                              },
                                              "operator": {
                                                "type": "string",
                                                "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                                "enum": [
                                                  "In",
                                                  "NotIn",
                                                  "Exists",
                                                  "DoesNotExist"
                                                ]
                                              },
                                              "values": {
                                                "type": "array",
                                                "description": "A list of operands",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        }
                                      }
                                    },
                                    "podSelector": {
                                      "description": "Selects all matching pods in the namespace",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "description": "A list of label selector requirements. The requirements are ANDed.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string",
                                                "description": "The label key that the selector applies to."
                                              },
                                              "operator": {
                                                "type": "string",
                                                "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                                "enum": [
                                                  "In",
                                                  "NotIn",
                                                  "Exists",
                                                  "DoesNotExist"
                                                ]
                                              },
                                              "values": {
                                                "type": "array",
                                                "description": "A list of operands",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "ports": {
                                "type": "array",
                                "description": "List of ports which should be made accessible on the pods selected for this rule",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "type": "integer",
                                      "description": "port on the pod"
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "description": "The protocol by which traffic must match. Defaults to TCP if not specified. In the future UDP and SCTP may be supported.",
                                      "enum": [
                                        "TCP"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "egress": {
                          "type": "array",
                          "description": "List of egress rules to be applied to the selected pods",
                          "items": {
                            "type": "object",
                            "properties": {
                              "to": {
                                "type": "array",
                                "description": "List of destinations for outgoing traffic of pods selected for this rule",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipBlock": {
                                      "description": "Defines policy on a particular IPBlock",
                                      "type": "object",
                                      "properties": {
                                        "cidr": {
                                          "type": "string",
                                          "description": "Represents an IP Block",
                                          "example": "192.168.1.1/24"
                                        },
                                        "except": {
                                          "type": "array",
                                          "description": "CIDRs that should not be included within an IP Block",
                                          "items": {
                                            "type": "string",
                                            "description": "a CIDR",
                                            "example": "192.168.1.1/24"
                                          }
                                        }
                                      }
                                    },
                                    "namespaceSelector": {
                                      "description": "Matches all pods in all namespaces selected by this label selector",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "description": "A list of label selector requirements. The requirements are ANDed.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string",
                                                "description": "The label key that the selector applies to."
                                              },
                                              "operator": {
                                                "type": "string",
                                                "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                                "enum": [
                                                  "In",
                                                  "NotIn",
                                                  "Exists",
                                                  "DoesNotExist"
                                                ]
                                              },
                                              "values": {
                                                "type": "array",
                                                "description": "A list of operands",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        }
                                      }
                                    },
                                    "podSelector": {
                                      "description": "Selects all matching pods in the namespace",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "description": "A list of label selector requirements. The requirements are ANDed.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string",
                                                "description": "The label key that the selector applies to."
                                              },
                                              "operator": {
                                                "type": "string",
                                                "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                                "enum": [
                                                  "In",
                                                  "NotIn",
                                                  "Exists",
                                                  "DoesNotExist"
                                                ]
                                              },
                                              "values": {
                                                "type": "array",
                                                "description": "A list of operands",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "ports": {
                                "type": "array",
                                "description": "List of destination ports for outgoing traffic",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "type": "integer",
                                      "description": "port on the pod"
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "description": "The protocol by which traffic must match. Defaults to TCP if not specified. In the future UDP and SCTP may be supported.",
                                      "enum": [
                                        "TCP"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podSelector": {
                          "description": "Selects the pods to which this NetworkPolicy object applies. An empty podSelector matches all pods in this namespace.",
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "description": "A list of label selector requirements. The requirements are ANDed.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "The label key that the selector applies to."
                                  },
                                  "operator": {
                                    "type": "string",
                                    "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                    "enum": [
                                      "In",
                                      "NotIn",
                                      "Exists",
                                      "DoesNotExist"
                                    ]
                                  },
                                  "values": {
                                    "type": "array",
                                    "description": "A list of operands",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                            }
                          }
                        },
                        "policyTypes": {
                          "type": "array",
                          "description": "List of rule types that the NetworkPolicy relates to",
                          "items": {
                            "type": "string",
                            "description": "A rule type",
                            "enum": [
                              "Ingress",
                              "Egress"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Indicates the requested KNP was successfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "description": "The text of a proposed Kubernetes Network Policy"
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkSecurity/namespaces/%7BnamespaceName%7D/simulatedPolicies\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"ingress\\\":[{\\\"from\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"egress\\\":[{\\\"to\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"policyTypes\\\":[\\\"Ingress\\\"]}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/networkSecurity/namespaces/%7BnamespaceName%7D/simulatedPolicies \\\n  --header 'content-type: application/json' \\\n  --data '{\"spec\":{\"ingress\":[{\"from\":[{\"ipBlock\":{\"cidr\":\"192.168.1.1/24\",\"except\":[\"192.168.1.1/24\"]},\"namespaceSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}},\"podSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}}}],\"ports\":[{\"port\":0,\"protocol\":\"TCP\"}]}],\"egress\":[{\"to\":[{\"ipBlock\":{\"cidr\":\"192.168.1.1/24\",\"except\":[\"192.168.1.1/24\"]},\"namespaceSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}},\"podSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}}}],\"ports\":[{\"port\":0,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}},\"policyTypes\":[\"Ingress\"]}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/networkSecurity/namespaces/%7BnamespaceName%7D/simulatedPolicies',\n  headers: {'content-type': 'application/json'},\n  body: {\n    spec: {\n      ingress: [\n        {\n          from: [\n            {\n              ipBlock: {cidr: '192.168.1.1/24', except: ['192.168.1.1/24']},\n              namespaceSelector: {\n                matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n                matchLabels: {}\n              },\n              podSelector: {\n                matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n                matchLabels: {}\n              }\n            }\n          ],\n          ports: [{port: 0, protocol: 'TCP'}]\n        }\n      ],\n      egress: [\n        {\n          to: [\n            {\n              ipBlock: {cidr: '192.168.1.1/24', except: ['192.168.1.1/24']},\n              namespaceSelector: {\n                matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n                matchLabels: {}\n              },\n              podSelector: {\n                matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n                matchLabels: {}\n              }\n            }\n          ],\n          ports: [{port: 0, protocol: 'TCP'}]\n        }\n      ],\n      podSelector: {\n        matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n        matchLabels: {}\n      },\n      policyTypes: ['Ingress']\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/networkSecurity/namespaces/%7BnamespaceName%7D/simulatedPolicies\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"spec\\\":{\\\"ingress\\\":[{\\\"from\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"egress\\\":[{\\\"to\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"policyTypes\\\":[\\\"Ingress\\\"]}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"spec\\\":{\\\"ingress\\\":[{\\\"from\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"egress\\\":[{\\\"to\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"policyTypes\\\":[\\\"Ingress\\\"]}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/v1/networkSecurity/namespaces/%7BnamespaceName%7D/simulatedPolicies\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkSecurity/networkPolicyOverlayOwnerTopology": {
        "post": {
          "summary": "Creates a communication topology graph around the specified owner",
          "description": "Creates a communication topology graph around the specified owner; if KNP spec is provided, marks communication edges as 'blocked' if they are blocked by the KNP",
          "tags": [
            "Network Security"
          ],
          "parameters": [
            {
              "name": "namespace",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes namespace"
            },
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            },
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a pod owner"
            },
            {
              "name": "kind",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "Service",
                  "Deployment",
                  "StatefulSet",
                  "DaemonSet",
                  "Pod",
                  "Namespace"
                ]
              },
              "description": "Specifies how to group pods"
            },
            {
              "name": "from",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the initial time of a range"
            },
            {
              "name": "to",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "A unix timestamp in seconds of specifying the end time of a range"
            }
          ],
          "requestBody": {
            "required": false,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "spec": {
                      "type": "object",
                      "properties": {
                        "ingress": {
                          "type": "array",
                          "description": "List of ingress rules to be applied to the selected pods",
                          "items": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "array",
                                "description": "List of sources which should be able to access the pods selected for this rule",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipBlock": {
                                      "description": "Defines policy on a particular IPBlock",
                                      "type": "object",
                                      "properties": {
                                        "cidr": {
                                          "type": "string",
                                          "description": "Represents an IP Block",
                                          "example": "192.168.1.1/24"
                                        },
                                        "except": {
                                          "type": "array",
                                          "description": "CIDRs that should not be included within an IP Block",
                                          "items": {
                                            "type": "string",
                                            "description": "a CIDR",
                                            "example": "192.168.1.1/24"
                                          }
                                        }
                                      }
                                    },
                                    "namespaceSelector": {
                                      "description": "Matches all pods in all namespaces selected by this label selector",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "description": "A list of label selector requirements. The requirements are ANDed.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string",
                                                "description": "The label key that the selector applies to."
                                              },
                                              "operator": {
                                                "type": "string",
                                                "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                                "enum": [
                                                  "In",
                                                  "NotIn",
                                                  "Exists",
                                                  "DoesNotExist"
                                                ]
                                              },
                                              "values": {
                                                "type": "array",
                                                "description": "A list of operands",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        }
                                      }
                                    },
                                    "podSelector": {
                                      "description": "Selects all matching pods in the namespace",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "description": "A list of label selector requirements. The requirements are ANDed.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string",
                                                "description": "The label key that the selector applies to."
                                              },
                                              "operator": {
                                                "type": "string",
                                                "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                                "enum": [
                                                  "In",
                                                  "NotIn",
                                                  "Exists",
                                                  "DoesNotExist"
                                                ]
                                              },
                                              "values": {
                                                "type": "array",
                                                "description": "A list of operands",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "ports": {
                                "type": "array",
                                "description": "List of ports which should be made accessible on the pods selected for this rule",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "type": "integer",
                                      "description": "port on the pod"
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "description": "The protocol by which traffic must match. Defaults to TCP if not specified. In the future UDP and SCTP may be supported.",
                                      "enum": [
                                        "TCP"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "egress": {
                          "type": "array",
                          "description": "List of egress rules to be applied to the selected pods",
                          "items": {
                            "type": "object",
                            "properties": {
                              "to": {
                                "type": "array",
                                "description": "List of destinations for outgoing traffic of pods selected for this rule",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "ipBlock": {
                                      "description": "Defines policy on a particular IPBlock",
                                      "type": "object",
                                      "properties": {
                                        "cidr": {
                                          "type": "string",
                                          "description": "Represents an IP Block",
                                          "example": "192.168.1.1/24"
                                        },
                                        "except": {
                                          "type": "array",
                                          "description": "CIDRs that should not be included within an IP Block",
                                          "items": {
                                            "type": "string",
                                            "description": "a CIDR",
                                            "example": "192.168.1.1/24"
                                          }
                                        }
                                      }
                                    },
                                    "namespaceSelector": {
                                      "description": "Matches all pods in all namespaces selected by this label selector",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "description": "A list of label selector requirements. The requirements are ANDed.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string",
                                                "description": "The label key that the selector applies to."
                                              },
                                              "operator": {
                                                "type": "string",
                                                "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                                "enum": [
                                                  "In",
                                                  "NotIn",
                                                  "Exists",
                                                  "DoesNotExist"
                                                ]
                                              },
                                              "values": {
                                                "type": "array",
                                                "description": "A list of operands",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        }
                                      }
                                    },
                                    "podSelector": {
                                      "description": "Selects all matching pods in the namespace",
                                      "type": "object",
                                      "properties": {
                                        "matchExpressions": {
                                          "type": "array",
                                          "description": "A list of label selector requirements. The requirements are ANDed.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "key": {
                                                "type": "string",
                                                "description": "The label key that the selector applies to."
                                              },
                                              "operator": {
                                                "type": "string",
                                                "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                                "enum": [
                                                  "In",
                                                  "NotIn",
                                                  "Exists",
                                                  "DoesNotExist"
                                                ]
                                              },
                                              "values": {
                                                "type": "array",
                                                "description": "A list of operands",
                                                "items": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "matchLabels": {
                                          "type": "object",
                                          "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "ports": {
                                "type": "array",
                                "description": "List of destination ports for outgoing traffic",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "port": {
                                      "type": "integer",
                                      "description": "port on the pod"
                                    },
                                    "protocol": {
                                      "type": "string",
                                      "description": "The protocol by which traffic must match. Defaults to TCP if not specified. In the future UDP and SCTP may be supported.",
                                      "enum": [
                                        "TCP"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "podSelector": {
                          "description": "Selects the pods to which this NetworkPolicy object applies. An empty podSelector matches all pods in this namespace.",
                          "type": "object",
                          "properties": {
                            "matchExpressions": {
                              "type": "array",
                              "description": "A list of label selector requirements. The requirements are ANDed.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "key": {
                                    "type": "string",
                                    "description": "The label key that the selector applies to."
                                  },
                                  "operator": {
                                    "type": "string",
                                    "description": "Represents a key's relationship to a set of values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty.",
                                    "enum": [
                                      "In",
                                      "NotIn",
                                      "Exists",
                                      "DoesNotExist"
                                    ]
                                  },
                                  "values": {
                                    "type": "array",
                                    "description": "A list of operands",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            },
                            "matchLabels": {
                              "type": "object",
                              "description": "A map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed."
                            }
                          }
                        },
                        "policyTypes": {
                          "type": "array",
                          "description": "List of rule types that the NetworkPolicy relates to",
                          "items": {
                            "type": "string",
                            "description": "A rule type",
                            "enum": [
                              "Ingress",
                              "Egress"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Indicates the requested topology graph is sucessfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Owner communication topology graph",
                    "properties": {
                      "graph": {
                        "type": "object",
                        "description": "Communication topology graph",
                        "properties": {
                          "metadata": {
                            "description": "Metadata, could be attached to a graph, an edge, or a vertex",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "vertices": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Pod Owner",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Vertex ID"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "service",
                                    "deployment",
                                    "statefulset",
                                    "daemonset",
                                    "namespace",
                                    "unresolvedip"
                                  ],
                                  "description": "Vertex type"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Pod Owner name"
                                },
                                "metadata": {
                                  "description": "Metadata, could be attached to a graph, an edge, or a vertex",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                },
                                "parent": {
                                  "type": "string",
                                  "description": "Namespace vertex ID; required for all pod owner types except 'namespace' and 'unresolvedip'"
                                }
                              }
                            }
                          },
                          "edges": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "A directed edge, indicates a relationship between two vertices",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "endpoints",
                                    "communication"
                                  ],
                                  "description": "Type of edge relationship"
                                },
                                "source": {
                                  "type": "string",
                                  "description": "ID of the source vertex"
                                },
                                "destination": {
                                  "type": "string",
                                  "description": "ID of the destination vertex"
                                },
                                "metadata": {
                                  "description": "Metadata, could be attached to a graph, an edge, or a vertex",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkSecurity/networkPolicyOverlayOwnerTopology?namespace=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"spec\\\":{\\\"ingress\\\":[{\\\"from\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"egress\\\":[{\\\"to\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"policyTypes\\\":[\\\"Ingress\\\"]}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url 'https://secure.sysdig.com/api/v1/networkSecurity/networkPolicyOverlayOwnerTopology?namespace=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"spec\":{\"ingress\":[{\"from\":[{\"ipBlock\":{\"cidr\":\"192.168.1.1/24\",\"except\":[\"192.168.1.1/24\"]},\"namespaceSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}},\"podSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}}}],\"ports\":[{\"port\":0,\"protocol\":\"TCP\"}]}],\"egress\":[{\"to\":[{\"ipBlock\":{\"cidr\":\"192.168.1.1/24\",\"except\":[\"192.168.1.1/24\"]},\"namespaceSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}},\"podSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}}}],\"ports\":[{\"port\":0,\"protocol\":\"TCP\"}]}],\"podSelector\":{\"matchExpressions\":[{\"key\":\"string\",\"operator\":\"In\",\"values\":[\"string\"]}],\"matchLabels\":{}},\"policyTypes\":[\"Ingress\"]}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/networkSecurity/networkPolicyOverlayOwnerTopology',\n  qs: {\n    namespace: 'SOME_STRING_VALUE',\n    cluster: 'SOME_STRING_VALUE',\n    name: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE'\n  },\n  headers: {'content-type': 'application/json'},\n  body: {\n    spec: {\n      ingress: [\n        {\n          from: [\n            {\n              ipBlock: {cidr: '192.168.1.1/24', except: ['192.168.1.1/24']},\n              namespaceSelector: {\n                matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n                matchLabels: {}\n              },\n              podSelector: {\n                matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n                matchLabels: {}\n              }\n            }\n          ],\n          ports: [{port: 0, protocol: 'TCP'}]\n        }\n      ],\n      egress: [\n        {\n          to: [\n            {\n              ipBlock: {cidr: '192.168.1.1/24', except: ['192.168.1.1/24']},\n              namespaceSelector: {\n                matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n                matchLabels: {}\n              },\n              podSelector: {\n                matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n                matchLabels: {}\n              }\n            }\n          ],\n          ports: [{port: 0, protocol: 'TCP'}]\n        }\n      ],\n      podSelector: {\n        matchExpressions: [{key: 'string', operator: 'In', values: ['string']}],\n        matchLabels: {}\n      },\n      policyTypes: ['Ingress']\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/networkSecurity/networkPolicyOverlayOwnerTopology?namespace=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"spec\\\":{\\\"ingress\\\":[{\\\"from\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"egress\\\":[{\\\"to\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"policyTypes\\\":[\\\"Ingress\\\"]}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"spec\\\":{\\\"ingress\\\":[{\\\"from\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"egress\\\":[{\\\"to\\\":[{\\\"ipBlock\\\":{\\\"cidr\\\":\\\"192.168.1.1/24\\\",\\\"except\\\":[\\\"192.168.1.1/24\\\"]},\\\"namespaceSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}}}],\\\"ports\\\":[{\\\"port\\\":0,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"podSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"string\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"string\\\"]}],\\\"matchLabels\\\":{}},\\\"policyTypes\\\":[\\\"Ingress\\\"]}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/v1/networkSecurity/networkPolicyOverlayOwnerTopology?namespace=SOME_STRING_VALUE&cluster=SOME_STRING_VALUE&name=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkSecurity/status": {
        "get": {
          "summary": "Ping the status",
          "description": "Retrieves a 200 to double check if the network security feature on the\nbackend is available.\n",
          "tags": [
            "Network Security"
          ],
          "responses": {
            "200": {
              "description": "Indicates the network security feature is available",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status.",
                        "enum": [
                          "ok"
                        ],
                        "example": "ok"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkSecurity/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/networkSecurity/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v1/networkSecurity/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkSecurity/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkSecurity/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/workloadLabelKeys": {
        "get": {
          "summary": "Returns sorted list of unique workload label key values",
          "tags": [
            "Network Topology"
          ],
          "description": "Returns sorted list of unique workload label key values",
          "parameters": [
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested list was returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of kubernetes labels"
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/workloadLabelKeys?cluster=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/workloadLabelKeys?cluster=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/workloadLabelKeys',\n  qs: {cluster: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/workloadLabelKeys?cluster=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/workloadLabelKeys?cluster=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/networkTopology/namespaceLabelKeys": {
        "get": {
          "summary": "Returns sorted list of unique namespace label key values",
          "tags": [
            "Network Topology"
          ],
          "description": "Returns sorted list of unique namespace label key values",
          "parameters": [
            {
              "name": "cluster",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a kubernetes cluster"
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the requested list was returned",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of kubernetes labels"
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "The user successfully authenticated but has insufficient permissions. More information about 403 can be found at https://httpstatuses.com/403",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "a human readable description of the error",
                        "example": "startDate cannot be more than 90 days earlier than endDate"
                      },
                      "referenceId": {
                        "type": "string",
                        "description": "Reference id for error tracking",
                        "example": "d2c5bb61-8b51-4b58-ad9d-1412b63e75de"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/networkTopology/namespaceLabelKeys?cluster=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/networkTopology/namespaceLabelKeys?cluster=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/networkTopology/namespaceLabelKeys',\n  qs: {cluster: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/networkTopology/namespaceLabelKeys?cluster=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/networkTopology/namespaceLabelKeys?cluster=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/captures": {
        "get": {
          "summary": "Retrieve the list of captures",
          "description": "Retrieve the list of captures",
          "tags": [
            "Captures"
          ],
          "parameters": [
            {
              "name": "ids",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "description": "Represents the id of a particular capture. Can be used multiple times in the same request to fetch multiple captures"
            },
            {
              "name": "offset",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "description": "Indicates the distance between the true starting point and the index of the first returned capture"
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "An enum of allowable fields to sort a list of captures",
                "enum": [
                  "date_requested",
                  "duration",
                  "name",
                  "size",
                  "status"
                ]
              }
            },
            {
              "name": "dir",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "An enum of ways to order a sorted collection of values",
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            },
            {
              "name": "filter",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "from",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "description": "Unix time of when to start looking for captures in microseconds"
            },
            {
              "name": "to",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "description": "Unix time of when to stop looking for captures in microseconds"
            },
            {
              "name": "source",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "An enum of Sysdig products",
                "enum": [
                  "sdc",
                  "sds"
                ]
              }
            },
            {
              "name": "scopeFilter",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "Limit the results to only captures matching a scope expression",
              "example": "kubernetes.cluster.name != null"
            },
            {
              "name": "metrics",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": [
                "host.mac",
                "host.hostName",
                "container.id",
                "container.name",
                "container.image"
              ]
            },
            {
              "name": "aggregations",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": [
                "host.mac",
                "host.hostName",
                "container.id",
                "container.name",
                "container.image"
              ]
            },
            {
              "name": "forceSync",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "annotations",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "token",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "Uniquely identifies a capture and correlates the capture to a request. Must match the following regex ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}",
              "example": "960d9da0-cc79-4079-932a-544e193ab385"
            }
          ],
          "responses": {
            "200": {
              "description": "The array representing the captures",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "A list of captures and associated metadata",
                    "properties": {
                      "total": {
                        "type": "integer",
                        "description": "Indicates how many captures would have been returned if no limit query param was specified. It does not represent the number of captures returned in the request."
                      },
                      "captures": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Metadata to create a capture",
                              "properties": {
                                "source": {
                                  "type": "string",
                                  "description": "An enum of Sysdig products",
                                  "enum": [
                                    "sdc",
                                    "sds"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "A way to reference a capture. Must not be empty",
                                  "example": "my_capture.scap"
                                },
                                "duration": {
                                  "type": "integer",
                                  "description": "The range in time from when the capture began to when it ended in seconds. The maximum value is 86400",
                                  "example": 30
                                },
                                "containerId": {
                                  "type": "integer",
                                  "description": "Uniquely identifies a container",
                                  "example": "8883164eb9bf"
                                },
                                "bucketName": {
                                  "type": "string",
                                  "description": "The name of the s3 bucket to which the capture will be saved. May be null"
                                },
                                "folder": {
                                  "type": "string",
                                  "description": "The name of a folder in an s3 bucket",
                                  "example": "/"
                                },
                                "annotations": {
                                  "type": "object",
                                  "description": "A map of assorted metadata",
                                  "additionalProperties": true
                                },
                                "filters": {
                                  "type": "string",
                                  "description": "A way to only capture a subset of the data",
                                  "example": "proc.name=vi"
                                },
                                "agent": {
                                  "type": "object",
                                  "description": "Describes a Sysdig agent running on a machine",
                                  "properties": {
                                    "customer": {
                                      "type": "integer",
                                      "description": "The ID of a particular customer"
                                    },
                                    "id": {
                                      "type": "integer",
                                      "description": "Uniquely identifies an agent",
                                      "example": 34688
                                    },
                                    "machineId": {
                                      "type": "string",
                                      "description": "Uniquely identifies a machine",
                                      "example": "12:dd:fe:e0:17:0b"
                                    },
                                    "hostName": {
                                      "type": "string",
                                      "description": "The name of the host the agent is running on",
                                      "example": "ip-10-2-157-201"
                                    },
                                    "attributes": {
                                      "type": "object",
                                      "additionalProperties": true
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "description": "Contains system calls and other operating system events"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "uniquely identifies the capture",
                                  "example": 1327048
                                },
                                "maxSize": {
                                  "type": "integer",
                                  "description": "The maximum number of bytes allowed to be in this capture",
                                  "example": 104857600
                                },
                                "pastDuration": {
                                  "type": "integer",
                                  "description": "The range in time from when the capture began to when the event that triggered the capture occurred in seconds. The maximum value is 86400",
                                  "example": 3
                                },
                                "pastSize": {
                                  "type": "integer",
                                  "description": "The amount of bytes in the capture that occurred in the pastDuration interval"
                                },
                                "dateRequested": {
                                  "type": "integer",
                                  "description": "The unix timestamp of when the capture was requested in milliseconds",
                                  "example": 1625783854265
                                },
                                "dateReceived": {
                                  "type": "integer",
                                  "description": "The unx timestamp of when the Sysdig backend received the capture from the agent in milliseconds",
                                  "example": 1625783881254
                                },
                                "downloadUrl": {
                                  "type": "string",
                                  "description": "The url to download the capture",
                                  "example": "/api/v1/captures/1327048/download"
                                },
                                "size": {
                                  "type": "integer",
                                  "description": "The number of bytes in the capture",
                                  "example": 87335540
                                },
                                "type": {
                                  "type": "string",
                                  "description": "An enum of the different types of storage to which captures can be saved",
                                  "enum": [
                                    "local",
                                    "s3",
                                    "agent",
                                    "provided",
                                    "cassandra"
                                  ]
                                },
                                "status": {
                                  "type": "string",
                                  "description": "An enum of the different statuses a capture can have",
                                  "enum": [
                                    "requested",
                                    "filtering",
                                    "capturing",
                                    "done",
                                    "error",
                                    "uploading",
                                    "uploadingError",
                                    "uploaded"
                                  ]
                                },
                                "accessKey": {
                                  "type": "string",
                                  "description": "The key that allows an agent to communicate with a collector"
                                },
                                "bytesReceived": {
                                  "type": "integer",
                                  "description": "The number of bytes the Sysdig backend has received from the agent",
                                  "example": 87335540
                                },
                                "bytesStored": {
                                  "type": "integer",
                                  "description": "The number of bytes the Sysdig backend has pushed to a storage provider",
                                  "example": 87335540
                                },
                                "token": {
                                  "type": "string",
                                  "description": "Uniquely identifies a capture and correlates the capture to a request. Must match the following regex ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}",
                                  "example": "960d9da0-cc79-4079-932a-544e193ab385"
                                },
                                "metrics": {
                                  "type": "array",
                                  "description": "A list of metrics",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "storageId": {
                                  "type": "integer",
                                  "description": "Uniquely identifies a storage configuration",
                                  "example": 153
                                },
                                "scope": {
                                  "type": "string",
                                  "description": "A scope expression that limits where the capture could have been taken",
                                  "example": "host.hostName = 'ip-10-2-157-201'"
                                },
                                "machineId": {
                                  "type": "string",
                                  "description": "Uniquely identifies a machine",
                                  "example": "12:dd:fe:e0:17:0b"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "offset": {
                        "type": "integer",
                        "description": "Indicates the distance between the true starting point and the index of the first returned capture. Corresponds to the offset query param that was provided in the original request."
                      },
                      "canLoadMore": {
                        "type": "boolean",
                        "description": "Indicates whether the number of captures returned had some limit applied"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a query param was invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Details on why the request was invalid",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "description": "A list of errors",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "Explains why the request was rejected",
                              "example": "Value for parameter 'dir' is not supported"
                            },
                            "reason": {
                              "type": "string",
                              "description": "Describes the http status code",
                              "example": "Bad Request"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/captures?ids=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&dir=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE&source=SOME_STRING_VALUE&scopeFilter=SOME_STRING_VALUE&metrics=SOME_STRING_VALUE&aggregations=SOME_STRING_VALUE&forceSync=SOME_BOOLEAN_VALUE&annotations=SOME_STRING_VALUE&token=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/captures?ids=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&dir=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE&source=SOME_STRING_VALUE&scopeFilter=SOME_STRING_VALUE&metrics=SOME_STRING_VALUE&aggregations=SOME_STRING_VALUE&forceSync=SOME_BOOLEAN_VALUE&annotations=SOME_STRING_VALUE&token=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/captures',\n  qs: {\n    ids: 'SOME_INTEGER_VALUE',\n    offset: 'SOME_INTEGER_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    sort: 'SOME_STRING_VALUE',\n    dir: 'SOME_STRING_VALUE',\n    filter: 'SOME_STRING_VALUE',\n    from: 'SOME_INTEGER_VALUE',\n    to: 'SOME_INTEGER_VALUE',\n    source: 'SOME_STRING_VALUE',\n    scopeFilter: 'SOME_STRING_VALUE',\n    metrics: 'SOME_STRING_VALUE',\n    aggregations: 'SOME_STRING_VALUE',\n    forceSync: 'SOME_BOOLEAN_VALUE',\n    annotations: 'SOME_STRING_VALUE',\n    token: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/captures?ids=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&dir=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE&source=SOME_STRING_VALUE&scopeFilter=SOME_STRING_VALUE&metrics=SOME_STRING_VALUE&aggregations=SOME_STRING_VALUE&forceSync=SOME_BOOLEAN_VALUE&annotations=SOME_STRING_VALUE&token=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/captures?ids=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&sort=SOME_STRING_VALUE&dir=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&from=SOME_INTEGER_VALUE&to=SOME_INTEGER_VALUE&source=SOME_STRING_VALUE&scopeFilter=SOME_STRING_VALUE&metrics=SOME_STRING_VALUE&aggregations=SOME_STRING_VALUE&forceSync=SOME_BOOLEAN_VALUE&annotations=SOME_STRING_VALUE&token=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create a capture",
          "description": "Create a capture",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Metadata to create a capture",
                  "properties": {
                    "source": {
                      "type": "string",
                      "description": "An enum of Sysdig products",
                      "enum": [
                        "sdc",
                        "sds"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "A way to reference a capture. Must not be empty",
                      "example": "my_capture.scap"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The range in time from when the capture began to when it ended in seconds. The maximum value is 86400",
                      "example": 30
                    },
                    "containerId": {
                      "type": "integer",
                      "description": "Uniquely identifies a container",
                      "example": "8883164eb9bf"
                    },
                    "bucketName": {
                      "type": "string",
                      "description": "The name of the s3 bucket to which the capture will be saved. May be null"
                    },
                    "folder": {
                      "type": "string",
                      "description": "The name of a folder in an s3 bucket",
                      "example": "/"
                    },
                    "annotations": {
                      "type": "object",
                      "description": "A map of assorted metadata",
                      "additionalProperties": true
                    },
                    "filters": {
                      "type": "string",
                      "description": "A way to only capture a subset of the data",
                      "example": "proc.name=vi"
                    },
                    "agent": {
                      "type": "object",
                      "description": "Describes a Sysdig agent running on a machine",
                      "properties": {
                        "customer": {
                          "type": "integer",
                          "description": "The ID of a particular customer"
                        },
                        "id": {
                          "type": "integer",
                          "description": "Uniquely identifies an agent",
                          "example": 34688
                        },
                        "machineId": {
                          "type": "string",
                          "description": "Uniquely identifies a machine",
                          "example": "12:dd:fe:e0:17:0b"
                        },
                        "hostName": {
                          "type": "string",
                          "description": "The name of the host the agent is running on",
                          "example": "ip-10-2-157-201"
                        },
                        "attributes": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Captures"
          ],
          "responses": {
            "200": {
              "description": "Successfully created a capture",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "capture": {
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Metadata to create a capture",
                            "properties": {
                              "source": {
                                "type": "string",
                                "description": "An enum of Sysdig products",
                                "enum": [
                                  "sdc",
                                  "sds"
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "A way to reference a capture. Must not be empty",
                                "example": "my_capture.scap"
                              },
                              "duration": {
                                "type": "integer",
                                "description": "The range in time from when the capture began to when it ended in seconds. The maximum value is 86400",
                                "example": 30
                              },
                              "containerId": {
                                "type": "integer",
                                "description": "Uniquely identifies a container",
                                "example": "8883164eb9bf"
                              },
                              "bucketName": {
                                "type": "string",
                                "description": "The name of the s3 bucket to which the capture will be saved. May be null"
                              },
                              "folder": {
                                "type": "string",
                                "description": "The name of a folder in an s3 bucket",
                                "example": "/"
                              },
                              "annotations": {
                                "type": "object",
                                "description": "A map of assorted metadata",
                                "additionalProperties": true
                              },
                              "filters": {
                                "type": "string",
                                "description": "A way to only capture a subset of the data",
                                "example": "proc.name=vi"
                              },
                              "agent": {
                                "type": "object",
                                "description": "Describes a Sysdig agent running on a machine",
                                "properties": {
                                  "customer": {
                                    "type": "integer",
                                    "description": "The ID of a particular customer"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "description": "Uniquely identifies an agent",
                                    "example": 34688
                                  },
                                  "machineId": {
                                    "type": "string",
                                    "description": "Uniquely identifies a machine",
                                    "example": "12:dd:fe:e0:17:0b"
                                  },
                                  "hostName": {
                                    "type": "string",
                                    "description": "The name of the host the agent is running on",
                                    "example": "ip-10-2-157-201"
                                  },
                                  "attributes": {
                                    "type": "object",
                                    "additionalProperties": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "description": "Contains system calls and other operating system events"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "uniquely identifies the capture",
                                "example": 1327048
                              },
                              "maxSize": {
                                "type": "integer",
                                "description": "The maximum number of bytes allowed to be in this capture",
                                "example": 104857600
                              },
                              "pastDuration": {
                                "type": "integer",
                                "description": "The range in time from when the capture began to when the event that triggered the capture occurred in seconds. The maximum value is 86400",
                                "example": 3
                              },
                              "pastSize": {
                                "type": "integer",
                                "description": "The amount of bytes in the capture that occurred in the pastDuration interval"
                              },
                              "dateRequested": {
                                "type": "integer",
                                "description": "The unix timestamp of when the capture was requested in milliseconds",
                                "example": 1625783854265
                              },
                              "dateReceived": {
                                "type": "integer",
                                "description": "The unx timestamp of when the Sysdig backend received the capture from the agent in milliseconds",
                                "example": 1625783881254
                              },
                              "downloadUrl": {
                                "type": "string",
                                "description": "The url to download the capture",
                                "example": "/api/v1/captures/1327048/download"
                              },
                              "size": {
                                "type": "integer",
                                "description": "The number of bytes in the capture",
                                "example": 87335540
                              },
                              "type": {
                                "type": "string",
                                "description": "An enum of the different types of storage to which captures can be saved",
                                "enum": [
                                  "local",
                                  "s3",
                                  "agent",
                                  "provided",
                                  "cassandra"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "description": "An enum of the different statuses a capture can have",
                                "enum": [
                                  "requested",
                                  "filtering",
                                  "capturing",
                                  "done",
                                  "error",
                                  "uploading",
                                  "uploadingError",
                                  "uploaded"
                                ]
                              },
                              "accessKey": {
                                "type": "string",
                                "description": "The key that allows an agent to communicate with a collector"
                              },
                              "bytesReceived": {
                                "type": "integer",
                                "description": "The number of bytes the Sysdig backend has received from the agent",
                                "example": 87335540
                              },
                              "bytesStored": {
                                "type": "integer",
                                "description": "The number of bytes the Sysdig backend has pushed to a storage provider",
                                "example": 87335540
                              },
                              "token": {
                                "type": "string",
                                "description": "Uniquely identifies a capture and correlates the capture to a request. Must match the following regex ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}",
                                "example": "960d9da0-cc79-4079-932a-544e193ab385"
                              },
                              "metrics": {
                                "type": "array",
                                "description": "A list of metrics",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "storageId": {
                                "type": "integer",
                                "description": "Uniquely identifies a storage configuration",
                                "example": 153
                              },
                              "scope": {
                                "type": "string",
                                "description": "A scope expression that limits where the capture could have been taken",
                                "example": "host.hostName = 'ip-10-2-157-201'"
                              },
                              "machineId": {
                                "type": "string",
                                "description": "Uniquely identifies a machine",
                                "example": "12:dd:fe:e0:17:0b"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates the request body was invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Details on why the request was invalid",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "description": "A list of errors",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "Explains why the request was rejected",
                              "example": "Value for parameter 'dir' is not supported"
                            },
                            "reason": {
                              "type": "string",
                              "description": "Describes the http status code",
                              "example": "Bad Request"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/captures\"\n\n\tpayload := strings.NewReader(\"{\\\"source\\\":\\\"sdc\\\",\\\"name\\\":\\\"my_capture.scap\\\",\\\"duration\\\":30,\\\"containerId\\\":\\\"8883164eb9bf\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"/\\\",\\\"annotations\\\":{},\\\"filters\\\":\\\"proc.name=vi\\\",\\\"agent\\\":{\\\"customer\\\":0,\\\"id\\\":34688,\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\",\\\"hostName\\\":\\\"ip-10-2-157-201\\\",\\\"attributes\\\":{}}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/captures \\\n  --header 'content-type: application/json' \\\n  --data '{\"source\":\"sdc\",\"name\":\"my_capture.scap\",\"duration\":30,\"containerId\":\"8883164eb9bf\",\"bucketName\":\"string\",\"folder\":\"/\",\"annotations\":{},\"filters\":\"proc.name=vi\",\"agent\":{\"customer\":0,\"id\":34688,\"machineId\":\"12:dd:fe:e0:17:0b\",\"hostName\":\"ip-10-2-157-201\",\"attributes\":{}}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/captures',\n  headers: {'content-type': 'application/json'},\n  body: {\n    source: 'sdc',\n    name: 'my_capture.scap',\n    duration: 30,\n    containerId: '8883164eb9bf',\n    bucketName: 'string',\n    folder: '/',\n    annotations: {},\n    filters: 'proc.name=vi',\n    agent: {\n      customer: 0,\n      id: 34688,\n      machineId: '12:dd:fe:e0:17:0b',\n      hostName: 'ip-10-2-157-201',\n      attributes: {}\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/captures\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"source\\\":\\\"sdc\\\",\\\"name\\\":\\\"my_capture.scap\\\",\\\"duration\\\":30,\\\"containerId\\\":\\\"8883164eb9bf\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"/\\\",\\\"annotations\\\":{},\\\"filters\\\":\\\"proc.name=vi\\\",\\\"agent\\\":{\\\"customer\\\":0,\\\"id\\\":34688,\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\",\\\"hostName\\\":\\\"ip-10-2-157-201\\\",\\\"attributes\\\":{}}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"source\\\":\\\"sdc\\\",\\\"name\\\":\\\"my_capture.scap\\\",\\\"duration\\\":30,\\\"containerId\\\":\\\"8883164eb9bf\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"/\\\",\\\"annotations\\\":{},\\\"filters\\\":\\\"proc.name=vi\\\",\\\"agent\\\":{\\\"customer\\\":0,\\\"id\\\":34688,\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\",\\\"hostName\\\":\\\"ip-10-2-157-201\\\",\\\"attributes\\\":{}}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/v1/captures\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete captures",
          "description": "Delete captures",
          "parameters": [
            {
              "name": "ids",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "description": "Represents the id of a particular capture. Can be used multiple times in the same request to delete multiple captures"
            },
            {
              "name": "source",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "An enum of Sysdig products",
                "enum": [
                  "sdc",
                  "sds"
                ]
              },
              "description": "Indicates that only captures belonging to either the monitor or secure product should be considered for deletion. Defaults to SDC if not specified"
            },
            {
              "name": "statuses",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "An enum of the different statuses a capture can have",
                "enum": [
                  "requested",
                  "filtering",
                  "capturing",
                  "done",
                  "error",
                  "uploading",
                  "uploadingError",
                  "uploaded"
                ]
              },
              "description": "Indicates that only captures with a particular status should be considered for deletion. Can be used multiple times in the same request"
            }
          ],
          "tags": [
            "Captures"
          ],
          "responses": {
            "200": {
              "description": "The number of captures deleted",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "deleted": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "deleted"
                    ],
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/captures?ids=SOME_INTEGER_VALUE&source=SOME_STRING_VALUE&statuses=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url 'https://secure.sysdig.com/api/v1/captures?ids=SOME_INTEGER_VALUE&source=SOME_STRING_VALUE&statuses=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/v1/captures',\n  qs: {\n    ids: 'SOME_INTEGER_VALUE',\n    source: 'SOME_STRING_VALUE',\n    statuses: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/v1/captures?ids=SOME_INTEGER_VALUE&source=SOME_STRING_VALUE&statuses=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/v1/captures?ids=SOME_INTEGER_VALUE&source=SOME_STRING_VALUE&statuses=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/captures/{captureId}": {
        "get": {
          "summary": "Get a capture",
          "description": "Get a capture",
          "parameters": [
            {
              "name": "captureId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Captures"
          ],
          "responses": {
            "200": {
              "description": "Successfully retrieved a capture",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "capture": {
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Metadata to create a capture",
                            "properties": {
                              "source": {
                                "type": "string",
                                "description": "An enum of Sysdig products",
                                "enum": [
                                  "sdc",
                                  "sds"
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "A way to reference a capture. Must not be empty",
                                "example": "my_capture.scap"
                              },
                              "duration": {
                                "type": "integer",
                                "description": "The range in time from when the capture began to when it ended in seconds. The maximum value is 86400",
                                "example": 30
                              },
                              "containerId": {
                                "type": "integer",
                                "description": "Uniquely identifies a container",
                                "example": "8883164eb9bf"
                              },
                              "bucketName": {
                                "type": "string",
                                "description": "The name of the s3 bucket to which the capture will be saved. May be null"
                              },
                              "folder": {
                                "type": "string",
                                "description": "The name of a folder in an s3 bucket",
                                "example": "/"
                              },
                              "annotations": {
                                "type": "object",
                                "description": "A map of assorted metadata",
                                "additionalProperties": true
                              },
                              "filters": {
                                "type": "string",
                                "description": "A way to only capture a subset of the data",
                                "example": "proc.name=vi"
                              },
                              "agent": {
                                "type": "object",
                                "description": "Describes a Sysdig agent running on a machine",
                                "properties": {
                                  "customer": {
                                    "type": "integer",
                                    "description": "The ID of a particular customer"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "description": "Uniquely identifies an agent",
                                    "example": 34688
                                  },
                                  "machineId": {
                                    "type": "string",
                                    "description": "Uniquely identifies a machine",
                                    "example": "12:dd:fe:e0:17:0b"
                                  },
                                  "hostName": {
                                    "type": "string",
                                    "description": "The name of the host the agent is running on",
                                    "example": "ip-10-2-157-201"
                                  },
                                  "attributes": {
                                    "type": "object",
                                    "additionalProperties": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "description": "Contains system calls and other operating system events"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "uniquely identifies the capture",
                                "example": 1327048
                              },
                              "maxSize": {
                                "type": "integer",
                                "description": "The maximum number of bytes allowed to be in this capture",
                                "example": 104857600
                              },
                              "pastDuration": {
                                "type": "integer",
                                "description": "The range in time from when the capture began to when the event that triggered the capture occurred in seconds. The maximum value is 86400",
                                "example": 3
                              },
                              "pastSize": {
                                "type": "integer",
                                "description": "The amount of bytes in the capture that occurred in the pastDuration interval"
                              },
                              "dateRequested": {
                                "type": "integer",
                                "description": "The unix timestamp of when the capture was requested in milliseconds",
                                "example": 1625783854265
                              },
                              "dateReceived": {
                                "type": "integer",
                                "description": "The unx timestamp of when the Sysdig backend received the capture from the agent in milliseconds",
                                "example": 1625783881254
                              },
                              "downloadUrl": {
                                "type": "string",
                                "description": "The url to download the capture",
                                "example": "/api/v1/captures/1327048/download"
                              },
                              "size": {
                                "type": "integer",
                                "description": "The number of bytes in the capture",
                                "example": 87335540
                              },
                              "type": {
                                "type": "string",
                                "description": "An enum of the different types of storage to which captures can be saved",
                                "enum": [
                                  "local",
                                  "s3",
                                  "agent",
                                  "provided",
                                  "cassandra"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "description": "An enum of the different statuses a capture can have",
                                "enum": [
                                  "requested",
                                  "filtering",
                                  "capturing",
                                  "done",
                                  "error",
                                  "uploading",
                                  "uploadingError",
                                  "uploaded"
                                ]
                              },
                              "accessKey": {
                                "type": "string",
                                "description": "The key that allows an agent to communicate with a collector"
                              },
                              "bytesReceived": {
                                "type": "integer",
                                "description": "The number of bytes the Sysdig backend has received from the agent",
                                "example": 87335540
                              },
                              "bytesStored": {
                                "type": "integer",
                                "description": "The number of bytes the Sysdig backend has pushed to a storage provider",
                                "example": 87335540
                              },
                              "token": {
                                "type": "string",
                                "description": "Uniquely identifies a capture and correlates the capture to a request. Must match the following regex ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}",
                                "example": "960d9da0-cc79-4079-932a-544e193ab385"
                              },
                              "metrics": {
                                "type": "array",
                                "description": "A list of metrics",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "storageId": {
                                "type": "integer",
                                "description": "Uniquely identifies a storage configuration",
                                "example": 153
                              },
                              "scope": {
                                "type": "string",
                                "description": "A scope expression that limits where the capture could have been taken",
                                "example": "host.hostName = 'ip-10-2-157-201'"
                              },
                              "machineId": {
                                "type": "string",
                                "description": "Uniquely identifies a machine",
                                "example": "12:dd:fe:e0:17:0b"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The capture could not be found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Details on why the object could not be found",
                    "properties": {
                      "timestamp": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "integer",
                        "description": "The http status"
                      },
                      "error": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string",
                        "description": "The path used by the corresponding request"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/captures/%7BcaptureId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update a capture",
          "description": "Update a capture",
          "parameters": [
            {
              "name": "captureId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Metadata to create a capture",
                      "properties": {
                        "source": {
                          "type": "string",
                          "description": "An enum of Sysdig products",
                          "enum": [
                            "sdc",
                            "sds"
                          ]
                        },
                        "name": {
                          "type": "string",
                          "description": "A way to reference a capture. Must not be empty",
                          "example": "my_capture.scap"
                        },
                        "duration": {
                          "type": "integer",
                          "description": "The range in time from when the capture began to when it ended in seconds. The maximum value is 86400",
                          "example": 30
                        },
                        "containerId": {
                          "type": "integer",
                          "description": "Uniquely identifies a container",
                          "example": "8883164eb9bf"
                        },
                        "bucketName": {
                          "type": "string",
                          "description": "The name of the s3 bucket to which the capture will be saved. May be null"
                        },
                        "folder": {
                          "type": "string",
                          "description": "The name of a folder in an s3 bucket",
                          "example": "/"
                        },
                        "annotations": {
                          "type": "object",
                          "description": "A map of assorted metadata",
                          "additionalProperties": true
                        },
                        "filters": {
                          "type": "string",
                          "description": "A way to only capture a subset of the data",
                          "example": "proc.name=vi"
                        },
                        "agent": {
                          "type": "object",
                          "description": "Describes a Sysdig agent running on a machine",
                          "properties": {
                            "customer": {
                              "type": "integer",
                              "description": "The ID of a particular customer"
                            },
                            "id": {
                              "type": "integer",
                              "description": "Uniquely identifies an agent",
                              "example": 34688
                            },
                            "machineId": {
                              "type": "string",
                              "description": "Uniquely identifies a machine",
                              "example": "12:dd:fe:e0:17:0b"
                            },
                            "hostName": {
                              "type": "string",
                              "description": "The name of the host the agent is running on",
                              "example": "ip-10-2-157-201"
                            },
                            "attributes": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          }
                        }
                      }
                    },
                    {
                      "description": "Contains system calls and other operating system events"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "uniquely identifies the capture",
                          "example": 1327048
                        },
                        "maxSize": {
                          "type": "integer",
                          "description": "The maximum number of bytes allowed to be in this capture",
                          "example": 104857600
                        },
                        "pastDuration": {
                          "type": "integer",
                          "description": "The range in time from when the capture began to when the event that triggered the capture occurred in seconds. The maximum value is 86400",
                          "example": 3
                        },
                        "pastSize": {
                          "type": "integer",
                          "description": "The amount of bytes in the capture that occurred in the pastDuration interval"
                        },
                        "dateRequested": {
                          "type": "integer",
                          "description": "The unix timestamp of when the capture was requested in milliseconds",
                          "example": 1625783854265
                        },
                        "dateReceived": {
                          "type": "integer",
                          "description": "The unx timestamp of when the Sysdig backend received the capture from the agent in milliseconds",
                          "example": 1625783881254
                        },
                        "downloadUrl": {
                          "type": "string",
                          "description": "The url to download the capture",
                          "example": "/api/v1/captures/1327048/download"
                        },
                        "size": {
                          "type": "integer",
                          "description": "The number of bytes in the capture",
                          "example": 87335540
                        },
                        "type": {
                          "type": "string",
                          "description": "An enum of the different types of storage to which captures can be saved",
                          "enum": [
                            "local",
                            "s3",
                            "agent",
                            "provided",
                            "cassandra"
                          ]
                        },
                        "status": {
                          "type": "string",
                          "description": "An enum of the different statuses a capture can have",
                          "enum": [
                            "requested",
                            "filtering",
                            "capturing",
                            "done",
                            "error",
                            "uploading",
                            "uploadingError",
                            "uploaded"
                          ]
                        },
                        "accessKey": {
                          "type": "string",
                          "description": "The key that allows an agent to communicate with a collector"
                        },
                        "bytesReceived": {
                          "type": "integer",
                          "description": "The number of bytes the Sysdig backend has received from the agent",
                          "example": 87335540
                        },
                        "bytesStored": {
                          "type": "integer",
                          "description": "The number of bytes the Sysdig backend has pushed to a storage provider",
                          "example": 87335540
                        },
                        "token": {
                          "type": "string",
                          "description": "Uniquely identifies a capture and correlates the capture to a request. Must match the following regex ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}",
                          "example": "960d9da0-cc79-4079-932a-544e193ab385"
                        },
                        "metrics": {
                          "type": "array",
                          "description": "A list of metrics",
                          "items": {
                            "type": "string"
                          }
                        },
                        "storageId": {
                          "type": "integer",
                          "description": "Uniquely identifies a storage configuration",
                          "example": 153
                        },
                        "scope": {
                          "type": "string",
                          "description": "A scope expression that limits where the capture could have been taken",
                          "example": "host.hostName = 'ip-10-2-157-201'"
                        },
                        "machineId": {
                          "type": "string",
                          "description": "Uniquely identifies a machine",
                          "example": "12:dd:fe:e0:17:0b"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Captures"
          ],
          "responses": {
            "200": {
              "description": "Successfully updated a capture",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Metadata to create a capture",
                        "properties": {
                          "source": {
                            "type": "string",
                            "description": "An enum of Sysdig products",
                            "enum": [
                              "sdc",
                              "sds"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "A way to reference a capture. Must not be empty",
                            "example": "my_capture.scap"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The range in time from when the capture began to when it ended in seconds. The maximum value is 86400",
                            "example": 30
                          },
                          "containerId": {
                            "type": "integer",
                            "description": "Uniquely identifies a container",
                            "example": "8883164eb9bf"
                          },
                          "bucketName": {
                            "type": "string",
                            "description": "The name of the s3 bucket to which the capture will be saved. May be null"
                          },
                          "folder": {
                            "type": "string",
                            "description": "The name of a folder in an s3 bucket",
                            "example": "/"
                          },
                          "annotations": {
                            "type": "object",
                            "description": "A map of assorted metadata",
                            "additionalProperties": true
                          },
                          "filters": {
                            "type": "string",
                            "description": "A way to only capture a subset of the data",
                            "example": "proc.name=vi"
                          },
                          "agent": {
                            "type": "object",
                            "description": "Describes a Sysdig agent running on a machine",
                            "properties": {
                              "customer": {
                                "type": "integer",
                                "description": "The ID of a particular customer"
                              },
                              "id": {
                                "type": "integer",
                                "description": "Uniquely identifies an agent",
                                "example": 34688
                              },
                              "machineId": {
                                "type": "string",
                                "description": "Uniquely identifies a machine",
                                "example": "12:dd:fe:e0:17:0b"
                              },
                              "hostName": {
                                "type": "string",
                                "description": "The name of the host the agent is running on",
                                "example": "ip-10-2-157-201"
                              },
                              "attributes": {
                                "type": "object",
                                "additionalProperties": true
                              }
                            }
                          }
                        }
                      },
                      {
                        "description": "Contains system calls and other operating system events"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "uniquely identifies the capture",
                            "example": 1327048
                          },
                          "maxSize": {
                            "type": "integer",
                            "description": "The maximum number of bytes allowed to be in this capture",
                            "example": 104857600
                          },
                          "pastDuration": {
                            "type": "integer",
                            "description": "The range in time from when the capture began to when the event that triggered the capture occurred in seconds. The maximum value is 86400",
                            "example": 3
                          },
                          "pastSize": {
                            "type": "integer",
                            "description": "The amount of bytes in the capture that occurred in the pastDuration interval"
                          },
                          "dateRequested": {
                            "type": "integer",
                            "description": "The unix timestamp of when the capture was requested in milliseconds",
                            "example": 1625783854265
                          },
                          "dateReceived": {
                            "type": "integer",
                            "description": "The unx timestamp of when the Sysdig backend received the capture from the agent in milliseconds",
                            "example": 1625783881254
                          },
                          "downloadUrl": {
                            "type": "string",
                            "description": "The url to download the capture",
                            "example": "/api/v1/captures/1327048/download"
                          },
                          "size": {
                            "type": "integer",
                            "description": "The number of bytes in the capture",
                            "example": 87335540
                          },
                          "type": {
                            "type": "string",
                            "description": "An enum of the different types of storage to which captures can be saved",
                            "enum": [
                              "local",
                              "s3",
                              "agent",
                              "provided",
                              "cassandra"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "An enum of the different statuses a capture can have",
                            "enum": [
                              "requested",
                              "filtering",
                              "capturing",
                              "done",
                              "error",
                              "uploading",
                              "uploadingError",
                              "uploaded"
                            ]
                          },
                          "accessKey": {
                            "type": "string",
                            "description": "The key that allows an agent to communicate with a collector"
                          },
                          "bytesReceived": {
                            "type": "integer",
                            "description": "The number of bytes the Sysdig backend has received from the agent",
                            "example": 87335540
                          },
                          "bytesStored": {
                            "type": "integer",
                            "description": "The number of bytes the Sysdig backend has pushed to a storage provider",
                            "example": 87335540
                          },
                          "token": {
                            "type": "string",
                            "description": "Uniquely identifies a capture and correlates the capture to a request. Must match the following regex ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}",
                            "example": "960d9da0-cc79-4079-932a-544e193ab385"
                          },
                          "metrics": {
                            "type": "array",
                            "description": "A list of metrics",
                            "items": {
                              "type": "string"
                            }
                          },
                          "storageId": {
                            "type": "integer",
                            "description": "Uniquely identifies a storage configuration",
                            "example": 153
                          },
                          "scope": {
                            "type": "string",
                            "description": "A scope expression that limits where the capture could have been taken",
                            "example": "host.hostName = 'ip-10-2-157-201'"
                          },
                          "machineId": {
                            "type": "string",
                            "description": "Uniquely identifies a machine",
                            "example": "12:dd:fe:e0:17:0b"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Indicates the request body was invalid",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Details on why the request was invalid",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "description": "A list of errors",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "Explains why the request was rejected",
                              "example": "Value for parameter 'dir' is not supported"
                            },
                            "reason": {
                              "type": "string",
                              "description": "Describes the http status code",
                              "example": "Bad Request"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"source\\\":\\\"sdc\\\",\\\"name\\\":\\\"my_capture.scap\\\",\\\"duration\\\":30,\\\"containerId\\\":\\\"8883164eb9bf\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"/\\\",\\\"annotations\\\":{},\\\"filters\\\":\\\"proc.name=vi\\\",\\\"agent\\\":{\\\"customer\\\":0,\\\"id\\\":34688,\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\",\\\"hostName\\\":\\\"ip-10-2-157-201\\\",\\\"attributes\\\":{}},\\\"id\\\":1327048,\\\"maxSize\\\":104857600,\\\"pastDuration\\\":3,\\\"pastSize\\\":0,\\\"dateRequested\\\":1625783854265,\\\"dateReceived\\\":1625783881254,\\\"downloadUrl\\\":\\\"/api/v1/captures/1327048/download\\\",\\\"size\\\":87335540,\\\"type\\\":\\\"local\\\",\\\"status\\\":\\\"requested\\\",\\\"accessKey\\\":\\\"string\\\",\\\"bytesReceived\\\":87335540,\\\"bytesStored\\\":87335540,\\\"token\\\":\\\"960d9da0-cc79-4079-932a-544e193ab385\\\",\\\"metrics\\\":[\\\"string\\\"],\\\"storageId\\\":153,\\\"scope\\\":\\\"host.hostName = 'ip-10-2-157-201'\\\",\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"source\":\"sdc\",\"name\":\"my_capture.scap\",\"duration\":30,\"containerId\":\"8883164eb9bf\",\"bucketName\":\"string\",\"folder\":\"/\",\"annotations\":{},\"filters\":\"proc.name=vi\",\"agent\":{\"customer\":0,\"id\":34688,\"machineId\":\"12:dd:fe:e0:17:0b\",\"hostName\":\"ip-10-2-157-201\",\"attributes\":{}},\"id\":1327048,\"maxSize\":104857600,\"pastDuration\":3,\"pastSize\":0,\"dateRequested\":1625783854265,\"dateReceived\":1625783881254,\"downloadUrl\":\"/api/v1/captures/1327048/download\",\"size\":87335540,\"type\":\"local\",\"status\":\"requested\",\"accessKey\":\"string\",\"bytesReceived\":87335540,\"bytesStored\":87335540,\"token\":\"960d9da0-cc79-4079-932a-544e193ab385\",\"metrics\":[\"string\"],\"storageId\":153,\"scope\":\"host.hostName = '\\''ip-10-2-157-201'\\''\",\"machineId\":\"12:dd:fe:e0:17:0b\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D',\n  headers: {'content-type': 'application/json'},\n  body: {\n    source: 'sdc',\n    name: 'my_capture.scap',\n    duration: 30,\n    containerId: '8883164eb9bf',\n    bucketName: 'string',\n    folder: '/',\n    annotations: {},\n    filters: 'proc.name=vi',\n    agent: {\n      customer: 0,\n      id: 34688,\n      machineId: '12:dd:fe:e0:17:0b',\n      hostName: 'ip-10-2-157-201',\n      attributes: {}\n    },\n    id: 1327048,\n    maxSize: 104857600,\n    pastDuration: 3,\n    pastSize: 0,\n    dateRequested: 1625783854265,\n    dateReceived: 1625783881254,\n    downloadUrl: '/api/v1/captures/1327048/download',\n    size: 87335540,\n    type: 'local',\n    status: 'requested',\n    accessKey: 'string',\n    bytesReceived: 87335540,\n    bytesStored: 87335540,\n    token: '960d9da0-cc79-4079-932a-544e193ab385',\n    metrics: ['string'],\n    storageId: 153,\n    scope: 'host.hostName = \\'ip-10-2-157-201\\'',\n    machineId: '12:dd:fe:e0:17:0b'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"source\\\":\\\"sdc\\\",\\\"name\\\":\\\"my_capture.scap\\\",\\\"duration\\\":30,\\\"containerId\\\":\\\"8883164eb9bf\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"/\\\",\\\"annotations\\\":{},\\\"filters\\\":\\\"proc.name=vi\\\",\\\"agent\\\":{\\\"customer\\\":0,\\\"id\\\":34688,\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\",\\\"hostName\\\":\\\"ip-10-2-157-201\\\",\\\"attributes\\\":{}},\\\"id\\\":1327048,\\\"maxSize\\\":104857600,\\\"pastDuration\\\":3,\\\"pastSize\\\":0,\\\"dateRequested\\\":1625783854265,\\\"dateReceived\\\":1625783881254,\\\"downloadUrl\\\":\\\"/api/v1/captures/1327048/download\\\",\\\"size\\\":87335540,\\\"type\\\":\\\"local\\\",\\\"status\\\":\\\"requested\\\",\\\"accessKey\\\":\\\"string\\\",\\\"bytesReceived\\\":87335540,\\\"bytesStored\\\":87335540,\\\"token\\\":\\\"960d9da0-cc79-4079-932a-544e193ab385\\\",\\\"metrics\\\":[\\\"string\\\"],\\\"storageId\\\":153,\\\"scope\\\":\\\"host.hostName = 'ip-10-2-157-201'\\\",\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"source\\\":\\\"sdc\\\",\\\"name\\\":\\\"my_capture.scap\\\",\\\"duration\\\":30,\\\"containerId\\\":\\\"8883164eb9bf\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"/\\\",\\\"annotations\\\":{},\\\"filters\\\":\\\"proc.name=vi\\\",\\\"agent\\\":{\\\"customer\\\":0,\\\"id\\\":34688,\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\",\\\"hostName\\\":\\\"ip-10-2-157-201\\\",\\\"attributes\\\":{}},\\\"id\\\":1327048,\\\"maxSize\\\":104857600,\\\"pastDuration\\\":3,\\\"pastSize\\\":0,\\\"dateRequested\\\":1625783854265,\\\"dateReceived\\\":1625783881254,\\\"downloadUrl\\\":\\\"/api/v1/captures/1327048/download\\\",\\\"size\\\":87335540,\\\"type\\\":\\\"local\\\",\\\"status\\\":\\\"requested\\\",\\\"accessKey\\\":\\\"string\\\",\\\"bytesReceived\\\":87335540,\\\"bytesStored\\\":87335540,\\\"token\\\":\\\"960d9da0-cc79-4079-932a-544e193ab385\\\",\\\"metrics\\\":[\\\"string\\\"],\\\"storageId\\\":153,\\\"scope\\\":\\\"host.hostName = 'ip-10-2-157-201'\\\",\\\"machineId\\\":\\\"12:dd:fe:e0:17:0b\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/v1/captures/%7BcaptureId%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/captures/{captureId}/download": {
        "get": {
          "summary": "Download a capture",
          "description": "Download a capture",
          "parameters": [
            {
              "name": "captureId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Captures"
          ],
          "responses": {
            "302": {
              "description": "Redirects to a location for downloading"
            },
            "404": {
              "description": "The capture could not be found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Details on why the object could not be found",
                    "properties": {
                      "timestamp": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "integer",
                        "description": "The http status"
                      },
                      "error": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string",
                        "description": "The path used by the corresponding request"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D/download\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D/download"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D/download'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D/download\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/captures/%7BcaptureId%7D/download\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/captures/{captureId}/stop": {
        "post": {
          "summary": "Stop a capture",
          "description": "Stop a capture",
          "parameters": [
            {
              "name": "captureId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Captures"
          ],
          "responses": {
            "200": {
              "description": "Successfully stopped the capture",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "capture": {
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Metadata to create a capture",
                            "properties": {
                              "source": {
                                "type": "string",
                                "description": "An enum of Sysdig products",
                                "enum": [
                                  "sdc",
                                  "sds"
                                ]
                              },
                              "name": {
                                "type": "string",
                                "description": "A way to reference a capture. Must not be empty",
                                "example": "my_capture.scap"
                              },
                              "duration": {
                                "type": "integer",
                                "description": "The range in time from when the capture began to when it ended in seconds. The maximum value is 86400",
                                "example": 30
                              },
                              "containerId": {
                                "type": "integer",
                                "description": "Uniquely identifies a container",
                                "example": "8883164eb9bf"
                              },
                              "bucketName": {
                                "type": "string",
                                "description": "The name of the s3 bucket to which the capture will be saved. May be null"
                              },
                              "folder": {
                                "type": "string",
                                "description": "The name of a folder in an s3 bucket",
                                "example": "/"
                              },
                              "annotations": {
                                "type": "object",
                                "description": "A map of assorted metadata",
                                "additionalProperties": true
                              },
                              "filters": {
                                "type": "string",
                                "description": "A way to only capture a subset of the data",
                                "example": "proc.name=vi"
                              },
                              "agent": {
                                "type": "object",
                                "description": "Describes a Sysdig agent running on a machine",
                                "properties": {
                                  "customer": {
                                    "type": "integer",
                                    "description": "The ID of a particular customer"
                                  },
                                  "id": {
                                    "type": "integer",
                                    "description": "Uniquely identifies an agent",
                                    "example": 34688
                                  },
                                  "machineId": {
                                    "type": "string",
                                    "description": "Uniquely identifies a machine",
                                    "example": "12:dd:fe:e0:17:0b"
                                  },
                                  "hostName": {
                                    "type": "string",
                                    "description": "The name of the host the agent is running on",
                                    "example": "ip-10-2-157-201"
                                  },
                                  "attributes": {
                                    "type": "object",
                                    "additionalProperties": true
                                  }
                                }
                              }
                            }
                          },
                          {
                            "description": "Contains system calls and other operating system events"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "uniquely identifies the capture",
                                "example": 1327048
                              },
                              "maxSize": {
                                "type": "integer",
                                "description": "The maximum number of bytes allowed to be in this capture",
                                "example": 104857600
                              },
                              "pastDuration": {
                                "type": "integer",
                                "description": "The range in time from when the capture began to when the event that triggered the capture occurred in seconds. The maximum value is 86400",
                                "example": 3
                              },
                              "pastSize": {
                                "type": "integer",
                                "description": "The amount of bytes in the capture that occurred in the pastDuration interval"
                              },
                              "dateRequested": {
                                "type": "integer",
                                "description": "The unix timestamp of when the capture was requested in milliseconds",
                                "example": 1625783854265
                              },
                              "dateReceived": {
                                "type": "integer",
                                "description": "The unx timestamp of when the Sysdig backend received the capture from the agent in milliseconds",
                                "example": 1625783881254
                              },
                              "downloadUrl": {
                                "type": "string",
                                "description": "The url to download the capture",
                                "example": "/api/v1/captures/1327048/download"
                              },
                              "size": {
                                "type": "integer",
                                "description": "The number of bytes in the capture",
                                "example": 87335540
                              },
                              "type": {
                                "type": "string",
                                "description": "An enum of the different types of storage to which captures can be saved",
                                "enum": [
                                  "local",
                                  "s3",
                                  "agent",
                                  "provided",
                                  "cassandra"
                                ]
                              },
                              "status": {
                                "type": "string",
                                "description": "An enum of the different statuses a capture can have",
                                "enum": [
                                  "requested",
                                  "filtering",
                                  "capturing",
                                  "done",
                                  "error",
                                  "uploading",
                                  "uploadingError",
                                  "uploaded"
                                ]
                              },
                              "accessKey": {
                                "type": "string",
                                "description": "The key that allows an agent to communicate with a collector"
                              },
                              "bytesReceived": {
                                "type": "integer",
                                "description": "The number of bytes the Sysdig backend has received from the agent",
                                "example": 87335540
                              },
                              "bytesStored": {
                                "type": "integer",
                                "description": "The number of bytes the Sysdig backend has pushed to a storage provider",
                                "example": 87335540
                              },
                              "token": {
                                "type": "string",
                                "description": "Uniquely identifies a capture and correlates the capture to a request. Must match the following regex ([a-z0-9]){8}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){4}-([a-z0-9]){12}",
                                "example": "960d9da0-cc79-4079-932a-544e193ab385"
                              },
                              "metrics": {
                                "type": "array",
                                "description": "A list of metrics",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "storageId": {
                                "type": "integer",
                                "description": "Uniquely identifies a storage configuration",
                                "example": 153
                              },
                              "scope": {
                                "type": "string",
                                "description": "A scope expression that limits where the capture could have been taken",
                                "example": "host.hostName = 'ip-10-2-157-201'"
                              },
                              "machineId": {
                                "type": "string",
                                "description": "Uniquely identifies a machine",
                                "example": "12:dd:fe:e0:17:0b"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The capture could not be found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Details on why the object could not be found",
                    "properties": {
                      "timestamp": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "integer",
                        "description": "The http status"
                      },
                      "error": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "path": {
                        "type": "string",
                        "description": "The path used by the corresponding request"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D/stop\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D/stop"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D/stop'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/captures/%7BcaptureId%7D/stop\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/v1/captures/%7BcaptureId%7D/stop\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/vulnSummary": {
        "get": {
          "summary": "Retrieve a map of vulnType -> (map of severity -> count) of the vulnerabilities of an image",
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "A map of vulnType -> (map of severity -> count)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "vulnType": {
                        "type": "object",
                        "properties": {
                          "severity": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnSummary\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnSummary"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnSummary'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnSummary\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/vulnSummary\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/vulnSummaryDirect": {
        "get": {
          "summary": "Vulnerabilities of an image. [Digest] Data is fetched directly from the database.",
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string",
                "description": "an image digest string, starting with \"sha256:\" prefix\n",
                "minLength": 1,
                "example": "sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "A map of vulnType -> (map of severity -> count)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "vulnType": {
                        "type": "object",
                        "properties": {
                          "severity": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnSummaryDirect\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnSummaryDirect"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnSummaryDirect'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnSummaryDirect\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/vulnSummaryDirect\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/by_id/{imageId}/vulnSummaryDirect": {
        "get": {
          "summary": "Vulnerabilities of an image. [ImageID] Data is fetched directly from the database.",
          "parameters": [
            {
              "name": "imageId",
              "in": "path",
              "description": "The targeted imageID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "the imageID that identifies the image\n",
                "minLength": 1,
                "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "A map of vulnType -> (map of severity -> count)",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "vulnType": {
                        "type": "object",
                        "properties": {
                          "severity": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnSummaryDirect\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnSummaryDirect"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnSummaryDirect'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnSummaryDirect\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/by_id/%7BimageId%7D/vulnSummaryDirect\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/vuln/{vtype}": {
        "get": {
          "summary": "Retrieve vulnerabilities data of an image",
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string",
                "description": "an image digest string, starting with \"sha256:\" prefix\n",
                "minLength": 1,
                "example": "sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6"
              }
            },
            {
              "name": "vtype",
              "in": "path",
              "description": "The type of vulnerabilities to retrieve",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "os",
                  "non-os"
                ]
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "If specified, only vulnerabilities that contain this substring will be retrieved",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sorting method. Defaults to descendent.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "desc",
                  "asc"
                ]
              }
            },
            {
              "name": "sortBy",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to severity.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "vuln",
                  "fix",
                  "severity",
                  "package",
                  "url",
                  "feed",
                  "feed_group",
                  "package_name",
                  "package_version",
                  "package_type",
                  "package_cpe",
                  "package_pat"
                ]
              }
            },
            {
              "name": "filters",
              "in": "query",
              "description": "A comma-separated list of severities. If specified, only vulnerabilities of these severities will be retrieved",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Unknown",
                  "Negligible",
                  "Low",
                  "Medium",
                  "High",
                  "Critical"
                ]
              }
            },
            {
              "name": "hasFix",
              "in": "query",
              "description": "If specified, only vulnerabilities with an available fix will be retrieved",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "cmpDigest",
              "in": "query",
              "description": "If specified, the vulnerabilities in the response will contain a comparison status relative to the image specified by this parameter. A total count of all comparison statuses will also be returned.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cmpFilter",
              "in": "query",
              "description": "If specified, only vulnerabilities matching this comparison status will be returned. If not specified, all vulnerabilities will be returned.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "New",
                  "Fixed",
                  "Shared"
                ]
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "If specified, a 0-based index on the vulnerabilities list. Only entries >= offset will be retrieved. Defaults to 0. If filter is also specified, this index will be applied on the filtered list. An empty list will be retrieved if this index overflows the list.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "If specified, a limit on the number of entries retrieved. If filter is also specified, the limit will be applied on the filtered list. limit must be >= 1 and if it overflows the list all entries will be retrieved.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "includeVulnExceptions",
              "in": "query",
              "description": "If specified, returns also the set of vulnerability exception lists where the vulnerability is contained and when it will expire.",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "imageTag",
              "in": "query",
              "description": "The image's tag.\nRequired when \"includeVulnExceptions\" is set to true.\n",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The retrieved vulnerabilities",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "imageID": {
                        "type": "string",
                        "description": "The targeted imageID"
                      },
                      "vtype": {
                        "type": "string",
                        "description": "The type of vulnerabilities retrieved"
                      },
                      "filter": {
                        "type": "string",
                        "description": "The filter used"
                      },
                      "sort": {
                        "type": "string",
                        "description": "The sorting method used"
                      },
                      "sortBy": {
                        "type": "string",
                        "description": "The field used to sort the result"
                      },
                      "hasFix": {
                        "type": "boolean",
                        "description": "Wether only vulns with a fix have been retrieved"
                      },
                      "filters": {
                        "type": "string",
                        "description": "The severities retrieved"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The start offset used"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit used. 0 for no limit."
                      },
                      "canLoadMore": {
                        "type": "boolean",
                        "description": "True if more results can be fetched."
                      },
                      "totalVulns": {
                        "type": "integer",
                        "description": "The total count of vulnerabilities."
                      },
                      "vulnCounts": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total count of vulnerabilities."
                          },
                          "new": {
                            "type": "integer",
                            "description": "The total count of new vulnerabilities."
                          },
                          "fixed": {
                            "type": "integer",
                            "description": "The total count of fixed vulnerabilities."
                          },
                          "shared": {
                            "type": "integer",
                            "description": "The total count of shared vulnerabilities."
                          }
                        },
                        "description": "Total counts of comparison statuses."
                      },
                      "vulns": {
                        "type": "array",
                        "description": "The vulnerabilities retrieved.",
                        "items": {
                          "type": "object",
                          "description": "Vulnerability object plus comparison status.",
                          "properties": {
                            "feed": {
                              "type": "string",
                              "description": "The feed type, Always \"vulnerabilities\"\n",
                              "example": "vulnerabilities"
                            },
                            "feed_group": {
                              "type": "string",
                              "description": "The distribution group name\n",
                              "example": "debian:10"
                            },
                            "fix": {
                              "type": "string",
                              "description": "If exists, the fix version\n",
                              "example": "None"
                            },
                            "nvd_data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "nvd_data object"
                              }
                            },
                            "package": {
                              "type": "string",
                              "description": "The package full name\n",
                              "example": "gcc-8-base-8.3.0-6"
                            },
                            "package_cpe": {
                              "type": "string",
                              "example": "None"
                            },
                            "package_name": {
                              "type": "string",
                              "description": "The package name\n",
                              "example": "gcc-8-base"
                            },
                            "package_path": {
                              "type": "string",
                              "description": "The package path\n",
                              "example": "pkgdb"
                            },
                            "package_type": {
                              "type": "string",
                              "description": "The package type\n",
                              "example": "dpkg"
                            },
                            "severity": {
                              "type": "string",
                              "description": "The vulnerability severity level\n",
                              "example": "Medium"
                            },
                            "url": {
                              "type": "string",
                              "description": "URL to full description of the vulnerability\n",
                              "example": "https://security-tracker.debian.org/tracker/CVE-2018-12886"
                            },
                            "vuln": {
                              "type": "string",
                              "description": "The vulnerability identifier\n",
                              "example": "CVE-2018-12886"
                            },
                            "vulnexceptions": {
                              "type": "array",
                              "description": "List of vulnExceptions by id/name along with the vulnerability expiration for that exception list\n",
                              "readOnly": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "vuln-exception-list-id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "some-name"
                                  },
                                  "expires": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vuln/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&cmpDigest=SOME_STRING_VALUE&cmpFilter=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vuln/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&cmpDigest=SOME_STRING_VALUE&cmpFilter=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vuln/%7Bvtype%7D',\n  qs: {\n    filter: 'SOME_STRING_VALUE',\n    sort: 'SOME_STRING_VALUE',\n    sortBy: 'SOME_STRING_VALUE',\n    filters: 'SOME_STRING_VALUE',\n    hasFix: 'SOME_BOOLEAN_VALUE',\n    cmpDigest: 'SOME_STRING_VALUE',\n    cmpFilter: 'SOME_STRING_VALUE',\n    offset: 'SOME_INTEGER_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    includeVulnExceptions: 'SOME_BOOLEAN_VALUE',\n    imageTag: 'SOME_STRING_VALUE',\n    bundleId: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vuln/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&cmpDigest=SOME_STRING_VALUE&cmpFilter=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/vuln/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&cmpDigest=SOME_STRING_VALUE&cmpFilter=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/vulnDirect/{vtype}": {
        "get": {
          "summary": "Retrieve vulnerabilities data of an image [Digest][Direct]\n",
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "vtype",
              "in": "path",
              "description": "The type of vulnerabilities to retrieve",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "os",
                  "non-os",
                  "all"
                ]
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "If specified, only vulnerabilities that contain this substring will be retrieved",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sorting method. Defaults to descendent.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "desc",
                  "asc"
                ]
              }
            },
            {
              "name": "sortBy",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to severity.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "vuln",
                  "fix",
                  "severity",
                  "package",
                  "url",
                  "feed",
                  "feed_group",
                  "package_name",
                  "package_version",
                  "package_type",
                  "package_cpe",
                  "package_pat"
                ]
              }
            },
            {
              "name": "filters",
              "in": "query",
              "description": "A comma-separated list of severities. If specified, only vulnerabilities of these severities will be retrieved",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Unknown",
                  "Negligible",
                  "Low",
                  "Medium",
                  "High",
                  "Critical"
                ]
              }
            },
            {
              "name": "hasFix",
              "in": "query",
              "description": "If specified, only vulnerabilities with an available fix will be retrieved",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "If specified, a 0-based index on the vulnerabilities list. Only entries >= offset will be retrieved. Defaults to 0. If filter is also specified, this index will be applied on the filtered list. An empty list will be retrieved if this index overflows the list.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "If specified, a limit on the number of entries retrieved. If filter is also specified, the limit will be applied on the filtered list. limit must be >= 1 and if it overflows the list all entries will be retrieved.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "includeVulnExceptions",
              "in": "query",
              "description": "If specified, returns also the set of vulnerability exception lists where the vulnerability is contained and when it will expire.",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "imageTag",
              "in": "query",
              "description": "The image's tag.\nRequired when \"includeVulnExceptions\" is set to true.\n",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The retrieved vulnerabilities",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "imageID": {
                        "type": "string",
                        "description": "The targeted imageID"
                      },
                      "vtype": {
                        "type": "string",
                        "description": "The type of vulnerabilities retrieved"
                      },
                      "filter": {
                        "type": "string",
                        "description": "The filter used"
                      },
                      "sort": {
                        "type": "string",
                        "description": "The sorting method used"
                      },
                      "sortBy": {
                        "type": "string",
                        "description": "The field used to sort the result"
                      },
                      "hasFix": {
                        "type": "boolean",
                        "description": "Wether only vulns with a fix have been retrieved"
                      },
                      "filters": {
                        "type": "string",
                        "description": "The severities retrieved"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The start offset used"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit used. 0 for no limit."
                      },
                      "canLoadMore": {
                        "type": "boolean",
                        "description": "True if more results can be fetched."
                      },
                      "totalVulns": {
                        "type": "integer",
                        "description": "The total count of vulnerabilities."
                      },
                      "vulnCounts": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total count of vulnerabilities."
                          },
                          "new": {
                            "type": "integer",
                            "description": "The total count of new vulnerabilities."
                          },
                          "fixed": {
                            "type": "integer",
                            "description": "The total count of fixed vulnerabilities."
                          },
                          "shared": {
                            "type": "integer",
                            "description": "The total count of shared vulnerabilities."
                          }
                        },
                        "description": "Total counts of comparison statuses."
                      },
                      "vulns": {
                        "type": "array",
                        "description": "The vulnerabilities retrieved.",
                        "items": {
                          "type": "object",
                          "description": "Vulnerability object plus comparison status.",
                          "properties": {
                            "feed": {
                              "type": "string",
                              "description": "The feed type, Always \"vulnerabilities\"\n",
                              "example": "vulnerabilities"
                            },
                            "feed_group": {
                              "type": "string",
                              "description": "The distribution group name\n",
                              "example": "debian:10"
                            },
                            "fix": {
                              "type": "string",
                              "description": "If exists, the fix version\n",
                              "example": "None"
                            },
                            "nvd_data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "nvd_data object"
                              }
                            },
                            "package": {
                              "type": "string",
                              "description": "The package full name\n",
                              "example": "gcc-8-base-8.3.0-6"
                            },
                            "package_cpe": {
                              "type": "string",
                              "example": "None"
                            },
                            "package_name": {
                              "type": "string",
                              "description": "The package name\n",
                              "example": "gcc-8-base"
                            },
                            "package_path": {
                              "type": "string",
                              "description": "The package path\n",
                              "example": "pkgdb"
                            },
                            "package_type": {
                              "type": "string",
                              "description": "The package type\n",
                              "example": "dpkg"
                            },
                            "severity": {
                              "type": "string",
                              "description": "The vulnerability severity level\n",
                              "example": "Medium"
                            },
                            "url": {
                              "type": "string",
                              "description": "URL to full description of the vulnerability\n",
                              "example": "https://security-tracker.debian.org/tracker/CVE-2018-12886"
                            },
                            "vuln": {
                              "type": "string",
                              "description": "The vulnerability identifier\n",
                              "example": "CVE-2018-12886"
                            },
                            "vulnexceptions": {
                              "type": "array",
                              "description": "List of vulnExceptions by id/name along with the vulnerability expiration for that exception list\n",
                              "readOnly": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "vuln-exception-list-id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "some-name"
                                  },
                                  "expires": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnDirect/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnDirect/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnDirect/%7Bvtype%7D',\n  qs: {\n    filter: 'SOME_STRING_VALUE',\n    sort: 'SOME_STRING_VALUE',\n    sortBy: 'SOME_STRING_VALUE',\n    filters: 'SOME_STRING_VALUE',\n    hasFix: 'SOME_BOOLEAN_VALUE',\n    offset: 'SOME_INTEGER_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    includeVulnExceptions: 'SOME_BOOLEAN_VALUE',\n    imageTag: 'SOME_STRING_VALUE',\n    bundleId: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnDirect/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/vulnDirect/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/by_id/{imageId}/vulnDirect/{vtype}": {
        "get": {
          "summary": "Retrieve vulnerabilities data of an image [ImageId][Direct]\n",
          "parameters": [
            {
              "name": "imageId",
              "in": "path",
              "description": "The targeted imageID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "the imageID that identifies the image\n",
                "minLength": 1,
                "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
              }
            },
            {
              "name": "vtype",
              "in": "path",
              "description": "The type of vulnerabilities to retrieve",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "os",
                  "non-os",
                  "all"
                ]
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "If specified, only vulnerabilities that contain this substring will be retrieved",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sorting method. Defaults to descendent.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "desc",
                  "asc"
                ]
              }
            },
            {
              "name": "sortBy",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to severity.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "vuln",
                  "fix",
                  "severity",
                  "package",
                  "url",
                  "feed",
                  "feed_group",
                  "package_name",
                  "package_version",
                  "package_type",
                  "package_cpe",
                  "package_pat"
                ]
              }
            },
            {
              "name": "filters",
              "in": "query",
              "description": "A comma-separated list of severities. If specified, only vulnerabilities of these severities will be retrieved",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Unknown",
                  "Negligible",
                  "Low",
                  "Medium",
                  "High",
                  "Critical"
                ]
              }
            },
            {
              "name": "hasFix",
              "in": "query",
              "description": "If specified, only vulnerabilities with an available fix will be retrieved",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "If specified, a 0-based index on the vulnerabilities list. Only entries >= offset will be retrieved. Defaults to 0. If filter is also specified, this index will be applied on the filtered list. An empty list will be retrieved if this index overflows the list.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "If specified, a limit on the number of entries retrieved. If filter is also specified, the limit will be applied on the filtered list. limit must be >= 1 and if it overflows the list all entries will be retrieved.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "includeVulnExceptions",
              "in": "query",
              "description": "If specified, returns also the set of vulnerability exception lists where the vulnerability is contained and when it will expire.",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "imageTag",
              "in": "query",
              "description": "The image's tag.\nRequired when \"includeVulnExceptions\" is set to true.\n",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The retrieved vulnerabilities",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "imageID": {
                        "type": "string",
                        "description": "The targeted imageID"
                      },
                      "vtype": {
                        "type": "string",
                        "description": "The type of vulnerabilities retrieved"
                      },
                      "filter": {
                        "type": "string",
                        "description": "The filter used"
                      },
                      "sort": {
                        "type": "string",
                        "description": "The sorting method used"
                      },
                      "sortBy": {
                        "type": "string",
                        "description": "The field used to sort the result"
                      },
                      "hasFix": {
                        "type": "boolean",
                        "description": "Wether only vulns with a fix have been retrieved"
                      },
                      "filters": {
                        "type": "string",
                        "description": "The severities retrieved"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The start offset used"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit used. 0 for no limit."
                      },
                      "canLoadMore": {
                        "type": "boolean",
                        "description": "True if more results can be fetched."
                      },
                      "totalVulns": {
                        "type": "integer",
                        "description": "The total count of vulnerabilities."
                      },
                      "vulnCounts": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total count of vulnerabilities."
                          },
                          "new": {
                            "type": "integer",
                            "description": "The total count of new vulnerabilities."
                          },
                          "fixed": {
                            "type": "integer",
                            "description": "The total count of fixed vulnerabilities."
                          },
                          "shared": {
                            "type": "integer",
                            "description": "The total count of shared vulnerabilities."
                          }
                        },
                        "description": "Total counts of comparison statuses."
                      },
                      "vulns": {
                        "type": "array",
                        "description": "The vulnerabilities retrieved.",
                        "items": {
                          "type": "object",
                          "description": "Vulnerability object plus comparison status.",
                          "properties": {
                            "feed": {
                              "type": "string",
                              "description": "The feed type, Always \"vulnerabilities\"\n",
                              "example": "vulnerabilities"
                            },
                            "feed_group": {
                              "type": "string",
                              "description": "The distribution group name\n",
                              "example": "debian:10"
                            },
                            "fix": {
                              "type": "string",
                              "description": "If exists, the fix version\n",
                              "example": "None"
                            },
                            "nvd_data": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "nvd_data object"
                              }
                            },
                            "package": {
                              "type": "string",
                              "description": "The package full name\n",
                              "example": "gcc-8-base-8.3.0-6"
                            },
                            "package_cpe": {
                              "type": "string",
                              "example": "None"
                            },
                            "package_name": {
                              "type": "string",
                              "description": "The package name\n",
                              "example": "gcc-8-base"
                            },
                            "package_path": {
                              "type": "string",
                              "description": "The package path\n",
                              "example": "pkgdb"
                            },
                            "package_type": {
                              "type": "string",
                              "description": "The package type\n",
                              "example": "dpkg"
                            },
                            "severity": {
                              "type": "string",
                              "description": "The vulnerability severity level\n",
                              "example": "Medium"
                            },
                            "url": {
                              "type": "string",
                              "description": "URL to full description of the vulnerability\n",
                              "example": "https://security-tracker.debian.org/tracker/CVE-2018-12886"
                            },
                            "vuln": {
                              "type": "string",
                              "description": "The vulnerability identifier\n",
                              "example": "CVE-2018-12886"
                            },
                            "vulnexceptions": {
                              "type": "array",
                              "description": "List of vulnExceptions by id/name along with the vulnerability expiration for that exception list\n",
                              "readOnly": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "vuln-exception-list-id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "some-name"
                                  },
                                  "expires": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnDirect/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnDirect/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnDirect/%7Bvtype%7D',\n  qs: {\n    filter: 'SOME_STRING_VALUE',\n    sort: 'SOME_STRING_VALUE',\n    sortBy: 'SOME_STRING_VALUE',\n    filters: 'SOME_STRING_VALUE',\n    hasFix: 'SOME_BOOLEAN_VALUE',\n    offset: 'SOME_INTEGER_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    includeVulnExceptions: 'SOME_BOOLEAN_VALUE',\n    imageTag: 'SOME_STRING_VALUE',\n    bundleId: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnDirect/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/by_id/%7BimageId%7D/vulnDirect/%7Bvtype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&filters=SOME_STRING_VALUE&hasFix=SOME_BOOLEAN_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE&includeVulnExceptions=SOME_BOOLEAN_VALUE&imageTag=SOME_STRING_VALUE&bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/vulnexceptions": {
        "get": {
          "summary": "Retrieve the vulnerability exception lists that this image is bound to via policies assignements [Digest]\n",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string",
                "description": "an image digest string, starting with \"sha256:\" prefix\n",
                "minLength": 1,
                "example": "sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6"
              }
            },
            {
              "name": "tag",
              "in": "query",
              "description": "The image's tag",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "withItems",
              "in": "query",
              "description": "Include or not \"items\" in the response. Useful when there are a lot of vulnerability exception lists.\n",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The associated vulnerability exception lists",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "items",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "version"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                        },
                        "createdAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been created\n",
                          "example": 1595433581
                        },
                        "updatedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been updated\n",
                          "example": 1595433581
                        },
                        "comment": {
                          "type": "string",
                          "description": "A human-readable description.\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the vulnerability exception list.\n"
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                        },
                        "items": {
                          "type": "array",
                          "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The vulnerability identifier. Computed server side\n"
                                  },
                                  "createdAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                  },
                                  "updatedAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                    "description": "The vulnerability generic description\n"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "gate",
                                  "trigger_id"
                                ],
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "The gate kind\n",
                                    "example": "vulnerabilities"
                                  },
                                  "trigger_id": {
                                    "type": "string",
                                    "description": "The name of the vulnerability\n",
                                    "example": "CVE-2020-9071+*"
                                  },
                                  "notes": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The user written notes attached to a specific vulnerability exception item\n"
                                  },
                                  "expiration_date": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                    "example": 1657622089
                                  },
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "policyBundleId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Image digest not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Image not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnexceptions?tag=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnexceptions?tag=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnexceptions',\n  qs: {tag: 'SOME_STRING_VALUE', withItems: 'SOME_BOOLEAN_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/vulnexceptions?tag=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/vulnexceptions?tag=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/by_id/{imageId}/vulnexceptions": {
        "get": {
          "summary": "Retrieve the vulnerability exception lists that this image is bound to via policies assignements [ImageID]\n",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "imageId",
              "in": "path",
              "description": "The targeted imageID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "the imageID that identifies the image\n",
                "minLength": 1,
                "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
              }
            },
            {
              "name": "tag",
              "in": "query",
              "description": "The image's tag",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "withItems",
              "in": "query",
              "description": "Include or not \"items\" in the response. Useful when there are a lot of vulnerability exception lists.\n",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The associated vulnerability exception lists",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "items",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "version"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                        },
                        "createdAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been created\n",
                          "example": 1595433581
                        },
                        "updatedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been updated\n",
                          "example": 1595433581
                        },
                        "comment": {
                          "type": "string",
                          "description": "A human-readable description.\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the vulnerability exception list.\n"
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                        },
                        "items": {
                          "type": "array",
                          "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The vulnerability identifier. Computed server side\n"
                                  },
                                  "createdAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                  },
                                  "updatedAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                    "description": "The vulnerability generic description\n"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "gate",
                                  "trigger_id"
                                ],
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "The gate kind\n",
                                    "example": "vulnerabilities"
                                  },
                                  "trigger_id": {
                                    "type": "string",
                                    "description": "The name of the vulnerability\n",
                                    "example": "CVE-2020-9071+*"
                                  },
                                  "notes": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The user written notes attached to a specific vulnerability exception item\n"
                                  },
                                  "expiration_date": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                    "example": 1657622089
                                  },
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "policyBundleId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Image digest not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Image not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnexceptions?tag=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnexceptions?tag=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnexceptions',\n  qs: {tag: 'SOME_STRING_VALUE', withItems: 'SOME_BOOLEAN_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/vulnexceptions?tag=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/by_id/%7BimageId%7D/vulnexceptions?tag=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/content/{ctype}": {
        "get": {
          "summary": "Retrieve the content of an image [Digest]\n",
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string",
                "description": "an image digest string, starting with \"sha256:\" prefix\n",
                "minLength": 1,
                "example": "sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6"
              }
            },
            {
              "name": "ctype",
              "in": "path",
              "description": "The type of content to retrieve",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "os",
                  "files",
                  "npm",
                  "gem",
                  "python",
                  "java"
                ]
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "If specified, only content entries that contain this substring will be retrieved",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sorting method",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            },
            {
              "name": "sortBy (for java type)",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to package",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "package",
                  "implementation-version",
                  "specification-version",
                  "maven-version",
                  "location",
                  "type",
                  "origin"
                ]
              }
            },
            {
              "name": "sortBy (for files type)",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to filename",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "filename",
                  "gid",
                  "linkdest",
                  "mode",
                  "sha256",
                  "size",
                  "type",
                  "uid"
                ]
              }
            },
            {
              "name": "sortBy (for os,npm,gem,python types)",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to package",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "package",
                  "version",
                  "size",
                  "type",
                  "origin",
                  "license",
                  "location"
                ]
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "If specified, a 0-based index on the content list. Only entries >= offset will be retrieved. Defaults to 0. If filter is also specified, this index will be applied on the filtered list. An empty list will be retrieved if this index overflows the list.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "If specified, a limit on the number of entries retrieved. If filter is also specified, the limit will be applied on the filtered list. limit must be >= 1 and if it overflows the list all entries will be retrieved.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The retrieved content",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "ctype": {
                        "type": "string",
                        "description": "The type of content retrieved"
                      },
                      "filter": {
                        "type": "string",
                        "description": "The filter used"
                      },
                      "sort": {
                        "type": "string",
                        "description": "The sorting method used"
                      },
                      "sortBy": {
                        "type": "string",
                        "description": "The field used to sort the result"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The start offset used"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit used. 0 for no limit."
                      },
                      "canLoadMore": {
                        "type": "boolean",
                        "description": "True if more results can be fetched."
                      },
                      "content": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Image Content{Package,Files,JAVA}Response.Content entry object"
                        },
                        "description": "The content retrieved"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/content/%7Bctype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy%20(for%20java%20type)=SOME_STRING_VALUE&sortBy%20(for%20files%20type)=SOME_STRING_VALUE&sortBy%20(for%20os%2Cnpm%2Cgem%2Cpython%20types)=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/content/%7Bctype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy%20(for%20java%20type)=SOME_STRING_VALUE&sortBy%20(for%20files%20type)=SOME_STRING_VALUE&sortBy%20(for%20os%2Cnpm%2Cgem%2Cpython%20types)=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/content/%7Bctype%7D',\n  qs: {\n    filter: 'SOME_STRING_VALUE',\n    sort: 'SOME_STRING_VALUE',\n    'sortBy (for java type)': 'SOME_STRING_VALUE',\n    'sortBy (for files type)': 'SOME_STRING_VALUE',\n    'sortBy (for os,npm,gem,python types)': 'SOME_STRING_VALUE',\n    offset: 'SOME_INTEGER_VALUE',\n    limit: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/content/%7Bctype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy%20(for%20java%20type)=SOME_STRING_VALUE&sortBy%20(for%20files%20type)=SOME_STRING_VALUE&sortBy%20(for%20os%2Cnpm%2Cgem%2Cpython%20types)=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/content/%7Bctype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy%20(for%20java%20type)=SOME_STRING_VALUE&sortBy%20(for%20files%20type)=SOME_STRING_VALUE&sortBy%20(for%20os%2Cnpm%2Cgem%2Cpython%20types)=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/by_id/{imageId}/content/{ctype}": {
        "get": {
          "summary": "Retrieve the content of an image [ImageID]\n",
          "parameters": [
            {
              "name": "imageId",
              "in": "path",
              "description": "The targeted imageID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "the imageID that identifies the image\n",
                "minLength": 1,
                "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
              }
            },
            {
              "name": "ctype",
              "in": "path",
              "description": "The type of content to retrieve",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "os",
                  "files",
                  "npm",
                  "gem",
                  "python",
                  "java"
                ]
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "If specified, only content entries that contain this substring will be retrieved",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sorting method",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "asc",
                  "desc"
                ]
              }
            },
            {
              "name": "sortBy (for java type)",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to package",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "package",
                  "implementation-version",
                  "specification-version",
                  "maven-version",
                  "location",
                  "type",
                  "origin"
                ]
              }
            },
            {
              "name": "sortBy (for files type)",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to filename",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "filename",
                  "gid",
                  "linkdest",
                  "mode",
                  "sha256",
                  "size",
                  "type",
                  "uid"
                ]
              }
            },
            {
              "name": "sortBy (for os,npm,gem,python types)",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to package",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "package",
                  "version",
                  "size",
                  "type",
                  "origin",
                  "license",
                  "location"
                ]
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "If specified, a 0-based index on the content list. Only entries >= offset will be retrieved. Defaults to 0. If filter is also specified, this index will be applied on the filtered list. An empty list will be retrieved if this index overflows the list.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "If specified, a limit on the number of entries retrieved. If filter is also specified, the limit will be applied on the filtered list. limit must be >= 1 and if it overflows the list all entries will be retrieved.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The retrieved content",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "ctype": {
                        "type": "string",
                        "description": "The type of content retrieved"
                      },
                      "filter": {
                        "type": "string",
                        "description": "The filter used"
                      },
                      "sort": {
                        "type": "string",
                        "description": "The sorting method used"
                      },
                      "sortBy": {
                        "type": "string",
                        "description": "The field used to sort the result"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The start offset used"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit used. 0 for no limit."
                      },
                      "canLoadMore": {
                        "type": "boolean",
                        "description": "True if more results can be fetched."
                      },
                      "content": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Image Content{Package,Files,JAVA}Response.Content entry object"
                        },
                        "description": "The content retrieved"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/content/%7Bctype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy%20(for%20java%20type)=SOME_STRING_VALUE&sortBy%20(for%20files%20type)=SOME_STRING_VALUE&sortBy%20(for%20os%2Cnpm%2Cgem%2Cpython%20types)=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/content/%7Bctype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy%20(for%20java%20type)=SOME_STRING_VALUE&sortBy%20(for%20files%20type)=SOME_STRING_VALUE&sortBy%20(for%20os%2Cnpm%2Cgem%2Cpython%20types)=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/content/%7Bctype%7D',\n  qs: {\n    filter: 'SOME_STRING_VALUE',\n    sort: 'SOME_STRING_VALUE',\n    'sortBy (for java type)': 'SOME_STRING_VALUE',\n    'sortBy (for files type)': 'SOME_STRING_VALUE',\n    'sortBy (for os,npm,gem,python types)': 'SOME_STRING_VALUE',\n    offset: 'SOME_INTEGER_VALUE',\n    limit: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/content/%7Bctype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy%20(for%20java%20type)=SOME_STRING_VALUE&sortBy%20(for%20files%20type)=SOME_STRING_VALUE&sortBy%20(for%20os%2Cnpm%2Cgem%2Cpython%20types)=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/by_id/%7BimageId%7D/content/%7Bctype%7D?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy%20(for%20java%20type)=SOME_STRING_VALUE&sortBy%20(for%20files%20type)=SOME_STRING_VALUE&sortBy%20(for%20os%2Cnpm%2Cgem%2Cpython%20types)=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/checkSummary": {
        "get": {
          "summary": "Retrieve the policy evaluation summary of an image with the selected timestamp [Digest]",
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "at",
              "in": "query",
              "description": "The RFC-3339 timestamp of the evaluation. If not specified, the most recent evaluation will be returned",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "tag",
              "in": "query",
              "description": "The image full tag",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The policy evaluation summary",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "imageId": {
                        "type": "string",
                        "description": "the imageID that identifies the image\n",
                        "minLength": 1,
                        "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
                      },
                      "at": {
                        "type": "string",
                        "description": "The RFC-3339 timestamp of the evaluation"
                      },
                      "tag": {
                        "type": "string",
                        "description": "The image full tag"
                      },
                      "status": {
                        "type": "string",
                        "description": "Final evaluation status"
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "The bundle ID used in this evaluation"
                      },
                      "finalAction": {
                        "type": "string",
                        "description": "Final evaluation action"
                      },
                      "finalActionReason": {
                        "type": "string",
                        "description": "Final evaluation action reason"
                      },
                      "nStops": {
                        "type": "integer",
                        "description": "Total number of stop rules triggered"
                      },
                      "nWarns": {
                        "type": "integer",
                        "description": "Total number of warn rules triggered"
                      },
                      "policies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "Policy ID"
                            },
                            "policyName": {
                              "type": "string",
                              "description": "Policy Name"
                            },
                            "nStops": {
                              "type": "integer",
                              "description": "Number of stop rules triggered from this policy"
                            },
                            "nWarns": {
                              "type": "integer",
                              "description": "Number of warn rules triggered from this policy"
                            },
                            "rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "Rule gate"
                                  },
                                  "trigger": {
                                    "type": "string",
                                    "description": "Rule trigger"
                                  },
                                  "nStops": {
                                    "type": "integer",
                                    "description": "Number of stop rules triggered from this gate/trigger pair"
                                  },
                                  "nWarns": {
                                    "type": "integer",
                                    "description": "Number of warn rules triggered from this gate/trigger pair"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/checkSummary?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/checkSummary?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/checkSummary',\n  qs: {at: 'SOME_STRING_VALUE', tag: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/checkSummary?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/checkSummary?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/by_id/{imageId}/checkSummary": {
        "get": {
          "summary": "Retrieve the policy evaluation summary of an image with the selected timestamp [ImageID]",
          "parameters": [
            {
              "name": "imageId",
              "in": "path",
              "description": "The targeted imageID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "the imageID that identifies the image\n",
                "minLength": 1,
                "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
              }
            },
            {
              "name": "at",
              "in": "query",
              "description": "The RFC-3339 timestamp of the evaluation. If not specified, the most recent evaluation will be returned",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "tag",
              "in": "query",
              "description": "The image full tag",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The policy evaluation summary",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "imageId": {
                        "type": "string",
                        "description": "the imageID that identifies the image\n",
                        "minLength": 1,
                        "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
                      },
                      "at": {
                        "type": "string",
                        "description": "The RFC-3339 timestamp of the evaluation"
                      },
                      "tag": {
                        "type": "string",
                        "description": "The image full tag"
                      },
                      "status": {
                        "type": "string",
                        "description": "Final evaluation status"
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "The bundle ID used in this evaluation"
                      },
                      "finalAction": {
                        "type": "string",
                        "description": "Final evaluation action"
                      },
                      "finalActionReason": {
                        "type": "string",
                        "description": "Final evaluation action reason"
                      },
                      "nStops": {
                        "type": "integer",
                        "description": "Total number of stop rules triggered"
                      },
                      "nWarns": {
                        "type": "integer",
                        "description": "Total number of warn rules triggered"
                      },
                      "policies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "Policy ID"
                            },
                            "policyName": {
                              "type": "string",
                              "description": "Policy Name"
                            },
                            "nStops": {
                              "type": "integer",
                              "description": "Number of stop rules triggered from this policy"
                            },
                            "nWarns": {
                              "type": "integer",
                              "description": "Number of warn rules triggered from this policy"
                            },
                            "rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "Rule gate"
                                  },
                                  "trigger": {
                                    "type": "string",
                                    "description": "Rule trigger"
                                  },
                                  "nStops": {
                                    "type": "integer",
                                    "description": "Number of stop rules triggered from this gate/trigger pair"
                                  },
                                  "nWarns": {
                                    "type": "integer",
                                    "description": "Number of warn rules triggered from this gate/trigger pair"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary',\n  qs: {at: 'SOME_STRING_VALUE', tag: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/checkSummary/{policyId}": {
        "get": {
          "summary": "Retrieve the policy evaluation summary of a specific policy for an image with the selected timestamp [Digest]",
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string",
                "description": "an image digest string, starting with \"sha256:\" prefix\n",
                "minLength": 1,
                "example": "sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6"
              }
            },
            {
              "name": "policyId",
              "in": "path",
              "description": "The targeted policy ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "at",
              "in": "query",
              "description": "The RFC-3339 timestamp of the evaluation. If not specified, the most recent evaluation will be returned",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "tag",
              "in": "query",
              "description": "The image full tag",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The policy evaluation policy summary",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageId": {
                        "type": "string",
                        "description": "the imageID that identifies the image\n",
                        "minLength": 1,
                        "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
                      },
                      "imageDigest": {
                        "type": "string",
                        "description": "an image digest string, starting with \"sha256:\" prefix\n",
                        "minLength": 1,
                        "example": "sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6"
                      },
                      "at": {
                        "type": "string",
                        "description": "The RFC-3339 timestamp of the evaluation"
                      },
                      "tag": {
                        "type": "string",
                        "description": "The image full tag"
                      },
                      "policyId": {
                        "type": "string",
                        "description": "The targeted policy ID"
                      },
                      "policy": {
                        "type": "object",
                        "description": "A Policy object"
                      },
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "gate": {
                              "type": "string",
                              "description": "Rule gate"
                            },
                            "trigger": {
                              "type": "string",
                              "description": "Rule trigger"
                            },
                            "nStops": {
                              "type": "integer",
                              "description": "Number of stop rules triggered from this gate/trigger pair"
                            },
                            "nWarns": {
                              "type": "integer",
                              "description": "Number of warn rules triggered from this gate/trigger pair"
                            },
                            "rows": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "Image_Id": {
                                    "type": "string",
                                    "description": "The ID of the image that triggered this rule."
                                  },
                                  "Repo_Tag": {
                                    "type": "string",
                                    "description": "The name of the image that triggered this rule."
                                  },
                                  "Trigger_Id": {
                                    "type": "string",
                                    "description": "The trigger identifier responsible for this rule output."
                                  },
                                  "Gate": {
                                    "type": "string",
                                    "description": "The gate of this rule."
                                  },
                                  "Trigger": {
                                    "type": "string",
                                    "description": "The trigger of this rule."
                                  },
                                  "Check_Output": {
                                    "type": "string",
                                    "description": "Human-readable output string of this rule."
                                  },
                                  "Gate_Action": {
                                    "type": "string",
                                    "description": "The action of this rule."
                                  },
                                  "Whitelisted": {
                                    "type": "string",
                                    "description": "Whether this rule was whitelisted in the policy."
                                  },
                                  "Policy_Id": {
                                    "type": "string",
                                    "description": "The ID of the policy that contains the triggered rule."
                                  }
                                }
                              },
                              "description": "the list of outputs for this pair/gate trigger"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/checkSummary/%7BpolicyId%7D?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/checkSummary/%7BpolicyId%7D?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/checkSummary/%7BpolicyId%7D',\n  qs: {at: 'SOME_STRING_VALUE', tag: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/checkSummary/%7BpolicyId%7D?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/checkSummary/%7BpolicyId%7D?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/by_id/{imageId}/checkSummary/{policyId}": {
        "get": {
          "summary": "Retrieve the policy evaluation summary of a specific policy for an image with the selected timestamp [ImageID]",
          "parameters": [
            {
              "name": "imageId",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string",
                "description": "the imageID that identifies the image\n",
                "minLength": 1,
                "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
              }
            },
            {
              "name": "policyId",
              "in": "path",
              "description": "The targeted policy ID",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "at",
              "in": "query",
              "description": "The RFC-3339 timestamp of the evaluation. If not specified, the most recent evaluation will be returned",
              "required": false,
              "schema": {
                "type": "string",
                "format": "date-time"
              }
            },
            {
              "name": "tag",
              "in": "query",
              "description": "The image full tag",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The policy evaluation policy summary",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageId": {
                        "type": "string",
                        "description": "the imageID that identifies the image\n",
                        "minLength": 1,
                        "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
                      },
                      "imageDigest": {
                        "type": "string",
                        "description": "an image digest string, starting with \"sha256:\" prefix\n",
                        "minLength": 1,
                        "example": "sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6"
                      },
                      "at": {
                        "type": "string",
                        "description": "The RFC-3339 timestamp of the evaluation"
                      },
                      "tag": {
                        "type": "string",
                        "description": "The image full tag"
                      },
                      "policyId": {
                        "type": "string",
                        "description": "The targeted policy ID"
                      },
                      "policy": {
                        "type": "object",
                        "description": "A Policy object"
                      },
                      "rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "gate": {
                              "type": "string",
                              "description": "Rule gate"
                            },
                            "trigger": {
                              "type": "string",
                              "description": "Rule trigger"
                            },
                            "nStops": {
                              "type": "integer",
                              "description": "Number of stop rules triggered from this gate/trigger pair"
                            },
                            "nWarns": {
                              "type": "integer",
                              "description": "Number of warn rules triggered from this gate/trigger pair"
                            },
                            "rows": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "Image_Id": {
                                    "type": "string",
                                    "description": "The ID of the image that triggered this rule."
                                  },
                                  "Repo_Tag": {
                                    "type": "string",
                                    "description": "The name of the image that triggered this rule."
                                  },
                                  "Trigger_Id": {
                                    "type": "string",
                                    "description": "The trigger identifier responsible for this rule output."
                                  },
                                  "Gate": {
                                    "type": "string",
                                    "description": "The gate of this rule."
                                  },
                                  "Trigger": {
                                    "type": "string",
                                    "description": "The trigger of this rule."
                                  },
                                  "Check_Output": {
                                    "type": "string",
                                    "description": "Human-readable output string of this rule."
                                  },
                                  "Gate_Action": {
                                    "type": "string",
                                    "description": "The action of this rule."
                                  },
                                  "Whitelisted": {
                                    "type": "string",
                                    "description": "Whether this rule was whitelisted in the policy."
                                  },
                                  "Policy_Id": {
                                    "type": "string",
                                    "description": "The ID of the policy that contains the triggered rule."
                                  }
                                }
                              },
                              "description": "the list of outputs for this pair/gate trigger"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary/%7BpolicyId%7D?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary/%7BpolicyId%7D?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary/%7BpolicyId%7D',\n  qs: {at: 'SOME_STRING_VALUE', tag: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary/%7BpolicyId%7D?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/by_id/%7BimageId%7D/checkSummary/%7BpolicyId%7D?at=SOME_STRING_VALUE&tag=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/{imageDigest}/policyEvaluation": {
        "get": {
          "summary": "Retrieve the policy evaluation summary of an image [Digest]",
          "parameters": [
            {
              "name": "imageDigest",
              "in": "path",
              "description": "The targeted image digest",
              "required": true,
              "schema": {
                "type": "string",
                "description": "an image digest string, starting with \"sha256:\" prefix\n",
                "minLength": 1,
                "example": "sha256:7492c1f615e3651629bd6c61777e9660caa3819cf3561a47d1d526dfeee02cf6"
              }
            },
            {
              "name": "tag",
              "in": "query",
              "description": "The image full tag",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The policy evaluation summary",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "at": {
                        "type": "integer",
                        "description": "The RFC-3339 timestamp of the evaluation"
                      },
                      "tag": {
                        "type": "string",
                        "description": "The image full tag"
                      },
                      "status": {
                        "type": "string",
                        "description": "Final evaluation status"
                      },
                      "bundleId": {
                        "type": "string",
                        "description": "The bundle ID used in this evaluation"
                      },
                      "finalAction": {
                        "type": "string",
                        "description": "Final evaluation action"
                      },
                      "finalActionReason": {
                        "type": "string",
                        "description": "Final evaluation action reason"
                      },
                      "nStops": {
                        "type": "integer",
                        "description": "Total number of stop rules triggered"
                      },
                      "nWarns": {
                        "type": "integer",
                        "description": "Total number of warn rules triggered"
                      },
                      "policies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "description": "Policy comment"
                            },
                            "id": {
                              "type": "string",
                              "description": "Policy ID"
                            },
                            "name": {
                              "type": "string",
                              "description": "Policy Name"
                            },
                            "varsion": {
                              "type": "string",
                              "description": "Policy version"
                            },
                            "rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "string",
                                    "description": "Rule action"
                                  },
                                  "gate": {
                                    "type": "string",
                                    "description": "Rule gate"
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "Rule ID"
                                  },
                                  "trigger": {
                                    "type": "string",
                                    "description": "Rule trigger"
                                  },
                                  "params": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Parameter Name"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Parameter Value"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "results": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "Policy ID"
                            },
                            "policyName": {
                              "type": "string",
                              "description": "Policy Name"
                            },
                            "nStops": {
                              "type": "integer",
                              "description": "Number of stop rules triggered from this policy"
                            },
                            "nWarns": {
                              "type": "integer",
                              "description": "Number of warn rules triggered from this policy"
                            },
                            "gateResults": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "Rule gate"
                                  },
                                  "trigger": {
                                    "type": "string",
                                    "description": "Rule trigger"
                                  },
                                  "nStops": {
                                    "type": "integer",
                                    "description": "Number of stop rules triggered from this gate/trigger pair"
                                  },
                                  "nWarns": {
                                    "type": "integer",
                                    "description": "Number of warn rules triggered from this gate/trigger pair"
                                  },
                                  "ruleREsults": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "gate": {
                                          "type": "string",
                                          "description": "Rule gate"
                                        },
                                        "trigger": {
                                          "type": "string",
                                          "description": "Rule trigger"
                                        },
                                        "checkOutput": {
                                          "type": "string",
                                          "description": "the policy rule check output"
                                        },
                                        "gateAction": {
                                          "type": "string",
                                          "description": "the gate action"
                                        },
                                        "triggerId": {
                                          "type": "string",
                                          "description": "the trigger ID"
                                        },
                                        "whitelisted": {
                                          "type": "boolean",
                                          "description": "rule whitelisted (true/false)"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/policyEvaluation?tag=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/policyEvaluation?tag=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/policyEvaluation',\n  qs: {tag: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/%7BimageDigest%7D/policyEvaluation?tag=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/%7BimageDigest%7D/policyEvaluation?tag=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/images/by_id/{imageId}/policyEvaluation": {
        "get": {
          "summary": "Retrieve the policy evaluation summary of an image [ImageID]",
          "parameters": [
            {
              "name": "imageId",
              "in": "path",
              "description": "The targeted imageID",
              "required": true,
              "schema": {
                "type": "string",
                "description": "the imageID that identifies the image\n",
                "minLength": 1,
                "example": "d4d4f50f871a02502debe52927b7c5769a1b9ed2f4a06ea0e3c3623ba089511b"
              }
            },
            {
              "name": "tag",
              "in": "query",
              "description": "The image full tag",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The policy evaluation summary",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageDigest": {
                        "type": "string",
                        "description": "The targeted image digest"
                      },
                      "at": {
                        "type": "integer",
                        "description": "The RFC-3339 timestamp of the evaluation"
                      },
                      "tag": {
                        "type": "string",
                        "description": "The image full tag"
                      },
                      "status": {
                        "type": "string",
                        "description": "Final evaluation status"
                      },
                      "bundleId": {
                        "type": "string",
                        "description": "The bundle ID used in this evaluation"
                      },
                      "finalAction": {
                        "type": "string",
                        "description": "Final evaluation action"
                      },
                      "finalActionReason": {
                        "type": "string",
                        "description": "Final evaluation action reason"
                      },
                      "nStops": {
                        "type": "integer",
                        "description": "Total number of stop rules triggered"
                      },
                      "nWarns": {
                        "type": "integer",
                        "description": "Total number of warn rules triggered"
                      },
                      "policies": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "comment": {
                              "type": "string",
                              "description": "Policy comment"
                            },
                            "id": {
                              "type": "string",
                              "description": "Policy ID"
                            },
                            "name": {
                              "type": "string",
                              "description": "Policy Name"
                            },
                            "varsion": {
                              "type": "string",
                              "description": "Policy version"
                            },
                            "rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "string",
                                    "description": "Rule action"
                                  },
                                  "gate": {
                                    "type": "string",
                                    "description": "Rule gate"
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "Rule ID"
                                  },
                                  "trigger": {
                                    "type": "string",
                                    "description": "Rule trigger"
                                  },
                                  "params": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Parameter Name"
                                        },
                                        "value": {
                                          "type": "string",
                                          "description": "Parameter Value"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "results": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "policyId": {
                              "type": "string",
                              "description": "Policy ID"
                            },
                            "policyName": {
                              "type": "string",
                              "description": "Policy Name"
                            },
                            "nStops": {
                              "type": "integer",
                              "description": "Number of stop rules triggered from this policy"
                            },
                            "nWarns": {
                              "type": "integer",
                              "description": "Number of warn rules triggered from this policy"
                            },
                            "gateResults": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "Rule gate"
                                  },
                                  "trigger": {
                                    "type": "string",
                                    "description": "Rule trigger"
                                  },
                                  "nStops": {
                                    "type": "integer",
                                    "description": "Number of stop rules triggered from this gate/trigger pair"
                                  },
                                  "nWarns": {
                                    "type": "integer",
                                    "description": "Number of warn rules triggered from this gate/trigger pair"
                                  },
                                  "ruleREsults": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "gate": {
                                          "type": "string",
                                          "description": "Rule gate"
                                        },
                                        "trigger": {
                                          "type": "string",
                                          "description": "Rule trigger"
                                        },
                                        "checkOutput": {
                                          "type": "string",
                                          "description": "the policy rule check output"
                                        },
                                        "gateAction": {
                                          "type": "string",
                                          "description": "the gate action"
                                        },
                                        "triggerId": {
                                          "type": "string",
                                          "description": "the trigger ID"
                                        },
                                        "whitelisted": {
                                          "type": "boolean",
                                          "description": "rule whitelisted (true/false)"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/policyEvaluation?tag=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/policyEvaluation?tag=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/policyEvaluation',\n  qs: {tag: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/images/by_id/%7BimageId%7D/policyEvaluation?tag=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/images/by_id/%7BimageId%7D/policyEvaluation?tag=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/policies": {
        "get": {
          "summary": "Retrieve the list of all the policies in the targeted policy bundle",
          "parameters": [
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "List of all the policies in the targeted policy bundle",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "rules"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier associated with this policy. It's created backend side.\n"
                        },
                        "comment": {
                          "type": "string",
                          "description": "A human-readable description.\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the policy.\n"
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of the policy.\n"
                        },
                        "isDefault": {
                          "type": "boolean",
                          "description": "If true, this policy is referenced in the default mapping (registry=repository=tag=*)\n"
                        },
                        "rules": {
                          "description": "An array of PolicyRule elements (while creating/updating a policy, new rule IDs will be created backend side)\n",
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        },
                        "policyBundleId": {
                          "type": "string",
                          "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this policy. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/policies?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/policies?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/policies',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/policies?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/policies?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create a new policy in the targeted policy bundle",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "rules"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier associated with this policy. It's created backend side.\n"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A human-readable description.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the policy.\n"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the policy.\n"
                    },
                    "isDefault": {
                      "type": "boolean",
                      "description": "If true, this policy is referenced in the default mapping (registry=repository=tag=*)\n"
                    },
                    "rules": {
                      "description": "An array of PolicyRule elements (while creating/updating a policy, new rule IDs will be created backend side)\n",
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "policyBundleId": {
                      "type": "string",
                      "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this policy. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The newly created policy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name",
                      "rules"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier associated with this policy. It's created backend side.\n"
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the policy.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the policy.\n"
                      },
                      "isDefault": {
                        "type": "boolean",
                        "description": "If true, this policy is referenced in the default mapping (registry=repository=tag=*)\n"
                      },
                      "rules": {
                        "description": "An array of PolicyRule elements (while creating/updating a policy, new rule IDs will be created backend side)\n",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this policy. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/policies\"\n\n\tpayload := strings.NewReader(\"{\\\"id\\\":\\\"string\\\",\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"isDefault\\\":true,\\\"rules\\\":[{}],\\\"policyBundleId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/v1/policies \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":\"string\",\"comment\":\"string\",\"name\":\"string\",\"version\":\"string\",\"isDefault\":true,\"rules\":[{}],\"policyBundleId\":\"string\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/v1/policies',\n  headers: {'content-type': 'application/json'},\n  body: {\n    id: 'string',\n    comment: 'string',\n    name: 'string',\n    version: 'string',\n    isDefault: true,\n    rules: [{}],\n    policyBundleId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/v1/policies\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"id\\\":\\\"string\\\",\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"isDefault\\\":true,\\\"rules\\\":[{}],\\\"policyBundleId\\\":\\\"string\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"isDefault\\\":true,\\\"rules\\\":[{}],\\\"policyBundleId\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/v1/policies\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/auditPolicies": {
        "get": {
          "summary": "Retrieve the list of all the default audit policies IDs in the targeted policy bundle",
          "parameters": [
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "List of all the default audit policies IDs in the targeted policy bundle",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/auditPolicies?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/auditPolicies?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/auditPolicies',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/auditPolicies?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/auditPolicies?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/policies/{id}": {
        "get": {
          "summary": "Retrieve the policy with the given id in the targeted policy bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The policy with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name",
                      "rules"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier associated with this policy. It's created backend side.\n"
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the policy.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the policy.\n"
                      },
                      "isDefault": {
                        "type": "boolean",
                        "description": "If true, this policy is referenced in the default mapping (registry=repository=tag=*)\n"
                      },
                      "rules": {
                        "description": "An array of PolicyRule elements (while creating/updating a policy, new rule IDs will be created backend side)\n",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this policy. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Policy not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/policies/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the policy with the given id in the targeted policy Bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "rules"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier associated with this policy. It's created backend side.\n"
                    },
                    "comment": {
                      "type": "string",
                      "description": "A human-readable description.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the policy.\n"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the policy.\n"
                    },
                    "isDefault": {
                      "type": "boolean",
                      "description": "If true, this policy is referenced in the default mapping (registry=repository=tag=*)\n"
                    },
                    "rules": {
                      "description": "An array of PolicyRule elements (while creating/updating a policy, new rule IDs will be created backend side)\n",
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "policyBundleId": {
                      "type": "string",
                      "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this policy. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The updated policy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name",
                      "rules"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Unique identifier associated with this policy. It's created backend side.\n"
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the policy.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the policy.\n"
                      },
                      "isDefault": {
                        "type": "boolean",
                        "description": "If true, this policy is referenced in the default mapping (registry=repository=tag=*)\n"
                      },
                      "rules": {
                        "description": "An array of PolicyRule elements (while creating/updating a policy, new rule IDs will be created backend side)\n",
                        "type": "array",
                        "items": {
                          "type": "object"
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this policy. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Policy not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"id\\\":\\\"string\\\",\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"isDefault\\\":true,\\\"rules\\\":[{}],\\\"policyBundleId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":\"string\",\"comment\":\"string\",\"name\":\"string\",\"version\":\"string\",\"isDefault\":true,\"rules\":[{}],\"policyBundleId\":\"string\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D',\n  headers: {'content-type': 'application/json'},\n  body: {\n    id: 'string',\n    comment: 'string',\n    name: 'string',\n    version: 'string',\n    isDefault: true,\n    rules: [{}],\n    policyBundleId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"id\\\":\\\"string\\\",\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"isDefault\\\":true,\\\"rules\\\":[{}],\\\"policyBundleId\\\":\\\"string\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"id\\\":\\\"string\\\",\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"isDefault\\\":true,\\\"rules\\\":[{}],\\\"policyBundleId\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/policies/%7Bid%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete the policy with the given id in the targeted policy bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Policy deleted"
            },
            "404": {
              "description": "Policy not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/scanning/v1/policies/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/scanning/v1/policies/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/registryDisplayNames": {
        "get": {
          "summary": "Retrieve the list of all mappings between registry names and registry display names",
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "List of all registry display name mappings",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "registryName": {
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/registryDisplayNames\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/registryDisplayNames"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/registryDisplayNames'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/registryDisplayNames\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/registryDisplayNames\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/whitelists": {
        "get": {
          "summary": "Retrieve all the vulnerability exception lists in the targeted policy bundle",
          "parameters": [
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "withItems",
              "in": "query",
              "description": "Include or not \"items\" in the response. Useful when there are a lot of vulnerability exception lists.\n",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "All the vulnerability exception lists in the targeted policy bundle",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "items",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "version"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                        },
                        "createdAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been created\n",
                          "example": 1595433581
                        },
                        "updatedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been updated\n",
                          "example": 1595433581
                        },
                        "comment": {
                          "type": "string",
                          "description": "A human-readable description.\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the vulnerability exception list.\n"
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                        },
                        "items": {
                          "type": "array",
                          "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The vulnerability identifier. Computed server side\n"
                                  },
                                  "createdAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                  },
                                  "updatedAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                    "description": "The vulnerability generic description\n"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "gate",
                                  "trigger_id"
                                ],
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "The gate kind\n",
                                    "example": "vulnerabilities"
                                  },
                                  "trigger_id": {
                                    "type": "string",
                                    "description": "The name of the vulnerability\n",
                                    "example": "CVE-2020-9071+*"
                                  },
                                  "notes": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The user written notes attached to a specific vulnerability exception item\n"
                                  },
                                  "expiration_date": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                    "example": 1657622089
                                  },
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "policyBundleId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/whitelists?bundleId=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/whitelists?bundleId=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/whitelists',\n  qs: {bundleId: 'SOME_STRING_VALUE', withItems: 'SOME_BOOLEAN_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/whitelists?bundleId=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/whitelists?bundleId=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create a new vulnerability exception list in the targeted policy bundle",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "items",
                    "createdAt",
                    "updatedAt",
                    "name",
                    "version"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                    },
                    "createdAt": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "The timestamp when the vulnerability exception list has been created\n",
                      "example": 1595433581
                    },
                    "updatedAt": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "The timestamp when the vulnerability exception list has been updated\n",
                      "example": 1595433581
                    },
                    "comment": {
                      "type": "string",
                      "description": "A human-readable description.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the vulnerability exception list.\n"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                    },
                    "items": {
                      "type": "array",
                      "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "createdAt",
                              "updatedAt"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The vulnerability identifier. Computed server side\n"
                              },
                              "createdAt": {
                                "type": "integer",
                                "example": 1595433581,
                                "description": "The timestamp when the vulnerability has been added to the exception list\n"
                              },
                              "updatedAt": {
                                "type": "integer",
                                "example": 1595433581,
                                "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                "description": "The vulnerability generic description\n"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "gate",
                              "trigger_id"
                            ],
                            "properties": {
                              "gate": {
                                "type": "string",
                                "description": "The gate kind\n",
                                "example": "vulnerabilities"
                              },
                              "trigger_id": {
                                "type": "string",
                                "description": "The name of the vulnerability\n",
                                "example": "CVE-2020-9071+*"
                              },
                              "notes": {
                                "type": "string",
                                "nullable": true,
                                "description": "The user written notes attached to a specific vulnerability exception item\n"
                              },
                              "expiration_date": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                "example": 1657622089
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "policyBundleId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The newly created vulnerability exception list",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "id",
                      "items",
                      "createdAt",
                      "updatedAt",
                      "name",
                      "version"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been created\n",
                        "example": 1595433581
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been updated\n",
                        "example": 1595433581
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the vulnerability exception list.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                      },
                      "items": {
                        "type": "array",
                        "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The vulnerability identifier. Computed server side\n"
                                },
                                "createdAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                },
                                "updatedAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                  "description": "The vulnerability generic description\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "gate",
                                "trigger_id"
                              ],
                              "properties": {
                                "gate": {
                                  "type": "string",
                                  "description": "The gate kind\n",
                                  "example": "vulnerabilities"
                                },
                                "trigger_id": {
                                  "type": "string",
                                  "description": "The name of the vulnerability\n",
                                  "example": "CVE-2020-9071+*"
                                },
                                "notes": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The user written notes attached to a specific vulnerability exception item\n"
                                },
                                "expiration_date": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                  "example": 1657622089
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Missing field name"
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "A vulnerability exception list with the given name already exists"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/whitelists\"\n\n\tpayload := strings.NewReader(\"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/v1/whitelists \\\n  --header 'content-type: application/json' \\\n  --data '{\"comment\":\"string\",\"name\":\"string\",\"version\":\"string\",\"items\":[{\"id\":\"string\",\"createdAt\":1595433581,\"updatedAt\":1595433581,\"description\":\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\nThe software reads data past the end of the intended buffer when parsing certain message,\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\nSuccessful exploit may cause service abnormal in specific scenario.\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\n\",\"gate\":\"vulnerabilities\",\"trigger_id\":\"CVE-2020-9071+*\",\"notes\":\"string\",\"expiration_date\":1657622089,\"enabled\":true}]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/v1/whitelists',\n  headers: {'content-type': 'application/json'},\n  body: {\n    comment: 'string',\n    name: 'string',\n    version: 'string',\n    items: [\n      {\n        id: 'string',\n        createdAt: 1595433581,\n        updatedAt: 1595433581,\n        description: 'There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\nThe software reads data past the end of the intended buffer when parsing certain message,\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\nSuccessful exploit may cause service abnormal in specific scenario.\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\n',\n        gate: 'vulnerabilities',\n        trigger_id: 'CVE-2020-9071+*',\n        notes: 'string',\n        expiration_date: 1657622089,\n        enabled: true\n      }\n    ]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/v1/whitelists\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/v1/whitelists\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/whitelists/{id}": {
        "get": {
          "summary": "Retrieve the vulnerability exception list with the given id in the active policy bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The vulnerability exception list with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "id",
                      "items",
                      "createdAt",
                      "updatedAt",
                      "name",
                      "version"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been created\n",
                        "example": 1595433581
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been updated\n",
                        "example": 1595433581
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the vulnerability exception list.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                      },
                      "items": {
                        "type": "array",
                        "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The vulnerability identifier. Computed server side\n"
                                },
                                "createdAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                },
                                "updatedAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                  "description": "The vulnerability generic description\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "gate",
                                "trigger_id"
                              ],
                              "properties": {
                                "gate": {
                                  "type": "string",
                                  "description": "The gate kind\n",
                                  "example": "vulnerabilities"
                                },
                                "trigger_id": {
                                  "type": "string",
                                  "description": "The name of the vulnerability\n",
                                  "example": "CVE-2020-9071+*"
                                },
                                "notes": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The user written notes attached to a specific vulnerability exception item\n"
                                },
                                "expiration_date": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                  "example": 1657622089
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Vulnerability exception list not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability exception list not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the main attributes of the vulnerability exception list with the given id in the targeted policy bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "items",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "version"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                        },
                        "createdAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been created\n",
                          "example": 1595433581
                        },
                        "updatedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been updated\n",
                          "example": 1595433581
                        },
                        "comment": {
                          "type": "string",
                          "description": "A human-readable description.\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the vulnerability exception list.\n"
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                        },
                        "items": {
                          "type": "array",
                          "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The vulnerability identifier. Computed server side\n"
                                  },
                                  "createdAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                  },
                                  "updatedAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                    "description": "The vulnerability generic description\n"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "gate",
                                  "trigger_id"
                                ],
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "The gate kind\n",
                                    "example": "vulnerabilities"
                                  },
                                  "trigger_id": {
                                    "type": "string",
                                    "description": "The name of the vulnerability\n",
                                    "example": "CVE-2020-9071+*"
                                  },
                                  "notes": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The user written notes attached to a specific vulnerability exception item\n"
                                  },
                                  "expiration_date": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                    "example": 1657622089
                                  },
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "policyBundleId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "deprecated": true,
                          "description": "An array of vulnerability exception items (while creating/updating a list,\nnew item IDs will be created backend side)\n\n**Deprecated**: use POST .../vulnexceptions/{id}/vulnerabilities instead\n",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "gate",
                              "trigger_id"
                            ],
                            "properties": {
                              "gate": {
                                "type": "string",
                                "description": "The gate kind\n",
                                "example": "vulnerabilities"
                              },
                              "trigger_id": {
                                "type": "string",
                                "description": "The name of the vulnerability\n",
                                "example": "CVE-2020-9071+*"
                              },
                              "notes": {
                                "type": "string",
                                "nullable": true,
                                "description": "The user written notes attached to a specific vulnerability exception item\n"
                              },
                              "expiration_date": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                "example": 1657622089
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The updated vulnerability exception list",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "id",
                      "items",
                      "createdAt",
                      "updatedAt",
                      "name",
                      "version"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been created\n",
                        "example": 1595433581
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been updated\n",
                        "example": 1595433581
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the vulnerability exception list.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                      },
                      "items": {
                        "type": "array",
                        "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The vulnerability identifier. Computed server side\n"
                                },
                                "createdAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                },
                                "updatedAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                  "description": "The vulnerability generic description\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "gate",
                                "trigger_id"
                              ],
                              "properties": {
                                "gate": {
                                  "type": "string",
                                  "description": "The gate kind\n",
                                  "example": "vulnerabilities"
                                },
                                "trigger_id": {
                                  "type": "string",
                                  "description": "The name of the vulnerability\n",
                                  "example": "CVE-2020-9071+*"
                                },
                                "notes": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The user written notes attached to a specific vulnerability exception item\n"
                                },
                                "expiration_date": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                  "example": 1657622089
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Missing field name"
                }
              }
            },
            "404": {
              "description": "Policy not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability exception list not found"
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "A vulnerability exception list with the given name already exists"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"comment\":\"string\",\"name\":\"string\",\"version\":\"string\",\"items\":[{\"id\":\"string\",\"createdAt\":1595433581,\"updatedAt\":1595433581,\"description\":\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\nThe software reads data past the end of the intended buffer when parsing certain message,\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\nSuccessful exploit may cause service abnormal in specific scenario.\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\n\",\"gate\":\"vulnerabilities\",\"trigger_id\":\"CVE-2020-9071+*\",\"notes\":\"string\",\"expiration_date\":1657622089,\"enabled\":true}]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'},\n  headers: {'content-type': 'application/json'},\n  body: {\n    comment: 'string',\n    name: 'string',\n    version: 'string',\n    items: [\n      {\n        id: 'string',\n        createdAt: 1595433581,\n        updatedAt: 1595433581,\n        description: 'There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\nThe software reads data past the end of the intended buffer when parsing certain message,\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\nSuccessful exploit may cause service abnormal in specific scenario.\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\n',\n        gate: 'vulnerabilities',\n        trigger_id: 'CVE-2020-9071+*',\n        notes: 'string',\n        expiration_date: 1657622089,\n        enabled: true\n      }\n    ]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete the vulnerability exception list with the given id in the targeted policy bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Vulnerability exception list deleted"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/scanning/v1/whitelists/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/vulnexceptions": {
        "get": {
          "summary": "Retrieve all the vulnerability exception lists in the targeted policy bundle",
          "parameters": [
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "withItems",
              "in": "query",
              "description": "Include or not \"items\" in the response. Useful when there are a lot of vulnerability exception lists.\n",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "All the vulnerability exception lists in the targeted policy bundle",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "items",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "version"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                        },
                        "createdAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been created\n",
                          "example": 1595433581
                        },
                        "updatedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been updated\n",
                          "example": 1595433581
                        },
                        "comment": {
                          "type": "string",
                          "description": "A human-readable description.\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the vulnerability exception list.\n"
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                        },
                        "items": {
                          "type": "array",
                          "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The vulnerability identifier. Computed server side\n"
                                  },
                                  "createdAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                  },
                                  "updatedAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                    "description": "The vulnerability generic description\n"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "gate",
                                  "trigger_id"
                                ],
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "The gate kind\n",
                                    "example": "vulnerabilities"
                                  },
                                  "trigger_id": {
                                    "type": "string",
                                    "description": "The name of the vulnerability\n",
                                    "example": "CVE-2020-9071+*"
                                  },
                                  "notes": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The user written notes attached to a specific vulnerability exception item\n"
                                  },
                                  "expiration_date": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                    "example": 1657622089
                                  },
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "policyBundleId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions?bundleId=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions?bundleId=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions',\n  qs: {bundleId: 'SOME_STRING_VALUE', withItems: 'SOME_BOOLEAN_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions?bundleId=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/vulnexceptions?bundleId=SOME_STRING_VALUE&withItems=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create a new vulnerability exception list in the targeted policy bundle",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "items",
                    "createdAt",
                    "updatedAt",
                    "name",
                    "version"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                    },
                    "createdAt": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "The timestamp when the vulnerability exception list has been created\n",
                      "example": 1595433581
                    },
                    "updatedAt": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "The timestamp when the vulnerability exception list has been updated\n",
                      "example": 1595433581
                    },
                    "comment": {
                      "type": "string",
                      "description": "A human-readable description.\n"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the vulnerability exception list.\n"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                    },
                    "items": {
                      "type": "array",
                      "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "createdAt",
                              "updatedAt"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The vulnerability identifier. Computed server side\n"
                              },
                              "createdAt": {
                                "type": "integer",
                                "example": 1595433581,
                                "description": "The timestamp when the vulnerability has been added to the exception list\n"
                              },
                              "updatedAt": {
                                "type": "integer",
                                "example": 1595433581,
                                "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true,
                                "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                "description": "The vulnerability generic description\n"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "gate",
                              "trigger_id"
                            ],
                            "properties": {
                              "gate": {
                                "type": "string",
                                "description": "The gate kind\n",
                                "example": "vulnerabilities"
                              },
                              "trigger_id": {
                                "type": "string",
                                "description": "The name of the vulnerability\n",
                                "example": "CVE-2020-9071+*"
                              },
                              "notes": {
                                "type": "string",
                                "nullable": true,
                                "description": "The user written notes attached to a specific vulnerability exception item\n"
                              },
                              "expiration_date": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                "example": 1657622089
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "policyBundleId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The newly created vulnerability exception list",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "id",
                      "items",
                      "createdAt",
                      "updatedAt",
                      "name",
                      "version"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been created\n",
                        "example": 1595433581
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been updated\n",
                        "example": 1595433581
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the vulnerability exception list.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                      },
                      "items": {
                        "type": "array",
                        "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The vulnerability identifier. Computed server side\n"
                                },
                                "createdAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                },
                                "updatedAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                  "description": "The vulnerability generic description\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "gate",
                                "trigger_id"
                              ],
                              "properties": {
                                "gate": {
                                  "type": "string",
                                  "description": "The gate kind\n",
                                  "example": "vulnerabilities"
                                },
                                "trigger_id": {
                                  "type": "string",
                                  "description": "The name of the vulnerability\n",
                                  "example": "CVE-2020-9071+*"
                                },
                                "notes": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The user written notes attached to a specific vulnerability exception item\n"
                                },
                                "expiration_date": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                  "example": 1657622089
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Missing field name"
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "A vulnerability exception list with the given name already exists"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions\"\n\n\tpayload := strings.NewReader(\"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/v1/vulnexceptions \\\n  --header 'content-type: application/json' \\\n  --data '{\"comment\":\"string\",\"name\":\"string\",\"version\":\"string\",\"items\":[{\"id\":\"string\",\"createdAt\":1595433581,\"updatedAt\":1595433581,\"description\":\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\nThe software reads data past the end of the intended buffer when parsing certain message,\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\nSuccessful exploit may cause service abnormal in specific scenario.\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\n\",\"gate\":\"vulnerabilities\",\"trigger_id\":\"CVE-2020-9071+*\",\"notes\":\"string\",\"expiration_date\":1657622089,\"enabled\":true}]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions',\n  headers: {'content-type': 'application/json'},\n  body: {\n    comment: 'string',\n    name: 'string',\n    version: 'string',\n    items: [\n      {\n        id: 'string',\n        createdAt: 1595433581,\n        updatedAt: 1595433581,\n        description: 'There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\nThe software reads data past the end of the intended buffer when parsing certain message,\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\nSuccessful exploit may cause service abnormal in specific scenario.\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\n',\n        gate: 'vulnerabilities',\n        trigger_id: 'CVE-2020-9071+*',\n        notes: 'string',\n        expiration_date: 1657622089,\n        enabled: true\n      }\n    ]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/v1/vulnexceptions\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/vulnexceptions/{id}": {
        "get": {
          "summary": "Retrieve the vulnerability exception list with the given id in the active policy bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The vulnerability exception list with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "id",
                      "items",
                      "createdAt",
                      "updatedAt",
                      "name",
                      "version"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been created\n",
                        "example": 1595433581
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been updated\n",
                        "example": 1595433581
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the vulnerability exception list.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                      },
                      "items": {
                        "type": "array",
                        "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The vulnerability identifier. Computed server side\n"
                                },
                                "createdAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                },
                                "updatedAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                  "description": "The vulnerability generic description\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "gate",
                                "trigger_id"
                              ],
                              "properties": {
                                "gate": {
                                  "type": "string",
                                  "description": "The gate kind\n",
                                  "example": "vulnerabilities"
                                },
                                "trigger_id": {
                                  "type": "string",
                                  "description": "The name of the vulnerability\n",
                                  "example": "CVE-2020-9071+*"
                                },
                                "notes": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The user written notes attached to a specific vulnerability exception item\n"
                                },
                                "expiration_date": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                  "example": 1657622089
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Vulnerability exception list not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability exception list not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the main attributes of the vulnerability exception list with the given id in the targeted policy bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "schema": {
                "type": "string"
              },
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "items",
                        "createdAt",
                        "updatedAt",
                        "name",
                        "version"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                        },
                        "createdAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been created\n",
                          "example": 1595433581
                        },
                        "updatedAt": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "The timestamp when the vulnerability exception list has been updated\n",
                          "example": 1595433581
                        },
                        "comment": {
                          "type": "string",
                          "description": "A human-readable description.\n"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the vulnerability exception list.\n"
                        },
                        "version": {
                          "type": "string",
                          "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                        },
                        "items": {
                          "type": "array",
                          "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "required": [
                                  "id",
                                  "createdAt",
                                  "updatedAt"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The vulnerability identifier. Computed server side\n"
                                  },
                                  "createdAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                  },
                                  "updatedAt": {
                                    "type": "integer",
                                    "example": 1595433581,
                                    "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true,
                                    "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                    "description": "The vulnerability generic description\n"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "gate",
                                  "trigger_id"
                                ],
                                "properties": {
                                  "gate": {
                                    "type": "string",
                                    "description": "The gate kind\n",
                                    "example": "vulnerabilities"
                                  },
                                  "trigger_id": {
                                    "type": "string",
                                    "description": "The name of the vulnerability\n",
                                    "example": "CVE-2020-9071+*"
                                  },
                                  "notes": {
                                    "type": "string",
                                    "nullable": true,
                                    "description": "The user written notes attached to a specific vulnerability exception item\n"
                                  },
                                  "expiration_date": {
                                    "type": "integer",
                                    "nullable": true,
                                    "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                    "example": 1657622089
                                  },
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "policyBundleId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "deprecated": true,
                          "description": "An array of vulnerability exception items (while creating/updating a list,\nnew item IDs will be created backend side)\n\n**Deprecated**: use POST .../vulnexceptions/{id}/vulnerabilities instead\n",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "gate",
                              "trigger_id"
                            ],
                            "properties": {
                              "gate": {
                                "type": "string",
                                "description": "The gate kind\n",
                                "example": "vulnerabilities"
                              },
                              "trigger_id": {
                                "type": "string",
                                "description": "The name of the vulnerability\n",
                                "example": "CVE-2020-9071+*"
                              },
                              "notes": {
                                "type": "string",
                                "nullable": true,
                                "description": "The user written notes attached to a specific vulnerability exception item\n"
                              },
                              "expiration_date": {
                                "type": "integer",
                                "nullable": true,
                                "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                "example": 1657622089
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The updated vulnerability exception list",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "id",
                      "items",
                      "createdAt",
                      "updatedAt",
                      "name",
                      "version"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique identifier associated with this vulnerability exception list. It's created backend side.\n"
                      },
                      "createdAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been created\n",
                        "example": 1595433581
                      },
                      "updatedAt": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "The timestamp when the vulnerability exception list has been updated\n",
                        "example": 1595433581
                      },
                      "comment": {
                        "type": "string",
                        "description": "A human-readable description.\n"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the vulnerability exception list.\n"
                      },
                      "version": {
                        "type": "string",
                        "description": "Version of the vulnerability exception list. Should be \"1_0\"\n"
                      },
                      "items": {
                        "type": "array",
                        "description": "An array of vulnerability exception items (while creating/updating a list, new item IDs will be created backend side)\n",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "createdAt",
                                "updatedAt"
                              ],
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The vulnerability identifier. Computed server side\n"
                                },
                                "createdAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been added to the exception list\n"
                                },
                                "updatedAt": {
                                  "type": "integer",
                                  "example": 1595433581,
                                  "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                                },
                                "description": {
                                  "type": "string",
                                  "nullable": true,
                                  "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                                  "description": "The vulnerability generic description\n"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "gate",
                                "trigger_id"
                              ],
                              "properties": {
                                "gate": {
                                  "type": "string",
                                  "description": "The gate kind\n",
                                  "example": "vulnerabilities"
                                },
                                "trigger_id": {
                                  "type": "string",
                                  "description": "The name of the vulnerability\n",
                                  "example": "CVE-2020-9071+*"
                                },
                                "notes": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "The user written notes attached to a specific vulnerability exception item\n"
                                },
                                "expiration_date": {
                                  "type": "integer",
                                  "nullable": true,
                                  "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                                  "example": 1657622089
                                },
                                "enabled": {
                                  "type": "boolean",
                                  "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this vulnerability exception list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Missing field name"
                }
              }
            },
            "404": {
              "description": "Policy not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability exception list not found"
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "A vulnerability exception list with the given name already exists"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"comment\":\"string\",\"name\":\"string\",\"version\":\"string\",\"items\":[{\"id\":\"string\",\"createdAt\":1595433581,\"updatedAt\":1595433581,\"description\":\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\nThe software reads data past the end of the intended buffer when parsing certain message,\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\nSuccessful exploit may cause service abnormal in specific scenario.\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\n\",\"gate\":\"vulnerabilities\",\"trigger_id\":\"CVE-2020-9071+*\",\"notes\":\"string\",\"expiration_date\":1657622089,\"enabled\":true}]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'},\n  headers: {'content-type': 'application/json'},\n  body: {\n    comment: 'string',\n    name: 'string',\n    version: 'string',\n    items: [\n      {\n        id: 'string',\n        createdAt: 1595433581,\n        updatedAt: 1595433581,\n        description: 'There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\nThe software reads data past the end of the intended buffer when parsing certain message,\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\nSuccessful exploit may cause service abnormal in specific scenario.\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\n',\n        gate: 'vulnerabilities',\n        trigger_id: 'CVE-2020-9071+*',\n        notes: 'string',\n        expiration_date: 1657622089,\n        enabled: true\n      }\n    ]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"comment\\\":\\\"string\\\",\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\",\\\"items\\\":[{\\\"id\\\":\\\"string\\\",\\\"createdAt\\\":1595433581,\\\"updatedAt\\\":1595433581,\\\"description\\\":\\\"There is a few bytes out-of-bounds read vulnerability in some Huawei products.\\\\nThe software reads data past the end of the intended buffer when parsing certain message,\\\\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\\\\nSuccessful exploit may cause service abnormal in specific scenario.\\\\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\\\\n\\\",\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete the vulnerability exception list with the given id in the targeted policy bundle",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Vulnerability exception list deleted"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/scanning/v1/vulnexceptions/%7Bid%7D?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/vulnexceptions/{id}/vulnerabilities": {
        "post": {
          "summary": "Add a new vulnerability to a specific vulnerability exception list.\n",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The vulnerability exception list identifier\n"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "gate",
                    "trigger_id"
                  ],
                  "properties": {
                    "gate": {
                      "type": "string",
                      "description": "The gate kind\n",
                      "example": "vulnerabilities"
                    },
                    "trigger_id": {
                      "type": "string",
                      "description": "The name of the vulnerability\n",
                      "example": "CVE-2020-9071+*"
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true,
                      "description": "The user written notes attached to a specific vulnerability exception item\n"
                    },
                    "expiration_date": {
                      "type": "integer",
                      "nullable": true,
                      "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                      "example": 1657622089
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Vulnerability added to exception list",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "createdAt",
                          "updatedAt"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The vulnerability identifier. Computed server side\n"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1595433581,
                            "description": "The timestamp when the vulnerability has been added to the exception list\n"
                          },
                          "updatedAt": {
                            "type": "integer",
                            "example": 1595433581,
                            "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                            "description": "The vulnerability generic description\n"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "gate",
                          "trigger_id"
                        ],
                        "properties": {
                          "gate": {
                            "type": "string",
                            "description": "The gate kind\n",
                            "example": "vulnerabilities"
                          },
                          "trigger_id": {
                            "type": "string",
                            "description": "The name of the vulnerability\n",
                            "example": "CVE-2020-9071+*"
                          },
                          "notes": {
                            "type": "string",
                            "nullable": true,
                            "description": "The user written notes attached to a specific vulnerability exception item\n"
                          },
                          "expiration_date": {
                            "type": "integer",
                            "nullable": true,
                            "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                            "example": 1657622089
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Bad request"
                }
              }
            },
            "404": {
              "description": "Vulnerability exception list not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability exception list not found"
                }
              }
            },
            "409": {
              "description": "Conflict",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability already exists in the exception list"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities?bundleId=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities?bundleId=SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"gate\":\"vulnerabilities\",\"trigger_id\":\"CVE-2020-9071+*\",\"notes\":\"string\",\"expiration_date\":1657622089,\"enabled\":true}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities',\n  qs: {bundleId: 'SOME_STRING_VALUE'},\n  headers: {'content-type': 'application/json'},\n  body: {\n    gate: 'vulnerabilities',\n    trigger_id: 'CVE-2020-9071+*',\n    notes: 'string',\n    expiration_date: 1657622089,\n    enabled: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities?bundleId=SOME_STRING_VALUE\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities?bundleId=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/vulnexceptions/{id}/vulnerabilities/{vulnId}": {
        "get": {
          "summary": "Retrieve vulnerability informations in a specific vulnerability exception list\n",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The vulnerability exception list identifier\n"
              }
            },
            {
              "name": "vulnId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The vulnerability identifier\n"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Fetched vulnerability details",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "createdAt",
                          "updatedAt"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The vulnerability identifier. Computed server side\n"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1595433581,
                            "description": "The timestamp when the vulnerability has been added to the exception list\n"
                          },
                          "updatedAt": {
                            "type": "integer",
                            "example": 1595433581,
                            "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                            "description": "The vulnerability generic description\n"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "gate",
                          "trigger_id"
                        ],
                        "properties": {
                          "gate": {
                            "type": "string",
                            "description": "The gate kind\n",
                            "example": "vulnerabilities"
                          },
                          "trigger_id": {
                            "type": "string",
                            "description": "The name of the vulnerability\n",
                            "example": "CVE-2020-9071+*"
                          },
                          "notes": {
                            "type": "string",
                            "nullable": true,
                            "description": "The user written notes attached to a specific vulnerability exception item\n"
                          },
                          "expiration_date": {
                            "type": "integer",
                            "nullable": true,
                            "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                            "example": 1657622089
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "Vulnerability exception list or vulnerability item not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability exception list not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update a vulnerability in a specific vulnerability exception list\n",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The vulnerability exception list identifier\n"
              }
            },
            {
              "name": "vulnId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The vulnerability identifier\n"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "gate",
                    "trigger_id"
                  ],
                  "properties": {
                    "gate": {
                      "type": "string",
                      "description": "The gate kind\n",
                      "example": "vulnerabilities"
                    },
                    "trigger_id": {
                      "type": "string",
                      "description": "The name of the vulnerability\n",
                      "example": "CVE-2020-9071+*"
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true,
                      "description": "The user written notes attached to a specific vulnerability exception item\n"
                    },
                    "expiration_date": {
                      "type": "integer",
                      "nullable": true,
                      "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                      "example": 1657622089
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updated vulnerability details",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "createdAt",
                          "updatedAt"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The vulnerability identifier. Computed server side\n"
                          },
                          "createdAt": {
                            "type": "integer",
                            "example": 1595433581,
                            "description": "The timestamp when the vulnerability has been added to the exception list\n"
                          },
                          "updatedAt": {
                            "type": "integer",
                            "example": 1595433581,
                            "description": "The timestamp when the vulnerability has been modified in one of its fields.\n"
                          },
                          "description": {
                            "type": "string",
                            "nullable": true,
                            "example": "There is a few bytes out-of-bounds read vulnerability in some Huawei products.\nThe software reads data past the end of the intended buffer when parsing certain message,\nan authenticated attacker could exploit this vulnerability by sending crafted messages to the device.\nSuccessful exploit may cause service abnormal in specific scenario.\nAffected product versions include:AR120-S versions V200R007C00SPC900,V200R007C00SPCa00\n",
                            "description": "The vulnerability generic description\n"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "gate",
                          "trigger_id"
                        ],
                        "properties": {
                          "gate": {
                            "type": "string",
                            "description": "The gate kind\n",
                            "example": "vulnerabilities"
                          },
                          "trigger_id": {
                            "type": "string",
                            "description": "The name of the vulnerability\n",
                            "example": "CVE-2020-9071+*"
                          },
                          "notes": {
                            "type": "string",
                            "nullable": true,
                            "description": "The user written notes attached to a specific vulnerability exception item\n"
                          },
                          "expiration_date": {
                            "type": "integer",
                            "nullable": true,
                            "description": "The timestamp till the vulnerability will be disabled. If `null`, the entry never expires.\n\n**Note**: the actual expiration will be computed only once a day for the entire Sysdig installation.\nThe task will be executed each day at 0:00 UTC (4:00 PM PST, 5:00 PM PDT) and will consider\nexpiration dates which are <= than the current **date**.\n",
                            "example": 1657622089
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "Enable/disable vulnerability when considering exceptions.\nUseful, in combination with `expiration_date` to handle temporary exceptions.\n"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "Bad request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Bad request"
                }
              }
            },
            "404": {
              "description": "Vulnerability exception list or vulnerability item not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability exception list not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"gate\":\"vulnerabilities\",\"trigger_id\":\"CVE-2020-9071+*\",\"notes\":\"string\",\"expiration_date\":1657622089,\"enabled\":true}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'},\n  headers: {'content-type': 'application/json'},\n  body: {\n    gate: 'vulnerabilities',\n    trigger_id: 'CVE-2020-9071+*',\n    notes: 'string',\n    expiration_date: 1657622089,\n    enabled: true\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"gate\\\":\\\"vulnerabilities\\\",\\\"trigger_id\\\":\\\"CVE-2020-9071+*\\\",\\\"notes\\\":\\\"string\\\",\\\"expiration_date\\\":1657622089,\\\"enabled\\\":true}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Remove a vulnerability from a specific vulnerability exception list\n",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The vulnerability exception list identifier\n"
              }
            },
            {
              "name": "vulnId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The vulnerability identifier\n"
              }
            },
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Vulnerability removed"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/scanning/v1/vulnexceptions/%7Bid%7D/vulnerabilities/%7BvulnId%7D?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/vulnerabilities/{id}": {
        "get": {
          "summary": "Retrieve generic vulnerability informations\n",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "description": "The vulnerability identifier\n"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Fetched vulnerability details",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "id",
                      "link",
                      "feeds",
                      "description"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "CVE-2020-7091",
                        "description": "The vulnerability identifier\n"
                      },
                      "description": {
                        "type": "string",
                        "example": "This vulnerability will make kittens explode",
                        "description": "The vulnerability human readable description as reported in the NVD database\n"
                      },
                      "feeds": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "name",
                            "link",
                            "severity"
                          ],
                          "properties": {
                            "name": {
                              "type": "string",
                              "example": "ubuntu:12.04",
                              "description": "The source\n"
                            },
                            "link": {
                              "type": "string",
                              "example": "http://people.ubuntu.com/~ubuntu-security/cve/CVE-2020-8492",
                              "description": "The specific url by source\n"
                            },
                            "severity": {
                              "type": "string",
                              "example": "High",
                              "description": "The specific severity by source\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Vulnerability not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Vulnerability not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/vulnerabilities/%7Bid%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/vulnerabilities/%7Bid%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/vulnerabilities/%7Bid%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/vulnerabilities/%7Bid%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/vulnerabilities/%7Bid%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/mappings": {
        "get": {
          "summary": "Retrieve the list, in order, of all the mappings in the targeted policy bundle",
          "parameters": [
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "List of all the mappings in the targeted policy bundle",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "items"
                    ],
                    "properties": {
                      "items": {
                        "description": "A list of mappings as MappingRule elements.\n\n**Note**: the default mapping should always be the last one in the array.\n",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "whitelist_ids": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "repository": {
                              "type": "string",
                              "example": "quay.io"
                            },
                            "registry": {
                              "type": "string",
                              "example": "nginx"
                            },
                            "policy_ids": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "image": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "tag"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "latest"
                                }
                              }
                            }
                          }
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this mapping list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Bundle not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/mappings?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/mappings?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/mappings',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/mappings?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/mappings?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the mappings in the targeted policy bundle.",
          "tags": [
            "Scanning"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items"
                  ],
                  "properties": {
                    "items": {
                      "description": "A list of mappings as MappingRule elements.\n\n**Note**: the default mapping should always be the last one in the array.\n",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "whitelist_ids": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "repository": {
                            "type": "string",
                            "example": "quay.io"
                          },
                          "registry": {
                            "type": "string",
                            "example": "nginx"
                          },
                          "policy_ids": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "image": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "tag"
                              },
                              "value": {
                                "type": "string",
                                "example": "latest"
                              }
                            }
                          }
                        }
                      }
                    },
                    "policyBundleId": {
                      "type": "string",
                      "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this mapping list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The updated mapping list",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "items"
                    ],
                    "properties": {
                      "items": {
                        "description": "A list of mappings as MappingRule elements.\n\n**Note**: the default mapping should always be the last one in the array.\n",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "whitelist_ids": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "repository": {
                              "type": "string",
                              "example": "quay.io"
                            },
                            "registry": {
                              "type": "string",
                              "example": "nginx"
                            },
                            "policy_ids": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "image": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "example": "tag"
                                },
                                "value": {
                                  "type": "string",
                                  "example": "latest"
                                }
                              }
                            }
                          }
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this mapping list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Bundle not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/mappings\"\n\n\tpayload := strings.NewReader(\"{\\\"items\\\":[{\\\"name\\\":\\\"string\\\",\\\"whitelist_ids\\\":[\\\"string\\\"],\\\"repository\\\":\\\"quay.io\\\",\\\"registry\\\":\\\"nginx\\\",\\\"policy_ids\\\":[\\\"string\\\"],\\\"image\\\":{\\\"type\\\":\\\"tag\\\",\\\"value\\\":\\\"latest\\\"}}],\\\"policyBundleId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/scanning/v1/mappings \\\n  --header 'content-type: application/json' \\\n  --data '{\"items\":[{\"name\":\"string\",\"whitelist_ids\":[\"string\"],\"repository\":\"quay.io\",\"registry\":\"nginx\",\"policy_ids\":[\"string\"],\"image\":{\"type\":\"tag\",\"value\":\"latest\"}}],\"policyBundleId\":\"string\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/mappings',\n  headers: {'content-type': 'application/json'},\n  body: {\n    items: [\n      {\n        name: 'string',\n        whitelist_ids: ['string'],\n        repository: 'quay.io',\n        registry: 'nginx',\n        policy_ids: ['string'],\n        image: {type: 'tag', value: 'latest'}\n      }\n    ],\n    policyBundleId: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/mappings\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"items\\\":[{\\\"name\\\":\\\"string\\\",\\\"whitelist_ids\\\":[\\\"string\\\"],\\\"repository\\\":\\\"quay.io\\\",\\\"registry\\\":\\\"nginx\\\",\\\"policy_ids\\\":[\\\"string\\\"],\\\"image\\\":{\\\"type\\\":\\\"tag\\\",\\\"value\\\":\\\"latest\\\"}}],\\\"policyBundleId\\\":\\\"string\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"items\\\":[{\\\"name\\\":\\\"string\\\",\\\"whitelist_ids\\\":[\\\"string\\\"],\\\"repository\\\":\\\"quay.io\\\",\\\"registry\\\":\\\"nginx\\\",\\\"policy_ids\\\":[\\\"string\\\"],\\\"image\\\":{\\\"type\\\":\\\"tag\\\",\\\"value\\\":\\\"latest\\\"}}],\\\"policyBundleId\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/mappings\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/whitelistedImages": {
        "get": {
          "summary": "Retrieve the Image whitelist in the targeted policy bundle",
          "parameters": [
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The list of whitelisted image names\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "items"
                    ],
                    "properties": {
                      "items": {
                        "description": "A list of image names to be {white,black}listed\n",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this image list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/whitelistedImages?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/whitelistedImages?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/whitelistedImages',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/whitelistedImages?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/whitelistedImages?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the Image whitelist in the targeted policy bundle",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items"
                  ],
                  "properties": {
                    "items": {
                      "description": "A list of image names to be {white,black}listed\n",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "policyBundleId": {
                      "type": "string",
                      "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this image list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The updated list of whitelisted image names\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "items"
                    ],
                    "properties": {
                      "items": {
                        "description": "A list of image names to be {white,black}listed\n",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this image list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/whitelistedImages\"\n\n\tpayload := strings.NewReader(\"{\\\"items\\\":[\\\"string\\\"],\\\"policyBundleId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/scanning/v1/whitelistedImages \\\n  --header 'content-type: application/json' \\\n  --data '{\"items\":[\"string\"],\"policyBundleId\":\"string\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/whitelistedImages',\n  headers: {'content-type': 'application/json'},\n  body: {items: ['string'], policyBundleId: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/whitelistedImages\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"items\\\":[\\\"string\\\"],\\\"policyBundleId\\\":\\\"string\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"items\\\":[\\\"string\\\"],\\\"policyBundleId\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/whitelistedImages\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/blacklistedImages": {
        "get": {
          "summary": "Retrieve the Image blacklist in the targeted policy bundle",
          "parameters": [
            {
              "name": "bundleId",
              "in": "query",
              "description": "Target bundle. If not specified, the currently active bundle will be used.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The list of blacklisted image names\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "items"
                    ],
                    "properties": {
                      "items": {
                        "description": "A list of image names to be {white,black}listed\n",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "policyBundleId": {
                        "type": "string",
                        "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this image list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/blacklistedImages?bundleId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/blacklistedImages?bundleId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/blacklistedImages',\n  qs: {bundleId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/blacklistedImages?bundleId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/blacklistedImages?bundleId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the Image blacklist in the targeted policy bundle",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items"
                  ],
                  "properties": {
                    "items": {
                      "description": "A list of image names to be {white,black}listed\n",
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "policyBundleId": {
                      "type": "string",
                      "description": "An policy bundle ID. While retrieving this object, this is the bundle ID that contains this image list. While inserting/updating, this is the target bundle, and if not specified, the currently active bundle will be used.\n"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The updated list of blacklisted image names\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/blacklistedImages\"\n\n\tpayload := strings.NewReader(\"{\\\"items\\\":[\\\"string\\\"],\\\"policyBundleId\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/scanning/v1/blacklistedImages \\\n  --header 'content-type: application/json' \\\n  --data '{\"items\":[\"string\"],\"policyBundleId\":\"string\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/blacklistedImages',\n  headers: {'content-type': 'application/json'},\n  body: {items: ['string'], policyBundleId: 'string'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/blacklistedImages\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"items\\\":[\\\"string\\\"],\\\"policyBundleId\\\":\\\"string\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"items\\\":[\\\"string\\\"],\\\"policyBundleId\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/blacklistedImages\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/alerts": {
        "get": {
          "summary": "Retrieve the list of all the scanning alerts",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "description": "Maximum number of alerts in the response"
            },
            {
              "name": "cursor",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              },
              "description": "An opaque string representing the current position in the list of alerts"
            }
          ],
          "responses": {
            "200": {
              "description": "The list of requested alerts",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "alerts": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "name",
                            "type",
                            "enabled",
                            "autoscan",
                            "triggers",
                            "notificationChannelIds"
                          ],
                          "properties": {
                            "alertId": {
                              "type": "string",
                              "description": "Unique identifier associated with this alert. It's created backend side.\n"
                            },
                            "enabled": {
                              "type": "boolean",
                              "description": "Whether this alert should actually be applied."
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the alert."
                            },
                            "description": {
                              "type": "string",
                              "description": "The description of the alert."
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of the alert.",
                              "enum": [
                                "runtime",
                                "repository"
                              ]
                            },
                            "scope": {
                              "type": "string",
                              "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied. Only used when type=runtime."
                            },
                            "repositories": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "required": [
                                  "registry",
                                  "repository",
                                  "tag"
                                ],
                                "properties": {
                                  "registry": {
                                    "type": "string",
                                    "description": "The image registry."
                                  },
                                  "repository": {
                                    "type": "string",
                                    "description": "The image repository."
                                  },
                                  "tag": {
                                    "type": "string",
                                    "description": "The image tag."
                                  }
                                }
                              },
                              "description": "The list of images for which the alert will be applied. Only used when type=repository."
                            },
                            "triggers": {
                              "type": "object",
                              "items": {
                                "type": "object",
                                "required": [
                                  "unscanned",
                                  "analysis_update",
                                  "vuln_update",
                                  "policy_eval"
                                ],
                                "properties": {
                                  "unscanned": {
                                    "type": "boolean",
                                    "description": "True if the alert should trigger for unscanned images. Only used when type=runtime."
                                  },
                                  "analysis_update": {
                                    "type": "boolean",
                                    "description": "True if the alert should trigger when a new image is analyzed. Only used when type=repository."
                                  },
                                  "vuln_update": {
                                    "type": "boolean",
                                    "description": "True if the alert should trigger if the set of vulnerabilities for an image changes."
                                  },
                                  "policy_eval": {
                                    "type": "boolean",
                                    "description": "True if the alert should trigger when the final result of the policy evaluation for a policy changes."
                                  }
                                }
                              }
                            },
                            "autoscan": {
                              "type": "boolean",
                              "description": "True if the alert should automatically analyze unscanned images."
                            },
                            "onlyPassFail": {
                              "type": "boolean",
                              "description": "True if the policy_eval trigger should activate only when the result changes from pass to fail."
                            },
                            "notificationChannelIds": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              }
                            }
                          }
                        }
                      },
                      "responseMetadata": {
                        "type": "object",
                        "properties": {
                          "next_cursor": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/alerts?limit=SOME_INTEGER_VALUE&cursor=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/alerts?limit=SOME_INTEGER_VALUE&cursor=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/alerts',\n  qs: {limit: 'SOME_INTEGER_VALUE', cursor: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/alerts?limit=SOME_INTEGER_VALUE&cursor=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/alerts?limit=SOME_INTEGER_VALUE&cursor=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create a new scanning alert",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "type",
                    "enabled",
                    "autoscan",
                    "triggers",
                    "notificationChannelIds"
                  ],
                  "properties": {
                    "alertId": {
                      "type": "string",
                      "description": "Unique identifier associated with this alert. It's created backend side.\n"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether this alert should actually be applied."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the alert."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the alert."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the alert.",
                      "enum": [
                        "runtime",
                        "repository"
                      ]
                    },
                    "scope": {
                      "type": "string",
                      "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied. Only used when type=runtime."
                    },
                    "repositories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "registry",
                          "repository",
                          "tag"
                        ],
                        "properties": {
                          "registry": {
                            "type": "string",
                            "description": "The image registry."
                          },
                          "repository": {
                            "type": "string",
                            "description": "The image repository."
                          },
                          "tag": {
                            "type": "string",
                            "description": "The image tag."
                          }
                        }
                      },
                      "description": "The list of images for which the alert will be applied. Only used when type=repository."
                    },
                    "triggers": {
                      "type": "object",
                      "items": {
                        "type": "object",
                        "required": [
                          "unscanned",
                          "analysis_update",
                          "vuln_update",
                          "policy_eval"
                        ],
                        "properties": {
                          "unscanned": {
                            "type": "boolean",
                            "description": "True if the alert should trigger for unscanned images. Only used when type=runtime."
                          },
                          "analysis_update": {
                            "type": "boolean",
                            "description": "True if the alert should trigger when a new image is analyzed. Only used when type=repository."
                          },
                          "vuln_update": {
                            "type": "boolean",
                            "description": "True if the alert should trigger if the set of vulnerabilities for an image changes."
                          },
                          "policy_eval": {
                            "type": "boolean",
                            "description": "True if the alert should trigger when the final result of the policy evaluation for a policy changes."
                          }
                        }
                      }
                    },
                    "autoscan": {
                      "type": "boolean",
                      "description": "True if the alert should automatically analyze unscanned images."
                    },
                    "onlyPassFail": {
                      "type": "boolean",
                      "description": "True if the policy_eval trigger should activate only when the result changes from pass to fail."
                    },
                    "notificationChannelIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The newly created alert",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name",
                      "type",
                      "enabled",
                      "autoscan",
                      "triggers",
                      "notificationChannelIds"
                    ],
                    "properties": {
                      "alertId": {
                        "type": "string",
                        "description": "Unique identifier associated with this alert. It's created backend side.\n"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether this alert should actually be applied."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the alert."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the alert."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the alert.",
                        "enum": [
                          "runtime",
                          "repository"
                        ]
                      },
                      "scope": {
                        "type": "string",
                        "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied. Only used when type=runtime."
                      },
                      "repositories": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "registry",
                            "repository",
                            "tag"
                          ],
                          "properties": {
                            "registry": {
                              "type": "string",
                              "description": "The image registry."
                            },
                            "repository": {
                              "type": "string",
                              "description": "The image repository."
                            },
                            "tag": {
                              "type": "string",
                              "description": "The image tag."
                            }
                          }
                        },
                        "description": "The list of images for which the alert will be applied. Only used when type=repository."
                      },
                      "triggers": {
                        "type": "object",
                        "items": {
                          "type": "object",
                          "required": [
                            "unscanned",
                            "analysis_update",
                            "vuln_update",
                            "policy_eval"
                          ],
                          "properties": {
                            "unscanned": {
                              "type": "boolean",
                              "description": "True if the alert should trigger for unscanned images. Only used when type=runtime."
                            },
                            "analysis_update": {
                              "type": "boolean",
                              "description": "True if the alert should trigger when a new image is analyzed. Only used when type=repository."
                            },
                            "vuln_update": {
                              "type": "boolean",
                              "description": "True if the alert should trigger if the set of vulnerabilities for an image changes."
                            },
                            "policy_eval": {
                              "type": "boolean",
                              "description": "True if the alert should trigger when the final result of the policy evaluation for a policy changes."
                            }
                          }
                        }
                      },
                      "autoscan": {
                        "type": "boolean",
                        "description": "True if the alert should automatically analyze unscanned images."
                      },
                      "onlyPassFail": {
                        "type": "boolean",
                        "description": "True if the policy_eval trigger should activate only when the result changes from pass to fail."
                      },
                      "notificationChannelIds": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/alerts\"\n\n\tpayload := strings.NewReader(\"{\\\"alertId\\\":\\\"string\\\",\\\"enabled\\\":true,\\\"name\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"type\\\":\\\"runtime\\\",\\\"scope\\\":\\\"string\\\",\\\"repositories\\\":[{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"}],\\\"triggers\\\":{},\\\"autoscan\\\":true,\\\"onlyPassFail\\\":true,\\\"notificationChannelIds\\\":[0]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/v1/alerts \\\n  --header 'content-type: application/json' \\\n  --data '{\"alertId\":\"string\",\"enabled\":true,\"name\":\"string\",\"description\":\"string\",\"type\":\"runtime\",\"scope\":\"string\",\"repositories\":[{\"registry\":\"string\",\"repository\":\"string\",\"tag\":\"string\"}],\"triggers\":{},\"autoscan\":true,\"onlyPassFail\":true,\"notificationChannelIds\":[0]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/v1/alerts',\n  headers: {'content-type': 'application/json'},\n  body: {\n    alertId: 'string',\n    enabled: true,\n    name: 'string',\n    description: 'string',\n    type: 'runtime',\n    scope: 'string',\n    repositories: [{registry: 'string', repository: 'string', tag: 'string'}],\n    triggers: {},\n    autoscan: true,\n    onlyPassFail: true,\n    notificationChannelIds: [0]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/v1/alerts\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"alertId\\\":\\\"string\\\",\\\"enabled\\\":true,\\\"name\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"type\\\":\\\"runtime\\\",\\\"scope\\\":\\\"string\\\",\\\"repositories\\\":[{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"}],\\\"triggers\\\":{},\\\"autoscan\\\":true,\\\"onlyPassFail\\\":true,\\\"notificationChannelIds\\\":[0]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"alertId\\\":\\\"string\\\",\\\"enabled\\\":true,\\\"name\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"type\\\":\\\"runtime\\\",\\\"scope\\\":\\\"string\\\",\\\"repositories\\\":[{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"}],\\\"triggers\\\":{},\\\"autoscan\\\":true,\\\"onlyPassFail\\\":true,\\\"notificationChannelIds\\\":[0]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/v1/alerts\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/alerts/{id}": {
        "get": {
          "summary": "Retrieve the scanning alert with the given id",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The scanning alert with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name",
                      "type",
                      "enabled",
                      "autoscan",
                      "triggers",
                      "notificationChannelIds"
                    ],
                    "properties": {
                      "alertId": {
                        "type": "string",
                        "description": "Unique identifier associated with this alert. It's created backend side.\n"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether this alert should actually be applied."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the alert."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the alert."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the alert.",
                        "enum": [
                          "runtime",
                          "repository"
                        ]
                      },
                      "scope": {
                        "type": "string",
                        "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied. Only used when type=runtime."
                      },
                      "repositories": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "registry",
                            "repository",
                            "tag"
                          ],
                          "properties": {
                            "registry": {
                              "type": "string",
                              "description": "The image registry."
                            },
                            "repository": {
                              "type": "string",
                              "description": "The image repository."
                            },
                            "tag": {
                              "type": "string",
                              "description": "The image tag."
                            }
                          }
                        },
                        "description": "The list of images for which the alert will be applied. Only used when type=repository."
                      },
                      "triggers": {
                        "type": "object",
                        "items": {
                          "type": "object",
                          "required": [
                            "unscanned",
                            "analysis_update",
                            "vuln_update",
                            "policy_eval"
                          ],
                          "properties": {
                            "unscanned": {
                              "type": "boolean",
                              "description": "True if the alert should trigger for unscanned images. Only used when type=runtime."
                            },
                            "analysis_update": {
                              "type": "boolean",
                              "description": "True if the alert should trigger when a new image is analyzed. Only used when type=repository."
                            },
                            "vuln_update": {
                              "type": "boolean",
                              "description": "True if the alert should trigger if the set of vulnerabilities for an image changes."
                            },
                            "policy_eval": {
                              "type": "boolean",
                              "description": "True if the alert should trigger when the final result of the policy evaluation for a policy changes."
                            }
                          }
                        }
                      },
                      "autoscan": {
                        "type": "boolean",
                        "description": "True if the alert should automatically analyze unscanned images."
                      },
                      "onlyPassFail": {
                        "type": "boolean",
                        "description": "True if the policy_eval trigger should activate only when the result changes from pass to fail."
                      },
                      "notificationChannelIds": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Alert not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/alerts/%7Bid%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the alert with the given id",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "name",
                    "type",
                    "enabled",
                    "autoscan",
                    "triggers",
                    "notificationChannelIds"
                  ],
                  "properties": {
                    "alertId": {
                      "type": "string",
                      "description": "Unique identifier associated with this alert. It's created backend side.\n"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether this alert should actually be applied."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the alert."
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of the alert."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the alert.",
                      "enum": [
                        "runtime",
                        "repository"
                      ]
                    },
                    "scope": {
                      "type": "string",
                      "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied. Only used when type=runtime."
                    },
                    "repositories": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "registry",
                          "repository",
                          "tag"
                        ],
                        "properties": {
                          "registry": {
                            "type": "string",
                            "description": "The image registry."
                          },
                          "repository": {
                            "type": "string",
                            "description": "The image repository."
                          },
                          "tag": {
                            "type": "string",
                            "description": "The image tag."
                          }
                        }
                      },
                      "description": "The list of images for which the alert will be applied. Only used when type=repository."
                    },
                    "triggers": {
                      "type": "object",
                      "items": {
                        "type": "object",
                        "required": [
                          "unscanned",
                          "analysis_update",
                          "vuln_update",
                          "policy_eval"
                        ],
                        "properties": {
                          "unscanned": {
                            "type": "boolean",
                            "description": "True if the alert should trigger for unscanned images. Only used when type=runtime."
                          },
                          "analysis_update": {
                            "type": "boolean",
                            "description": "True if the alert should trigger when a new image is analyzed. Only used when type=repository."
                          },
                          "vuln_update": {
                            "type": "boolean",
                            "description": "True if the alert should trigger if the set of vulnerabilities for an image changes."
                          },
                          "policy_eval": {
                            "type": "boolean",
                            "description": "True if the alert should trigger when the final result of the policy evaluation for a policy changes."
                          }
                        }
                      }
                    },
                    "autoscan": {
                      "type": "boolean",
                      "description": "True if the alert should automatically analyze unscanned images."
                    },
                    "onlyPassFail": {
                      "type": "boolean",
                      "description": "True if the policy_eval trigger should activate only when the result changes from pass to fail."
                    },
                    "notificationChannelIds": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The updated alert",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name",
                      "type",
                      "enabled",
                      "autoscan",
                      "triggers",
                      "notificationChannelIds"
                    ],
                    "properties": {
                      "alertId": {
                        "type": "string",
                        "description": "Unique identifier associated with this alert. It's created backend side.\n"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether this alert should actually be applied."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the alert."
                      },
                      "description": {
                        "type": "string",
                        "description": "The description of the alert."
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the alert.",
                        "enum": [
                          "runtime",
                          "repository"
                        ]
                      },
                      "scope": {
                        "type": "string",
                        "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied. Only used when type=runtime."
                      },
                      "repositories": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "registry",
                            "repository",
                            "tag"
                          ],
                          "properties": {
                            "registry": {
                              "type": "string",
                              "description": "The image registry."
                            },
                            "repository": {
                              "type": "string",
                              "description": "The image repository."
                            },
                            "tag": {
                              "type": "string",
                              "description": "The image tag."
                            }
                          }
                        },
                        "description": "The list of images for which the alert will be applied. Only used when type=repository."
                      },
                      "triggers": {
                        "type": "object",
                        "items": {
                          "type": "object",
                          "required": [
                            "unscanned",
                            "analysis_update",
                            "vuln_update",
                            "policy_eval"
                          ],
                          "properties": {
                            "unscanned": {
                              "type": "boolean",
                              "description": "True if the alert should trigger for unscanned images. Only used when type=runtime."
                            },
                            "analysis_update": {
                              "type": "boolean",
                              "description": "True if the alert should trigger when a new image is analyzed. Only used when type=repository."
                            },
                            "vuln_update": {
                              "type": "boolean",
                              "description": "True if the alert should trigger if the set of vulnerabilities for an image changes."
                            },
                            "policy_eval": {
                              "type": "boolean",
                              "description": "True if the alert should trigger when the final result of the policy evaluation for a policy changes."
                            }
                          }
                        }
                      },
                      "autoscan": {
                        "type": "boolean",
                        "description": "True if the alert should automatically analyze unscanned images."
                      },
                      "onlyPassFail": {
                        "type": "boolean",
                        "description": "True if the policy_eval trigger should activate only when the result changes from pass to fail."
                      },
                      "notificationChannelIds": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Alert not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"alertId\\\":\\\"string\\\",\\\"enabled\\\":true,\\\"name\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"type\\\":\\\"runtime\\\",\\\"scope\\\":\\\"string\\\",\\\"repositories\\\":[{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"}],\\\"triggers\\\":{},\\\"autoscan\\\":true,\\\"onlyPassFail\\\":true,\\\"notificationChannelIds\\\":[0]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"alertId\":\"string\",\"enabled\":true,\"name\":\"string\",\"description\":\"string\",\"type\":\"runtime\",\"scope\":\"string\",\"repositories\":[{\"registry\":\"string\",\"repository\":\"string\",\"tag\":\"string\"}],\"triggers\":{},\"autoscan\":true,\"onlyPassFail\":true,\"notificationChannelIds\":[0]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D',\n  headers: {'content-type': 'application/json'},\n  body: {\n    alertId: 'string',\n    enabled: true,\n    name: 'string',\n    description: 'string',\n    type: 'runtime',\n    scope: 'string',\n    repositories: [{registry: 'string', repository: 'string', tag: 'string'}],\n    triggers: {},\n    autoscan: true,\n    onlyPassFail: true,\n    notificationChannelIds: [0]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"alertId\\\":\\\"string\\\",\\\"enabled\\\":true,\\\"name\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"type\\\":\\\"runtime\\\",\\\"scope\\\":\\\"string\\\",\\\"repositories\\\":[{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"}],\\\"triggers\\\":{},\\\"autoscan\\\":true,\\\"onlyPassFail\\\":true,\\\"notificationChannelIds\\\":[0]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"alertId\\\":\\\"string\\\",\\\"enabled\\\":true,\\\"name\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"type\\\":\\\"runtime\\\",\\\"scope\\\":\\\"string\\\",\\\"repositories\\\":[{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"}],\\\"triggers\\\":{},\\\"autoscan\\\":true,\\\"onlyPassFail\\\":true,\\\"notificationChannelIds\\\":[0]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/alerts/%7Bid%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete the scanning alert with the given id",
          "tags": [
            "Scanning"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Alert deleted"
            },
            "404": {
              "description": "Alert not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/scanning/v1/alerts/%7Bid%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/scanning/v1/alerts/%7Bid%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/query/containers": {
        "post": {
          "summary": "Retrieve the list of runtime images in the selected scope, time and container range.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "scope",
                    "time",
                    "skipPolicyEvaluation"
                  ],
                  "properties": {
                    "scope": {
                      "type": "string",
                      "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied."
                    },
                    "time": {
                      "type": "object",
                      "description": "The selected time range (unix timestamp, microseconds)",
                      "properties": {
                        "from": {
                          "type": "integer"
                        },
                        "to": {
                          "type": "integer"
                        }
                      }
                    },
                    "skipPolicyEvaluation": {
                      "type": "boolean",
                      "description": "If true, no policy evaluations will be triggered for the images."
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The list of requested runtime images",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "scope": {
                        "type": "string"
                      },
                      "time": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "integer"
                          },
                          "to": {
                            "type": "integer"
                          }
                        }
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "imageId": {
                              "type": "string"
                            },
                            "repo": {
                              "type": "string"
                            },
                            "tag": {
                              "type": "string"
                            },
                            "digest": {
                              "type": "string"
                            },
                            "parentDigest": {
                              "type": "string"
                            },
                            "analysisStatus": {
                              "type": "string"
                            },
                            "policyEvalStatus": {
                              "type": "string"
                            },
                            "containers": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "containerId": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/query/containers\"\n\n\tpayload := strings.NewReader(\"{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0},\\\"skipPolicyEvaluation\\\":true}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/v1/query/containers \\\n  --header 'content-type: application/json' \\\n  --data '{\"scope\":\"string\",\"time\":{\"from\":0,\"to\":0},\"skipPolicyEvaluation\":true}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/v1/query/containers',\n  headers: {'content-type': 'application/json'},\n  body: {scope: 'string', time: {from: 0, to: 0}, skipPolicyEvaluation: true},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/v1/query/containers\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0},\\\"skipPolicyEvaluation\\\":true}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0},\\\"skipPolicyEvaluation\\\":true}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/v1/query/containers\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/reports": {
        "post": {
          "summary": "Generate a report based on the given scope and conditions.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "queryType",
                    "scopeType"
                  ],
                  "properties": {
                    "queryType": {
                      "type": "string",
                      "description": "Generate the report based on the given query type.",
                      "enum": [
                        "image",
                        "vuln",
                        "pkg",
                        "policies"
                      ]
                    },
                    "scopeType": {
                      "type": "string",
                      "description": "Filter the results based on the given scope.",
                      "enum": [
                        "runtime",
                        "static"
                      ]
                    },
                    "runtimeScope": {
                      "type": "object",
                      "required": [
                        "scope"
                      ],
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied."
                        },
                        "time": {
                          "type": "object",
                          "description": "The selected time range (unix timestamp, microseconds)",
                          "properties": {
                            "from": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "staticScope": {
                      "type": "object",
                      "properties": {
                        "registry": {
                          "type": "string",
                          "description": "Filter the results based on the registry name."
                        },
                        "repository": {
                          "type": "string",
                          "description": "Filter the results based on the repository name."
                        },
                        "tag": {
                          "type": "string",
                          "description": "Filter the results based on the given image tag."
                        }
                      }
                    },
                    "vulnQueryFilter": {
                      "type": "object",
                      "properties": {
                        "vulnId": {
                          "type": "string",
                          "description": "Filter the results based on the vulnerability ID."
                        },
                        "age": {
                          "type": "object",
                          "description": "The selected time range (value as specified by iso8601)",
                          "properties": {
                            "from": {
                              "type": "string",
                              "example": "2019-07-31T00:00:00-07:00"
                            },
                            "to": {
                              "type": "string",
                              "example": "2019-08-02T20:15:24-07:00"
                            }
                          }
                        },
                        "severity": {
                          "type": "string",
                          "description": "Filter the results based on the vulnerability severity.",
                          "enum": [
                            "Critical",
                            "High",
                            "Medium",
                            "Low",
                            "Negligible",
                            "Unknown"
                          ]
                        },
                        "fixAvailable": {
                          "type": "string",
                          "description": "Filter the results based on vulnerabolity with fixes."
                        },
                        "pkgName": {
                          "type": "string",
                          "description": "Filter the results based on the given package name."
                        },
                        "pkgVersion": {
                          "type": "string",
                          "description": "Filter the results based on the given package version."
                        }
                      }
                    },
                    "pkgQueryFilter": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Filter the results based on the given package name."
                        },
                        "version": {
                          "type": "string",
                          "description": "Filter the results based on the given package version."
                        }
                      }
                    },
                    "policyQueryFilter": {
                      "type": "object",
                      "properties": {
                        "imageDigest": {
                          "type": "string",
                          "description": "Filter the results based on image digest"
                        },
                        "result": {
                          "type": "string",
                          "description": "Filter the results based on the result of a policy evaluation.",
                          "enum": [
                            "pass",
                            "fail"
                          ]
                        },
                        "lastEvaluatedAfter": {
                          "type": "string",
                          "description": "Timestamp value for policy evaluation (value as specified by iso8601). Show all the policy evaluations after this timestamp.",
                          "example": "2019-07-15T14:47:08-07:00"
                        },
                        "lastEvaluatedBefore": {
                          "type": "string",
                          "description": "Timestamp value for policy evaluation (value as specified by iso8601) Show all the policy evaluations before this timestamp.",
                          "example": "2019-07-15T14:47:08-07:00"
                        }
                      }
                    },
                    "sort": {
                      "description": "Sorting method. Defaults to descendent.",
                      "type": "string",
                      "enum": [
                        "desc",
                        "asc"
                      ]
                    },
                    "sortBy": {
                      "type": "string",
                      "description": "Field used to determine sorting column. Defaults to severity.",
                      "enum": [
                        "imageName",
                        "tag",
                        "vulnId",
                        "fixedIn",
                        "severity",
                        "pkgName",
                        "pkgVersion",
                        "evaluationDate",
                        "bundleId",
                        "result"
                      ]
                    },
                    "offset": {
                      "type": "integer",
                      "description": "If specified, a 0-based index on the list. Only entries >= offset will be retrieved. Defaults to 0."
                    },
                    "limit": {
                      "type": "integer",
                      "description": "If specified, a limit on the number of entries retrieved. limit must be >= 1 and if it overflows the list all entries will be retrieved."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The string on which the results are to be filtered."
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The report was generated successfully for given conditions.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "imageQueryResponse": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "imageName": {
                              "type": "string"
                            },
                            "vulnId": {
                              "type": "string"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "age": {
                              "type": "integer"
                            },
                            "pkgName": {
                              "type": "string"
                            },
                            "pkgVersion": {
                              "type": "string"
                            },
                            "tag": {
                              "type": "string"
                            },
                            "fixedIn": {
                              "type": "string"
                            },
                            "depName": {
                              "type": "string"
                            },
                            "depVersion": {
                              "type": "string"
                            },
                            "runtime": {
                              "type": "object",
                              "properties": {
                                "clusterName": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                },
                                "deployment": {
                                  "type": "string"
                                },
                                "pod": {
                                  "type": "string"
                                },
                                "hostname": {
                                  "type": "string"
                                },
                                "containerLabels": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "vulnQueryResponse": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "vulnId": {
                              "type": "string"
                            },
                            "severity": {
                              "type": "string"
                            },
                            "age": {
                              "type": "integer"
                            },
                            "pkgName": {
                              "type": "string"
                            },
                            "pkgVersion": {
                              "type": "string"
                            },
                            "tag": {
                              "type": "string"
                            },
                            "fixedIn": {
                              "type": "string"
                            },
                            "imageName": {
                              "type": "string"
                            },
                            "depName": {
                              "type": "string"
                            },
                            "depVersion": {
                              "type": "string"
                            },
                            "runtime": {
                              "type": "object",
                              "properties": {
                                "clusterName": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                },
                                "deployment": {
                                  "type": "string"
                                },
                                "pod": {
                                  "type": "string"
                                },
                                "hostname": {
                                  "type": "string"
                                },
                                "containerLabels": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "pkgQueryResponse": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pkgName": {
                              "type": "string"
                            },
                            "pkgVersion": {
                              "type": "string"
                            },
                            "imageNames": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "vulnIds": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "runtime": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "clusterName": {
                                    "type": "string"
                                  },
                                  "namespace": {
                                    "type": "string"
                                  },
                                  "deployment": {
                                    "type": "string"
                                  },
                                  "pod": {
                                    "type": "string"
                                  },
                                  "hostname": {
                                    "type": "string"
                                  },
                                  "containerLabels": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "policyQueryResponse": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "imageName": {
                              "type": "string"
                            },
                            "tag": {
                              "type": "string"
                            },
                            "result": {
                              "type": "string"
                            },
                            "policyId": {
                              "type": "string"
                            },
                            "evaluationDate": {
                              "type": "string"
                            },
                            "finalAction": {
                              "type": "string"
                            },
                            "imageDigest": {
                              "type": "string"
                            },
                            "runtime": {
                              "type": "object",
                              "properties": {
                                "clusterName": {
                                  "type": "string"
                                },
                                "namespace": {
                                  "type": "string"
                                },
                                "deployment": {
                                  "type": "string"
                                },
                                "pod": {
                                  "type": "string"
                                },
                                "hostname": {
                                  "type": "string"
                                },
                                "containerLabels": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "sort": {
                        "type": "string",
                        "description": "The sorting method used"
                      },
                      "sortBy": {
                        "type": "string",
                        "description": "The field used to sort the result"
                      },
                      "offset": {
                        "type": "integer",
                        "description": "The start offset used"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit used. Must be >= 1."
                      },
                      "canLoadMore": {
                        "type": "boolean",
                        "description": "True if more results can be fetched."
                      },
                      "filter": {
                        "type": "string",
                        "description": "The string on which the results are to be filtered."
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The API was not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/reports\"\n\n\tpayload := strings.NewReader(\"{\\\"queryType\\\":\\\"image\\\",\\\"scopeType\\\":\\\"runtime\\\",\\\"runtimeScope\\\":{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0}},\\\"staticScope\\\":{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"},\\\"vulnQueryFilter\\\":{\\\"vulnId\\\":\\\"string\\\",\\\"age\\\":{\\\"from\\\":\\\"2019-07-31T00:00:00-07:00\\\",\\\"to\\\":\\\"2019-08-02T20:15:24-07:00\\\"},\\\"severity\\\":\\\"Critical\\\",\\\"fixAvailable\\\":\\\"string\\\",\\\"pkgName\\\":\\\"string\\\",\\\"pkgVersion\\\":\\\"string\\\"},\\\"pkgQueryFilter\\\":{\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\"},\\\"policyQueryFilter\\\":{\\\"imageDigest\\\":\\\"string\\\",\\\"result\\\":\\\"pass\\\",\\\"lastEvaluatedAfter\\\":\\\"2019-07-15T14:47:08-07:00\\\",\\\"lastEvaluatedBefore\\\":\\\"2019-07-15T14:47:08-07:00\\\"},\\\"sort\\\":\\\"desc\\\",\\\"sortBy\\\":\\\"imageName\\\",\\\"offset\\\":0,\\\"limit\\\":0,\\\"filter\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/v1/reports \\\n  --header 'content-type: application/json' \\\n  --data '{\"queryType\":\"image\",\"scopeType\":\"runtime\",\"runtimeScope\":{\"scope\":\"string\",\"time\":{\"from\":0,\"to\":0}},\"staticScope\":{\"registry\":\"string\",\"repository\":\"string\",\"tag\":\"string\"},\"vulnQueryFilter\":{\"vulnId\":\"string\",\"age\":{\"from\":\"2019-07-31T00:00:00-07:00\",\"to\":\"2019-08-02T20:15:24-07:00\"},\"severity\":\"Critical\",\"fixAvailable\":\"string\",\"pkgName\":\"string\",\"pkgVersion\":\"string\"},\"pkgQueryFilter\":{\"name\":\"string\",\"version\":\"string\"},\"policyQueryFilter\":{\"imageDigest\":\"string\",\"result\":\"pass\",\"lastEvaluatedAfter\":\"2019-07-15T14:47:08-07:00\",\"lastEvaluatedBefore\":\"2019-07-15T14:47:08-07:00\"},\"sort\":\"desc\",\"sortBy\":\"imageName\",\"offset\":0,\"limit\":0,\"filter\":\"string\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/v1/reports',\n  headers: {'content-type': 'application/json'},\n  body: {\n    queryType: 'image',\n    scopeType: 'runtime',\n    runtimeScope: {scope: 'string', time: {from: 0, to: 0}},\n    staticScope: {registry: 'string', repository: 'string', tag: 'string'},\n    vulnQueryFilter: {\n      vulnId: 'string',\n      age: {from: '2019-07-31T00:00:00-07:00', to: '2019-08-02T20:15:24-07:00'},\n      severity: 'Critical',\n      fixAvailable: 'string',\n      pkgName: 'string',\n      pkgVersion: 'string'\n    },\n    pkgQueryFilter: {name: 'string', version: 'string'},\n    policyQueryFilter: {\n      imageDigest: 'string',\n      result: 'pass',\n      lastEvaluatedAfter: '2019-07-15T14:47:08-07:00',\n      lastEvaluatedBefore: '2019-07-15T14:47:08-07:00'\n    },\n    sort: 'desc',\n    sortBy: 'imageName',\n    offset: 0,\n    limit: 0,\n    filter: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/v1/reports\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"queryType\\\":\\\"image\\\",\\\"scopeType\\\":\\\"runtime\\\",\\\"runtimeScope\\\":{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0}},\\\"staticScope\\\":{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"},\\\"vulnQueryFilter\\\":{\\\"vulnId\\\":\\\"string\\\",\\\"age\\\":{\\\"from\\\":\\\"2019-07-31T00:00:00-07:00\\\",\\\"to\\\":\\\"2019-08-02T20:15:24-07:00\\\"},\\\"severity\\\":\\\"Critical\\\",\\\"fixAvailable\\\":\\\"string\\\",\\\"pkgName\\\":\\\"string\\\",\\\"pkgVersion\\\":\\\"string\\\"},\\\"pkgQueryFilter\\\":{\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\"},\\\"policyQueryFilter\\\":{\\\"imageDigest\\\":\\\"string\\\",\\\"result\\\":\\\"pass\\\",\\\"lastEvaluatedAfter\\\":\\\"2019-07-15T14:47:08-07:00\\\",\\\"lastEvaluatedBefore\\\":\\\"2019-07-15T14:47:08-07:00\\\"},\\\"sort\\\":\\\"desc\\\",\\\"sortBy\\\":\\\"imageName\\\",\\\"offset\\\":0,\\\"limit\\\":0,\\\"filter\\\":\\\"string\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"queryType\\\":\\\"image\\\",\\\"scopeType\\\":\\\"runtime\\\",\\\"runtimeScope\\\":{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0}},\\\"staticScope\\\":{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"},\\\"vulnQueryFilter\\\":{\\\"vulnId\\\":\\\"string\\\",\\\"age\\\":{\\\"from\\\":\\\"2019-07-31T00:00:00-07:00\\\",\\\"to\\\":\\\"2019-08-02T20:15:24-07:00\\\"},\\\"severity\\\":\\\"Critical\\\",\\\"fixAvailable\\\":\\\"string\\\",\\\"pkgName\\\":\\\"string\\\",\\\"pkgVersion\\\":\\\"string\\\"},\\\"pkgQueryFilter\\\":{\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\"},\\\"policyQueryFilter\\\":{\\\"imageDigest\\\":\\\"string\\\",\\\"result\\\":\\\"pass\\\",\\\"lastEvaluatedAfter\\\":\\\"2019-07-15T14:47:08-07:00\\\",\\\"lastEvaluatedBefore\\\":\\\"2019-07-15T14:47:08-07:00\\\"},\\\"sort\\\":\\\"desc\\\",\\\"sortBy\\\":\\\"imageName\\\",\\\"offset\\\":0,\\\"limit\\\":0,\\\"filter\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/v1/reports\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/reports/csv": {
        "post": {
          "summary": "Generate a CSV formatted report based on the given scope and conditions.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "queryType",
                    "scopeType"
                  ],
                  "properties": {
                    "queryType": {
                      "type": "string",
                      "description": "Generate the report based on the given query type.",
                      "enum": [
                        "image",
                        "vuln",
                        "pkg",
                        "policies"
                      ]
                    },
                    "scopeType": {
                      "type": "string",
                      "description": "Filter the results based on the given scope.",
                      "enum": [
                        "runtime",
                        "static"
                      ]
                    },
                    "runtimeScope": {
                      "type": "object",
                      "required": [
                        "scope"
                      ],
                      "properties": {
                        "scope": {
                          "type": "string",
                          "description": "An AND-composed string of predicates that selects the scope in which the alert will be applied."
                        },
                        "time": {
                          "type": "object",
                          "description": "The selected time range (unix timestamp, microseconds)",
                          "properties": {
                            "from": {
                              "type": "integer"
                            },
                            "to": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    },
                    "staticScope": {
                      "type": "object",
                      "properties": {
                        "registry": {
                          "type": "string",
                          "description": "Filter the results based on the registry name."
                        },
                        "repository": {
                          "type": "string",
                          "description": "Filter the results based on the repository name."
                        },
                        "tag": {
                          "type": "string",
                          "description": "Filter the results based on the given image tag."
                        }
                      }
                    },
                    "vulnQueryFilter": {
                      "type": "object",
                      "properties": {
                        "vulnId": {
                          "type": "string",
                          "description": "Filter the results based on the vulnerability ID."
                        },
                        "age": {
                          "type": "object",
                          "description": "The selected time range (value as specified by iso8601)",
                          "properties": {
                            "from": {
                              "type": "string",
                              "example": "2019-07-31T00:00:00-07:00"
                            },
                            "to": {
                              "type": "string",
                              "example": "2019-08-02T20:15:24-07:00"
                            }
                          }
                        },
                        "severity": {
                          "type": "string",
                          "description": "Filter the results based on the vulnerability severity.",
                          "enum": [
                            "Critical",
                            "High",
                            "Medium",
                            "Low",
                            "Negligible",
                            "Unknown"
                          ]
                        },
                        "fixAvailable": {
                          "type": "string",
                          "description": "Filter the results based on vulnerabolity with fixes."
                        },
                        "pkgName": {
                          "type": "string",
                          "description": "Filter the results based on the given package name."
                        },
                        "pkgVersion": {
                          "type": "string",
                          "description": "Filter the results based on the given package version."
                        }
                      }
                    },
                    "pkgQueryFilter": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Filter the results based on the given package name."
                        },
                        "version": {
                          "type": "string",
                          "description": "Filter the results based on the given package version."
                        }
                      }
                    },
                    "policyQueryFilter": {
                      "type": "object",
                      "properties": {
                        "imageDigest": {
                          "type": "string",
                          "description": "Filter the results based on image digest"
                        },
                        "result": {
                          "type": "string",
                          "description": "Filter the results based on the result of a policy evaluation.",
                          "enum": [
                            "pass",
                            "fail"
                          ]
                        },
                        "lastEvaluatedAfter": {
                          "type": "string",
                          "description": "Timestamp value for policy evaluation (value as specified by iso8601). Show all the policy evaluations after this timestamp.",
                          "example": "2019-07-15T14:47:08-07:00"
                        },
                        "lastEvaluatedBefore": {
                          "type": "string",
                          "description": "Timestamp value for policy evaluation (value as specified by iso8601) Show all the policy evaluations before this timestamp.",
                          "example": "2019-07-15T14:47:08-07:00"
                        }
                      }
                    },
                    "sort": {
                      "description": "Sorting method. Defaults to descendent.",
                      "type": "string",
                      "enum": [
                        "desc",
                        "asc"
                      ]
                    },
                    "sortBy": {
                      "type": "string",
                      "description": "Field used to determine sorting column. Defaults to severity.",
                      "enum": [
                        "imageName",
                        "tag",
                        "vulnId",
                        "fixedIn",
                        "severity",
                        "pkgName",
                        "pkgVersion",
                        "evaluationDate",
                        "bundleId",
                        "result"
                      ]
                    },
                    "offset": {
                      "type": "integer",
                      "description": "If specified, a 0-based index on the list. Only entries >= offset will be retrieved. Defaults to 0."
                    },
                    "limit": {
                      "type": "integer",
                      "description": "If specified, a limit on the number of entries retrieved. limit must be >= 1 and if it overflows the list all entries will be retrieved."
                    },
                    "filter": {
                      "type": "string",
                      "description": "The string on which the results are to be filtered."
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The download request was received successfully.",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "string"
                  }
                }
              },
              "headers": {
                "content-disposition": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "string in the format of 'attachment; filename={year}{month}{day}-{queryType}-report.csv\"'"
                },
                "content-type": {
                  "schema": {
                    "type": "string"
                  },
                  "description": "text/csv"
                }
              }
            },
            "404": {
              "description": "The result was not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/reports/csv\"\n\n\tpayload := strings.NewReader(\"{\\\"queryType\\\":\\\"image\\\",\\\"scopeType\\\":\\\"runtime\\\",\\\"runtimeScope\\\":{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0}},\\\"staticScope\\\":{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"},\\\"vulnQueryFilter\\\":{\\\"vulnId\\\":\\\"string\\\",\\\"age\\\":{\\\"from\\\":\\\"2019-07-31T00:00:00-07:00\\\",\\\"to\\\":\\\"2019-08-02T20:15:24-07:00\\\"},\\\"severity\\\":\\\"Critical\\\",\\\"fixAvailable\\\":\\\"string\\\",\\\"pkgName\\\":\\\"string\\\",\\\"pkgVersion\\\":\\\"string\\\"},\\\"pkgQueryFilter\\\":{\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\"},\\\"policyQueryFilter\\\":{\\\"imageDigest\\\":\\\"string\\\",\\\"result\\\":\\\"pass\\\",\\\"lastEvaluatedAfter\\\":\\\"2019-07-15T14:47:08-07:00\\\",\\\"lastEvaluatedBefore\\\":\\\"2019-07-15T14:47:08-07:00\\\"},\\\"sort\\\":\\\"desc\\\",\\\"sortBy\\\":\\\"imageName\\\",\\\"offset\\\":0,\\\"limit\\\":0,\\\"filter\\\":\\\"string\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/v1/reports/csv \\\n  --header 'content-type: application/json' \\\n  --data '{\"queryType\":\"image\",\"scopeType\":\"runtime\",\"runtimeScope\":{\"scope\":\"string\",\"time\":{\"from\":0,\"to\":0}},\"staticScope\":{\"registry\":\"string\",\"repository\":\"string\",\"tag\":\"string\"},\"vulnQueryFilter\":{\"vulnId\":\"string\",\"age\":{\"from\":\"2019-07-31T00:00:00-07:00\",\"to\":\"2019-08-02T20:15:24-07:00\"},\"severity\":\"Critical\",\"fixAvailable\":\"string\",\"pkgName\":\"string\",\"pkgVersion\":\"string\"},\"pkgQueryFilter\":{\"name\":\"string\",\"version\":\"string\"},\"policyQueryFilter\":{\"imageDigest\":\"string\",\"result\":\"pass\",\"lastEvaluatedAfter\":\"2019-07-15T14:47:08-07:00\",\"lastEvaluatedBefore\":\"2019-07-15T14:47:08-07:00\"},\"sort\":\"desc\",\"sortBy\":\"imageName\",\"offset\":0,\"limit\":0,\"filter\":\"string\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/v1/reports/csv',\n  headers: {'content-type': 'application/json'},\n  body: {\n    queryType: 'image',\n    scopeType: 'runtime',\n    runtimeScope: {scope: 'string', time: {from: 0, to: 0}},\n    staticScope: {registry: 'string', repository: 'string', tag: 'string'},\n    vulnQueryFilter: {\n      vulnId: 'string',\n      age: {from: '2019-07-31T00:00:00-07:00', to: '2019-08-02T20:15:24-07:00'},\n      severity: 'Critical',\n      fixAvailable: 'string',\n      pkgName: 'string',\n      pkgVersion: 'string'\n    },\n    pkgQueryFilter: {name: 'string', version: 'string'},\n    policyQueryFilter: {\n      imageDigest: 'string',\n      result: 'pass',\n      lastEvaluatedAfter: '2019-07-15T14:47:08-07:00',\n      lastEvaluatedBefore: '2019-07-15T14:47:08-07:00'\n    },\n    sort: 'desc',\n    sortBy: 'imageName',\n    offset: 0,\n    limit: 0,\n    filter: 'string'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/v1/reports/csv\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"queryType\\\":\\\"image\\\",\\\"scopeType\\\":\\\"runtime\\\",\\\"runtimeScope\\\":{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0}},\\\"staticScope\\\":{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"},\\\"vulnQueryFilter\\\":{\\\"vulnId\\\":\\\"string\\\",\\\"age\\\":{\\\"from\\\":\\\"2019-07-31T00:00:00-07:00\\\",\\\"to\\\":\\\"2019-08-02T20:15:24-07:00\\\"},\\\"severity\\\":\\\"Critical\\\",\\\"fixAvailable\\\":\\\"string\\\",\\\"pkgName\\\":\\\"string\\\",\\\"pkgVersion\\\":\\\"string\\\"},\\\"pkgQueryFilter\\\":{\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\"},\\\"policyQueryFilter\\\":{\\\"imageDigest\\\":\\\"string\\\",\\\"result\\\":\\\"pass\\\",\\\"lastEvaluatedAfter\\\":\\\"2019-07-15T14:47:08-07:00\\\",\\\"lastEvaluatedBefore\\\":\\\"2019-07-15T14:47:08-07:00\\\"},\\\"sort\\\":\\\"desc\\\",\\\"sortBy\\\":\\\"imageName\\\",\\\"offset\\\":0,\\\"limit\\\":0,\\\"filter\\\":\\\"string\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"queryType\\\":\\\"image\\\",\\\"scopeType\\\":\\\"runtime\\\",\\\"runtimeScope\\\":{\\\"scope\\\":\\\"string\\\",\\\"time\\\":{\\\"from\\\":0,\\\"to\\\":0}},\\\"staticScope\\\":{\\\"registry\\\":\\\"string\\\",\\\"repository\\\":\\\"string\\\",\\\"tag\\\":\\\"string\\\"},\\\"vulnQueryFilter\\\":{\\\"vulnId\\\":\\\"string\\\",\\\"age\\\":{\\\"from\\\":\\\"2019-07-31T00:00:00-07:00\\\",\\\"to\\\":\\\"2019-08-02T20:15:24-07:00\\\"},\\\"severity\\\":\\\"Critical\\\",\\\"fixAvailable\\\":\\\"string\\\",\\\"pkgName\\\":\\\"string\\\",\\\"pkgVersion\\\":\\\"string\\\"},\\\"pkgQueryFilter\\\":{\\\"name\\\":\\\"string\\\",\\\"version\\\":\\\"string\\\"},\\\"policyQueryFilter\\\":{\\\"imageDigest\\\":\\\"string\\\",\\\"result\\\":\\\"pass\\\",\\\"lastEvaluatedAfter\\\":\\\"2019-07-15T14:47:08-07:00\\\",\\\"lastEvaluatedBefore\\\":\\\"2019-07-15T14:47:08-07:00\\\"},\\\"sort\\\":\\\"desc\\\",\\\"sortBy\\\":\\\"imageName\\\",\\\"offset\\\":0,\\\"limit\\\":0,\\\"filter\\\":\\\"string\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/v1/reports/csv\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/results": {
        "get": {
          "summary": "Fetches all scanning results",
          "description": "Fetches all scanning results",
          "parameters": [
            {
              "name": "filter",
              "in": "query",
              "description": "If specified, only scan results that contain this substring will be retrieved",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sorting method. Defaults to descending.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "desc",
                  "asc"
                ]
              }
            },
            {
              "name": "sortBy",
              "in": "query",
              "description": "Field used to alphabetically sort by. Defaults to scanDate.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "repository",
                  "tag",
                  "digest",
                  "scanDate"
                ]
              }
            },
            {
              "name": "registry",
              "in": "query",
              "description": "A comma-separated list of registry display names. If specified, only scan results from these registries will be retrieved",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "If specified, a 0-based index on the scan results list. Only entries >= offset will be retrieved. Defaults to 0. If filter is also specified, this index will be applied on the filtered list. An empty list will be retrieved if this index overflows the list.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "If specified, a limit on the number of entries retrieved. If filter is also specified, the limit will be applied on the filtered list. limit must be >= 1 and if it overflows the list all entries will be retrieved.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "an array of scan results matching the provided filters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "options": {
                        "type": "object",
                        "properties": {
                          "filter": {
                            "type": "string",
                            "description": "The string on which the results are to be filtered."
                          },
                          "registry": {
                            "type": "string",
                            "description": "A comma seperated list of registries to filter by"
                          },
                          "sort": {
                            "type": "string",
                            "description": "The sort direction (default desc)",
                            "enum": [
                              "asc",
                              "desc"
                            ]
                          },
                          "sortBy": {
                            "type": "string",
                            "description": "The field used to sort the result",
                            "enum": [
                              "repository",
                              "tag",
                              "digest",
                              "scanDate"
                            ]
                          },
                          "offset": {
                            "type": "integer",
                            "description": "The start offset used"
                          },
                          "limit": {
                            "type": "integer",
                            "description": "The limit used. Must be >= 1."
                          },
                          "canLoadMore": {
                            "type": "boolean",
                            "description": "True if more results can be fetched."
                          }
                        }
                      },
                      "totalRows": {
                        "type": "integer",
                        "description": "The total number of images scanned"
                      },
                      "metadata": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "integer",
                            "description": "The total number of images scanned"
                          },
                          "policyStatus": {
                            "type": "object",
                            "properties": {
                              "totalFailed": {
                                "type": "integer",
                                "description": "The total number of images that are NOT pass the evaluation"
                              },
                              "totalPassed": {
                                "type": "integer",
                                "description": "The total number of images that are pass the evaluation"
                              }
                            }
                          },
                          "origins": {
                            "type": "object",
                            "properties": {
                              "sysdig-cli": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "sysdig-secure-ui": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "sysdig-runtime-alert": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "sysdig-inline-scanner": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "sysdig-node-image-analyzer": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "sysdig-admission-controller": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "cicd-scan-request": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "cicd-inline-scan": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "aws-registry": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              },
                              "aws-fargate": {
                                "type": "number",
                                "description": "The total images that has this specific origin"
                              }
                            }
                          },
                          "allRegistries": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "list of the all possible registry in all image scanned"
                            }
                          },
                          "allOrigins": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "list of the all possible origins in all image scanned"
                            }
                          }
                        }
                      },
                      "results": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "analysisStatus": {
                              "type": "string",
                              "description": "The current analysis status"
                            },
                            "analyzedAt": {
                              "type": "integer",
                              "description": "The timestamp when analysis was comleted"
                            },
                            "createdAt": {
                              "type": "integer",
                              "description": "The timestamp when the analysis request was created"
                            },
                            "fullTag": {
                              "type": "string",
                              "description": "The full tag of the image including registry, repository and tag"
                            },
                            "imageDigest": {
                              "type": "string",
                              "description": "The image digest"
                            },
                            "imageId": {
                              "type": "string",
                              "description": "The image id"
                            },
                            "parentDigest": {
                              "type": "string",
                              "description": "The parent image digest"
                            },
                            "tagDetectedAt": {
                              "type": "string",
                              "description": "The timestamp when tag was detected"
                            },
                            "registry": {
                              "type": "string",
                              "description": "The image registry as derived from the fullTag"
                            },
                            "repository": {
                              "type": "string",
                              "description": "The image repository as derived from the fullTag"
                            },
                            "tag": {
                              "type": "string",
                              "description": "The image tag as derived from the fullTag"
                            },
                            "displayRegistry": {
                              "type": "string",
                              "description": "The display name configured for the registry as derived from the fullTag"
                            },
                            "origin": {
                              "type": "string",
                              "description": "The image origin"
                            },
                            "policyStatus": {
                              "type": "string",
                              "description": "The image origin"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "An invalid request was provided"
            },
            "500": {
              "description": "Internal server error, not due to request parameters"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/results?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&registry=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/scanning/v1/results?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&registry=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/results',\n  qs: {\n    filter: 'SOME_STRING_VALUE',\n    sort: 'SOME_STRING_VALUE',\n    sortBy: 'SOME_STRING_VALUE',\n    registry: 'SOME_STRING_VALUE',\n    offset: 'SOME_INTEGER_VALUE',\n    limit: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/results?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&registry=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/results?filter=SOME_STRING_VALUE&sort=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&registry=SOME_STRING_VALUE&offset=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/retention/policy": {
        "get": {
          "summary": "Retrieve the retention policy",
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The retention policy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "datePolicy",
                      "tagsPolicy"
                    ],
                    "properties": {
                      "datePolicy": {
                        "type": "integer",
                        "description": "Date policy in seconds. By default, the range is between 30 and 90 days (in seconds)",
                        "example": 2592000
                      },
                      "tagsPolicy": {
                        "type": "integer",
                        "description": "Tags policy. Number of tags that triggers the retention policy",
                        "example": 5
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Unable to retrieve retention policy for the customer"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/retention/policy\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/retention/policy"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/retention/policy'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/retention/policy\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/retention/policy\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update retention policy",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "datePolicy",
                    "tagsPolicy"
                  ],
                  "properties": {
                    "datePolicy": {
                      "type": "integer",
                      "description": "Date policy in seconds. By default, the range is between 30 and 90 days (in seconds)",
                      "example": 2592000
                    },
                    "tagsPolicy": {
                      "type": "integer",
                      "description": "Tags policy. Number of tags that triggers the retention policy",
                      "example": 5
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Scanning"
          ],
          "responses": {
            "200": {
              "description": "The retention policy was successfully updated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "datePolicy",
                      "tagsPolicy"
                    ],
                    "properties": {
                      "datePolicy": {
                        "type": "integer",
                        "description": "Date policy in seconds. By default, the range is between 30 and 90 days (in seconds)",
                        "example": 2592000
                      },
                      "tagsPolicy": {
                        "type": "integer",
                        "description": "Tags policy. Number of tags that triggers the retention policy",
                        "example": 5
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The retention policy was not updated"
            },
            "500": {
              "description": "Internal server error, not due to request parameters"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/retention/policy\"\n\n\tpayload := strings.NewReader(\"{\\\"datePolicy\\\":2592000,\\\"tagsPolicy\\\":5}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/scanning/v1/retention/policy \\\n  --header 'content-type: application/json' \\\n  --data '{\"datePolicy\":2592000,\"tagsPolicy\":5}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/retention/policy',\n  headers: {'content-type': 'application/json'},\n  body: {datePolicy: 2592000, tagsPolicy: 5},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/retention/policy\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"datePolicy\\\":2592000,\\\"tagsPolicy\\\":5}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"datePolicy\\\":2592000,\\\"tagsPolicy\\\":5}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/retention/policy\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/onboarding": {
        "get": {
          "summary": "Fetch secure onboarding steps' status",
          "description": "fetches secure specific onboarding steps",
          "tags": [
            "Onboarding"
          ],
          "responses": {
            "200": {
              "description": "map with completion status of each step specific to customer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "customerId",
                      "status"
                    ],
                    "properties": {
                      "customerId": {
                        "type": "number",
                        "description": "Id related to customer record in which these steps belong",
                        "example": 1
                      },
                      "product": {
                        "type": "string",
                        "example": "SDS",
                        "description": "provided product id to remain consistent with other monitor requests"
                      },
                      "status": {
                        "type": "object",
                        "properties": {
                          "agentConnected": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "k8sAuditEnabled": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "notificationChannelLinked": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "detectionRuleCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "inlineScanImported": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "scanningAlertRuntimeCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "scanningAlertRepositoryCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "cloudAccountConnected": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "teamMemberInvited": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "benchmarkTaskCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No record found for customerId"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/onboarding\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/onboarding"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/scanning/v1/onboarding'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/onboarding\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/onboarding\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/onboarding/{customerId}": {
        "get": {
          "summary": "Fetch customer secure onboarding steps' status",
          "description": "Admin api for fetching completion status for secure steps for customer",
          "tags": [
            "Onboarding"
          ],
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "admin endpoint for getting steps specific to secure + customer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "customerId",
                      "status"
                    ],
                    "properties": {
                      "customerId": {
                        "type": "number",
                        "description": "Id related to customer record in which these steps belong",
                        "example": 1
                      },
                      "product": {
                        "type": "string",
                        "example": "SDS",
                        "description": "provided product id to remain consistent with other monitor requests"
                      },
                      "status": {
                        "type": "object",
                        "properties": {
                          "agentConnected": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "k8sAuditEnabled": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "notificationChannelLinked": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "detectionRuleCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "inlineScanImported": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "scanningAlertRuntimeCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "scanningAlertRepositoryCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "cloudAccountConnected": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "teamMemberInvited": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "benchmarkTaskCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No record found for customerId"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/onboarding/%7BcustomerId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Create or update customer secure onboarding steps' status",
          "description": "Admin endpoint for creating or updating secure specific onboarding steps for customer",
          "tags": [
            "Onboarding"
          ],
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "description": "One or more updated completion states for onboarding steps in secure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "customerId",
                    "status"
                  ],
                  "properties": {
                    "customerId": {
                      "type": "number",
                      "description": "Id related to customer record in which these steps belong",
                      "example": 1
                    },
                    "product": {
                      "type": "string",
                      "example": "SDS",
                      "description": "provided product id to remain consistent with other monitor requests"
                    },
                    "status": {
                      "type": "object",
                      "properties": {
                        "agentConnected": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "k8sAuditEnabled": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "notificationChannelLinked": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "detectionRuleCreated": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "inlineScanImported": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "scanningAlertRuntimeCreated": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "scanningAlertRepositoryCreated": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "cloudAccountConnected": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "teamMemberInvited": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        },
                        "benchmarkTaskCreated": {
                          "type": "string",
                          "enum": [
                            "INCOMPLETE",
                            "COMPLETED",
                            "SKIPPED",
                            "FAILED"
                          ],
                          "example": "INCOMPLETE"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "admin endpoint for updating onboarding steps specific to secure + customer.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "customerId",
                      "status"
                    ],
                    "properties": {
                      "customerId": {
                        "type": "number",
                        "description": "Id related to customer record in which these steps belong",
                        "example": 1
                      },
                      "product": {
                        "type": "string",
                        "example": "SDS",
                        "description": "provided product id to remain consistent with other monitor requests"
                      },
                      "status": {
                        "type": "object",
                        "properties": {
                          "agentConnected": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "k8sAuditEnabled": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "notificationChannelLinked": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "detectionRuleCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "inlineScanImported": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "scanningAlertRuntimeCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "scanningAlertRepositoryCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "cloudAccountConnected": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "teamMemberInvited": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          },
                          "benchmarkTaskCreated": {
                            "type": "string",
                            "enum": [
                              "INCOMPLETE",
                              "COMPLETED",
                              "SKIPPED",
                              "FAILED"
                            ],
                            "example": "INCOMPLETE"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "No record found for customerId"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"customerId\\\":1,\\\"product\\\":\\\"SDS\\\",\\\"status\\\":{\\\"agentConnected\\\":\\\"INCOMPLETE\\\",\\\"k8sAuditEnabled\\\":\\\"INCOMPLETE\\\",\\\"notificationChannelLinked\\\":\\\"INCOMPLETE\\\",\\\"detectionRuleCreated\\\":\\\"INCOMPLETE\\\",\\\"inlineScanImported\\\":\\\"INCOMPLETE\\\",\\\"scanningAlertRuntimeCreated\\\":\\\"INCOMPLETE\\\",\\\"scanningAlertRepositoryCreated\\\":\\\"INCOMPLETE\\\",\\\"cloudAccountConnected\\\":\\\"INCOMPLETE\\\",\\\"teamMemberInvited\\\":\\\"INCOMPLETE\\\",\\\"benchmarkTaskCreated\\\":\\\"INCOMPLETE\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"customerId\":1,\"product\":\"SDS\",\"status\":{\"agentConnected\":\"INCOMPLETE\",\"k8sAuditEnabled\":\"INCOMPLETE\",\"notificationChannelLinked\":\"INCOMPLETE\",\"detectionRuleCreated\":\"INCOMPLETE\",\"inlineScanImported\":\"INCOMPLETE\",\"scanningAlertRuntimeCreated\":\"INCOMPLETE\",\"scanningAlertRepositoryCreated\":\"INCOMPLETE\",\"cloudAccountConnected\":\"INCOMPLETE\",\"teamMemberInvited\":\"INCOMPLETE\",\"benchmarkTaskCreated\":\"INCOMPLETE\"}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D',\n  headers: {'content-type': 'application/json'},\n  body: {\n    customerId: 1,\n    product: 'SDS',\n    status: {\n      agentConnected: 'INCOMPLETE',\n      k8sAuditEnabled: 'INCOMPLETE',\n      notificationChannelLinked: 'INCOMPLETE',\n      detectionRuleCreated: 'INCOMPLETE',\n      inlineScanImported: 'INCOMPLETE',\n      scanningAlertRuntimeCreated: 'INCOMPLETE',\n      scanningAlertRepositoryCreated: 'INCOMPLETE',\n      cloudAccountConnected: 'INCOMPLETE',\n      teamMemberInvited: 'INCOMPLETE',\n      benchmarkTaskCreated: 'INCOMPLETE'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"customerId\\\":1,\\\"product\\\":\\\"SDS\\\",\\\"status\\\":{\\\"agentConnected\\\":\\\"INCOMPLETE\\\",\\\"k8sAuditEnabled\\\":\\\"INCOMPLETE\\\",\\\"notificationChannelLinked\\\":\\\"INCOMPLETE\\\",\\\"detectionRuleCreated\\\":\\\"INCOMPLETE\\\",\\\"inlineScanImported\\\":\\\"INCOMPLETE\\\",\\\"scanningAlertRuntimeCreated\\\":\\\"INCOMPLETE\\\",\\\"scanningAlertRepositoryCreated\\\":\\\"INCOMPLETE\\\",\\\"cloudAccountConnected\\\":\\\"INCOMPLETE\\\",\\\"teamMemberInvited\\\":\\\"INCOMPLETE\\\",\\\"benchmarkTaskCreated\\\":\\\"INCOMPLETE\\\"}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"customerId\\\":1,\\\"product\\\":\\\"SDS\\\",\\\"status\\\":{\\\"agentConnected\\\":\\\"INCOMPLETE\\\",\\\"k8sAuditEnabled\\\":\\\"INCOMPLETE\\\",\\\"notificationChannelLinked\\\":\\\"INCOMPLETE\\\",\\\"detectionRuleCreated\\\":\\\"INCOMPLETE\\\",\\\"inlineScanImported\\\":\\\"INCOMPLETE\\\",\\\"scanningAlertRuntimeCreated\\\":\\\"INCOMPLETE\\\",\\\"scanningAlertRepositoryCreated\\\":\\\"INCOMPLETE\\\",\\\"cloudAccountConnected\\\":\\\"INCOMPLETE\\\",\\\"teamMemberInvited\\\":\\\"INCOMPLETE\\\",\\\"benchmarkTaskCreated\\\":\\\"INCOMPLETE\\\"}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/v1/onboarding/%7BcustomerId%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "description": "Admin endpoint for removing secure specific onboarding steps for customer",
          "summary": "Removing secure specific onboarding steps for customer",
          "tags": [
            "Onboarding"
          ],
          "parameters": [
            {
              "name": "customerId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "204": {
              "description": "Simple acknowledgment of a successfully deleted record"
            },
            "404": {
              "description": "The record for customerId did not exist"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/scanning/v1/onboarding/%7BcustomerId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/scanning/v1/onboarding/%7BcustomerId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/v1/system/feeds": {
        "get": {
          "description": "Get the vulnerability feeds metadata information",
          "tags": [
            "Scanning"
          ],
          "summary": "list feeds operations and information",
          "responses": {
            "200": {
              "description": "success",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Metadata on a single feed based on what the engine finds from querying the endpoints",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "name of the feed"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the metadata record was created in engine (first seen on source)"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the metadata was last updated"
                        },
                        "groups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "last_sync": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "record_count": {
                                "type": "integer"
                              }
                            }
                          }
                        },
                        "last_full_sync": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Error"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/v1/system/feeds\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/v1/system/feeds"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/scanning/v1/system/feeds'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/v1/system/feeds\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/v1/system/feeds\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/{reportType}/config": {
        "parameters": [
          {
            "in": "path",
            "name": "reportType",
            "schema": {
              "type": "string",
              "enum": [
                "vulnerabilities"
              ]
            },
            "required": true,
            "description": "The kind of report to generate",
            "example": "vulnerabilities"
          }
        ],
        "get": {
          "summary": "Get all the options available to define a report configuration",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "Options available to define a report configuration",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "availableConditionFilters": {
                        "type": "array",
                        "readOnly": true,
                        "description": "The available conditions that can be set to filter the results in a generated report",
                        "items": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "string",
                                "number",
                                "boolean",
                                "stringarray"
                              ],
                              "description": "Data type for the filter values",
                              "example": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "Filter identifier",
                              "example": "vulnSeverity"
                            },
                            "label": {
                              "type": "string",
                              "nullable": true,
                              "description": "Human-readable label for the filter",
                              "example": "Severity"
                            },
                            "labelSuffix": {
                              "type": "string",
                              "nullable": true,
                              "description": "Human-readable suffix for the filter value"
                            },
                            "allowedValues": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ],
                                    "description": "One of the allowed value for the filter",
                                    "example": "High"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "Human-readable label for the filter value",
                                    "example": "High"
                                  }
                                }
                              },
                              "description": "Full list of the allowed values for the filter"
                            },
                            "min": {
                              "type": "number",
                              "nullable": true,
                              "description": "Minimum allowed value for filters with type number",
                              "example": 0
                            },
                            "max": {
                              "type": "number",
                              "nullable": true,
                              "description": "Maximum allowed value for filters with type number",
                              "example": 10
                            },
                            "comparisons": {
                              "type": "array",
                              "nullable": true,
                              "items": {
                                "type": "string"
                              },
                              "description": "Optional list of comparison operators which can be used when applying the filter",
                              "example": [
                                ">=",
                                "<="
                              ]
                            }
                          }
                        }
                      },
                      "availableScopeFilters": {
                        "type": "array",
                        "readOnly": true,
                        "description": "The available scope filters that can be used to select the scope",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Scope filter key",
                              "example": "kubernetes.namespace.name"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/vulnerabilities/config\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/vulnerabilities/config"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/vulnerabilities/config'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/reporting/v2/vulnerabilities/config\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/reporting/v2/vulnerabilities/config\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/{reportType}/preview": {
        "parameters": [
          {
            "in": "path",
            "name": "reportType",
            "schema": {
              "type": "string",
              "enum": [
                "vulnerabilities"
              ]
            },
            "required": true,
            "description": "The kind of report to generate",
            "example": "vulnerabilities"
          }
        ],
        "post": {
          "summary": "Get a result preview of a report with the given configuration",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Filters for the report",
                  "properties": {
                    "filters": {
                      "type": "object",
                      "description": "Filters for the report",
                      "properties": {
                        "conditionFilters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                ],
                                "description": "Filter value"
                              },
                              "comparision": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "<",
                                  "<=",
                                  "=",
                                  ">=",
                                  ">",
                                  "contains",
                                  "startswith"
                                ],
                                "description": "Comparison operator to be applied with the chosen filter value"
                              }
                            }
                          },
                          "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                          "example": {
                            "packageType": {
                              "value": "os"
                            },
                            "fixAvailable": {
                              "value": false
                            },
                            "vulnSeverity": {
                              "value": "high",
                              "comparison": ">="
                            }
                          }
                        },
                        "scopeFilter": {
                          "type": "string",
                          "description": "Scope Filters for the Report",
                          "example": "kubernetes.cluster.name in (\"prod\", \"stg\")"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "integer",
                "minimum": 1,
                "maximum": 1000,
                "default": 100
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The result preview for the requested report configuration",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": {
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "number"
                          },
                          {
                            "type": "boolean"
                          }
                        ],
                        "nullable": true,
                        "description": "A record of the requested report. Record keys are the column identifiers."
                      },
                      "example": {
                        "imageBaseOS": "alpine 3.14.0",
                        "imageImageID": "sha256:500703a12fa42704f1901f244f3cb4feb74fb1ca550b2eff4bb22e765eb10971",
                        "imagePullString": "docker.io/library/redis:6.2.4-alpine",
                        "labelsK8SWorkloadCountDesired": 1,
                        "packageName": "busybox",
                        "packagePath": "",
                        "packageSuggestedFix": "1.33.1-r7",
                        "packageType": "os",
                        "packageVersion": "1.33.1-r2",
                        "scopeK8SClusterName": "myCluster",
                        "scopeK8SNamespaceName": "myNamespace",
                        "scopeK8SPodContainerName": "redis",
                        "scopeK8SWorkloadName": "myDeployment",
                        "scopeK8SWorkloadType": "deployment",
                        "vulnCvssScore": 7.2,
                        "vulnCvssVector": "CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H",
                        "vulnCvssVersion": "3.1",
                        "vulnDisclosureDate": "2021-11-09T00:00:00Z",
                        "vulnExploitable": false,
                        "vulnFixAvailable": true,
                        "vulnLink": "https://nvd.nist.gov/vuln/detail/CVE-2021-42382",
                        "vulnName": "CVE-2021-42382",
                        "vulnSeverityValue": 3,
                        "vulnSolutionDate": "2021-08-19T00:00:00Z"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid report configuration"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/vulnerabilities/preview?limit=SOME_NUMBER_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url 'https://secure.sysdig.com/api/scanning/reporting/v2/vulnerabilities/preview?limit=SOME_NUMBER_VALUE' \\\n  --header 'content-type: application/json' \\\n  --data '{\"filters\":{\"conditionFilters\":{\"packageType\":{\"value\":\"os\"},\"fixAvailable\":{\"value\":false},\"vulnSeverity\":{\"value\":\"high\",\"comparison\":\">=\"}},\"scopeFilter\":\"kubernetes.cluster.name in (\\\"prod\\\", \\\"stg\\\")\"}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/vulnerabilities/preview',\n  qs: {limit: 'SOME_NUMBER_VALUE'},\n  headers: {'content-type': 'application/json'},\n  body: {\n    filters: {\n      conditionFilters: {\n        packageType: {value: 'os'},\n        fixAvailable: {value: false},\n        vulnSeverity: {value: 'high', comparison: '>='}\n      },\n      scopeFilter: 'kubernetes.cluster.name in (\"prod\", \"stg\")'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/reporting/v2/vulnerabilities/preview?limit=SOME_NUMBER_VALUE\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/reporting/v2/vulnerabilities/preview?limit=SOME_NUMBER_VALUE\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules": {
        "get": {
          "summary": "List all the saved schedules for report generation",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "The list of all saved schedules for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Schedule and configuration definition for a report generation",
                      "required": [
                        "name",
                        "schedule",
                        "reportType",
                        "reportFormat",
                        "enabled"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique opaque identifier of the report generation schedule.",
                          "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                        },
                        "name": {
                          "type": "string",
                          "description": "The title for the generated reports.",
                          "example": "Weekly vulnerability report"
                        },
                        "description": {
                          "type": "string",
                          "description": "A human-readable description for the report content.",
                          "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                        },
                        "reportType": {
                          "type": "string",
                          "description": "The kind of report to generate",
                          "enum": [
                            "vulnerabilities"
                          ],
                          "example": "vulnerabilities"
                        },
                        "reportFormat": {
                          "type": "string",
                          "enum": [
                            "csv",
                            "ndjson",
                            "json"
                          ],
                          "description": "Format of the generated report",
                          "example": "csv"
                        },
                        "filters": {
                          "type": "object",
                          "description": "Filters for the report",
                          "properties": {
                            "conditionFilters": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "properties": {
                                  "value": {
                                    "oneOf": [
                                      {
                                        "type": "string"
                                      },
                                      {
                                        "type": "number"
                                      },
                                      {
                                        "type": "boolean"
                                      },
                                      {
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      }
                                    ],
                                    "description": "Filter value"
                                  },
                                  "comparision": {
                                    "type": "string",
                                    "nullable": true,
                                    "enum": [
                                      "<",
                                      "<=",
                                      "=",
                                      ">=",
                                      ">",
                                      "contains",
                                      "startswith"
                                    ],
                                    "description": "Comparison operator to be applied with the chosen filter value"
                                  }
                                }
                              },
                              "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                              "example": {
                                "packageType": {
                                  "value": "os"
                                },
                                "fixAvailable": {
                                  "value": false
                                },
                                "vulnSeverity": {
                                  "value": "high",
                                  "comparison": ">="
                                }
                              }
                            },
                            "scopeFilter": {
                              "type": "string",
                              "description": "Scope Filters for the Report",
                              "example": "kubernetes.cluster.name in (\"prod\", \"stg\")"
                            }
                          }
                        },
                        "schedule": {
                          "type": "string",
                          "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                          "description": "A cron-like expression representing the generation frequency of the reports.",
                          "example": "00 09 * * *"
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "Whether the report generation is active or not",
                          "example": true
                        },
                        "notificationChannels": {
                          "type": "array",
                          "description": "Notification channels where to notify the generation of a new report",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "ID of notification channel where the generation of new reports is notified",
                                "example": 12456
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "SLACK",
                                  "WEBHOOK",
                                  "EMAIL",
                                  "TEAM_EMAIL"
                                ],
                                "description": "Type of notification channel where the generation of new reports is notified",
                                "example": "SLACK"
                              }
                            }
                          }
                        },
                        "reportLastScheduledAt": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when a new generation of the scheduled report was last queued",
                          "example": "2022-02-23T16:25:31.152Z"
                        },
                        "reportLastStartedAt": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when the generation of the scheduled report started the last time",
                          "example": "2022-02-23T16:28:31.152Z"
                        },
                        "reportLastCompletedAt": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when the generation of the scheduled report completed the last time",
                          "example": "2022-02-23T16:28:41.152Z"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The timestamp when the schedule was defined the first time",
                          "example": "2022-02-23T16:23:31.152Z"
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "description": "The timestamp when the schedule was last updated",
                          "example": "2022-02-23T16:24:31.152Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/reporting/v2/schedules\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create a new schedule for report generation",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schedule and configuration definition for a report generation",
                  "required": [
                    "name",
                    "schedule",
                    "reportType",
                    "reportFormat",
                    "enabled"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique opaque identifier of the report generation schedule.",
                      "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                    },
                    "name": {
                      "type": "string",
                      "description": "The title for the generated reports.",
                      "example": "Weekly vulnerability report"
                    },
                    "description": {
                      "type": "string",
                      "description": "A human-readable description for the report content.",
                      "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                    },
                    "reportType": {
                      "type": "string",
                      "description": "The kind of report to generate",
                      "enum": [
                        "vulnerabilities"
                      ],
                      "example": "vulnerabilities"
                    },
                    "reportFormat": {
                      "type": "string",
                      "enum": [
                        "csv",
                        "ndjson",
                        "json"
                      ],
                      "description": "Format of the generated report",
                      "example": "csv"
                    },
                    "filters": {
                      "type": "object",
                      "description": "Filters for the report",
                      "properties": {
                        "conditionFilters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                ],
                                "description": "Filter value"
                              },
                              "comparision": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "<",
                                  "<=",
                                  "=",
                                  ">=",
                                  ">",
                                  "contains",
                                  "startswith"
                                ],
                                "description": "Comparison operator to be applied with the chosen filter value"
                              }
                            }
                          },
                          "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                          "example": {
                            "packageType": {
                              "value": "os"
                            },
                            "fixAvailable": {
                              "value": false
                            },
                            "vulnSeverity": {
                              "value": "high",
                              "comparison": ">="
                            }
                          }
                        },
                        "scopeFilter": {
                          "type": "string",
                          "description": "Scope Filters for the Report",
                          "example": "kubernetes.cluster.name in (\"prod\", \"stg\")"
                        }
                      }
                    },
                    "schedule": {
                      "type": "string",
                      "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                      "description": "A cron-like expression representing the generation frequency of the reports.",
                      "example": "00 09 * * *"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the report generation is active or not",
                      "example": true
                    },
                    "notificationChannels": {
                      "type": "array",
                      "description": "Notification channels where to notify the generation of a new report",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of notification channel where the generation of new reports is notified",
                            "example": 12456
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "SLACK",
                              "WEBHOOK",
                              "EMAIL",
                              "TEAM_EMAIL"
                            ],
                            "description": "Type of notification channel where the generation of new reports is notified",
                            "example": "SLACK"
                          }
                        }
                      }
                    },
                    "reportLastScheduledAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true,
                      "description": "The timestamp when a new generation of the scheduled report was last queued",
                      "example": "2022-02-23T16:25:31.152Z"
                    },
                    "reportLastStartedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true,
                      "description": "The timestamp when the generation of the scheduled report started the last time",
                      "example": "2022-02-23T16:28:31.152Z"
                    },
                    "reportLastCompletedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true,
                      "description": "The timestamp when the generation of the scheduled report completed the last time",
                      "example": "2022-02-23T16:28:41.152Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The timestamp when the schedule was defined the first time",
                      "example": "2022-02-23T16:23:31.152Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The timestamp when the schedule was last updated",
                      "example": "2022-02-23T16:24:31.152Z"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The created schedule for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Schedule and configuration definition for a report generation",
                    "required": [
                      "name",
                      "schedule",
                      "reportType",
                      "reportFormat",
                      "enabled"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the report generation schedule.",
                        "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "name": {
                        "type": "string",
                        "description": "The title for the generated reports.",
                        "example": "Weekly vulnerability report"
                      },
                      "description": {
                        "type": "string",
                        "description": "A human-readable description for the report content.",
                        "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                      },
                      "reportType": {
                        "type": "string",
                        "description": "The kind of report to generate",
                        "enum": [
                          "vulnerabilities"
                        ],
                        "example": "vulnerabilities"
                      },
                      "reportFormat": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "ndjson",
                          "json"
                        ],
                        "description": "Format of the generated report",
                        "example": "csv"
                      },
                      "filters": {
                        "type": "object",
                        "description": "Filters for the report",
                        "properties": {
                          "conditionFilters": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "description": "Filter value"
                                },
                                "comparision": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "<",
                                    "<=",
                                    "=",
                                    ">=",
                                    ">",
                                    "contains",
                                    "startswith"
                                  ],
                                  "description": "Comparison operator to be applied with the chosen filter value"
                                }
                              }
                            },
                            "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                            "example": {
                              "packageType": {
                                "value": "os"
                              },
                              "fixAvailable": {
                                "value": false
                              },
                              "vulnSeverity": {
                                "value": "high",
                                "comparison": ">="
                              }
                            }
                          },
                          "scopeFilter": {
                            "type": "string",
                            "description": "Scope Filters for the Report",
                            "example": "kubernetes.cluster.name in (\"prod\", \"stg\")"
                          }
                        }
                      },
                      "schedule": {
                        "type": "string",
                        "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                        "description": "A cron-like expression representing the generation frequency of the reports.",
                        "example": "00 09 * * *"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the report generation is active or not",
                        "example": true
                      },
                      "notificationChannels": {
                        "type": "array",
                        "description": "Notification channels where to notify the generation of a new report",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "ID of notification channel where the generation of new reports is notified",
                              "example": 12456
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SLACK",
                                "WEBHOOK",
                                "EMAIL",
                                "TEAM_EMAIL"
                              ],
                              "description": "Type of notification channel where the generation of new reports is notified",
                              "example": "SLACK"
                            }
                          }
                        }
                      },
                      "reportLastScheduledAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when a new generation of the scheduled report was last queued",
                        "example": "2022-02-23T16:25:31.152Z"
                      },
                      "reportLastStartedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when the generation of the scheduled report started the last time",
                        "example": "2022-02-23T16:28:31.152Z"
                      },
                      "reportLastCompletedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when the generation of the scheduled report completed the last time",
                        "example": "2022-02-23T16:28:41.152Z"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was defined the first time",
                        "example": "2022-02-23T16:23:31.152Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was last updated",
                        "example": "2022-02-23T16:24:31.152Z"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid report configuration"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"reportFormat\\\":\\\"csv\\\",\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"},\\\"schedule\\\":\\\"00 09 * * *\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"id\\\":12456,\\\"type\\\":\\\"SLACK\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Weekly vulnerability report\",\"description\":\"Weekly report for package vulnerabilities fount in the Production environment.\\nRequired for compliance needs.\\n\",\"reportType\":\"vulnerabilities\",\"reportFormat\":\"csv\",\"filters\":{\"conditionFilters\":{\"packageType\":{\"value\":\"os\"},\"fixAvailable\":{\"value\":false},\"vulnSeverity\":{\"value\":\"high\",\"comparison\":\">=\"}},\"scopeFilter\":\"kubernetes.cluster.name in (\\\"prod\\\", \\\"stg\\\")\"},\"schedule\":\"00 09 * * *\",\"enabled\":true,\"notificationChannels\":[{\"id\":12456,\"type\":\"SLACK\"}]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Weekly vulnerability report',\n    description: 'Weekly report for package vulnerabilities fount in the Production environment.\\nRequired for compliance needs.\\n',\n    reportType: 'vulnerabilities',\n    reportFormat: 'csv',\n    filters: {\n      conditionFilters: {\n        packageType: {value: 'os'},\n        fixAvailable: {value: false},\n        vulnSeverity: {value: 'high', comparison: '>='}\n      },\n      scopeFilter: 'kubernetes.cluster.name in (\"prod\", \"stg\")'\n    },\n    schedule: '00 09 * * *',\n    enabled: true,\n    notificationChannels: [{id: 12456, type: 'SLACK'}]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"reportFormat\\\":\\\"csv\\\",\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"},\\\"schedule\\\":\\\"00 09 * * *\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"id\\\":12456,\\\"type\\\":\\\"SLACK\\\"}]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"reportFormat\\\":\\\"csv\\\",\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"},\\\"schedule\\\":\\\"00 09 * * *\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"id\\\":12456,\\\"type\\\":\\\"SLACK\\\"}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/scanning/reporting/v2/schedules\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules/{scheduleId}": {
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "get": {
          "summary": "Get the configuration of the requested schedule for report generation",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "Configuration for the requested schedule for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Schedule and configuration definition for a report generation",
                    "required": [
                      "name",
                      "schedule",
                      "reportType",
                      "reportFormat",
                      "enabled"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the report generation schedule.",
                        "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "name": {
                        "type": "string",
                        "description": "The title for the generated reports.",
                        "example": "Weekly vulnerability report"
                      },
                      "description": {
                        "type": "string",
                        "description": "A human-readable description for the report content.",
                        "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                      },
                      "reportType": {
                        "type": "string",
                        "description": "The kind of report to generate",
                        "enum": [
                          "vulnerabilities"
                        ],
                        "example": "vulnerabilities"
                      },
                      "reportFormat": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "ndjson",
                          "json"
                        ],
                        "description": "Format of the generated report",
                        "example": "csv"
                      },
                      "filters": {
                        "type": "object",
                        "description": "Filters for the report",
                        "properties": {
                          "conditionFilters": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "description": "Filter value"
                                },
                                "comparision": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "<",
                                    "<=",
                                    "=",
                                    ">=",
                                    ">",
                                    "contains",
                                    "startswith"
                                  ],
                                  "description": "Comparison operator to be applied with the chosen filter value"
                                }
                              }
                            },
                            "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                            "example": {
                              "packageType": {
                                "value": "os"
                              },
                              "fixAvailable": {
                                "value": false
                              },
                              "vulnSeverity": {
                                "value": "high",
                                "comparison": ">="
                              }
                            }
                          },
                          "scopeFilter": {
                            "type": "string",
                            "description": "Scope Filters for the Report",
                            "example": "kubernetes.cluster.name in (\"prod\", \"stg\")"
                          }
                        }
                      },
                      "schedule": {
                        "type": "string",
                        "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                        "description": "A cron-like expression representing the generation frequency of the reports.",
                        "example": "00 09 * * *"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the report generation is active or not",
                        "example": true
                      },
                      "notificationChannels": {
                        "type": "array",
                        "description": "Notification channels where to notify the generation of a new report",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "ID of notification channel where the generation of new reports is notified",
                              "example": 12456
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SLACK",
                                "WEBHOOK",
                                "EMAIL",
                                "TEAM_EMAIL"
                              ],
                              "description": "Type of notification channel where the generation of new reports is notified",
                              "example": "SLACK"
                            }
                          }
                        }
                      },
                      "reportLastScheduledAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when a new generation of the scheduled report was last queued",
                        "example": "2022-02-23T16:25:31.152Z"
                      },
                      "reportLastStartedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when the generation of the scheduled report started the last time",
                        "example": "2022-02-23T16:28:31.152Z"
                      },
                      "reportLastCompletedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when the generation of the scheduled report completed the last time",
                        "example": "2022-02-23T16:28:41.152Z"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was defined the first time",
                        "example": "2022-02-23T16:23:31.152Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was last updated",
                        "example": "2022-02-23T16:24:31.152Z"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Requested report generation schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation schedule not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Edit the configuration of the requested schedule for report generation",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Schedule and configuration definition for a report generation",
                  "required": [
                    "name",
                    "schedule",
                    "reportType",
                    "reportFormat",
                    "enabled"
                  ],
                  "properties": {
                    "id": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Unique opaque identifier of the report generation schedule.",
                      "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                    },
                    "name": {
                      "type": "string",
                      "description": "The title for the generated reports.",
                      "example": "Weekly vulnerability report"
                    },
                    "description": {
                      "type": "string",
                      "description": "A human-readable description for the report content.",
                      "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                    },
                    "reportType": {
                      "type": "string",
                      "description": "The kind of report to generate",
                      "enum": [
                        "vulnerabilities"
                      ],
                      "example": "vulnerabilities"
                    },
                    "reportFormat": {
                      "type": "string",
                      "enum": [
                        "csv",
                        "ndjson",
                        "json"
                      ],
                      "description": "Format of the generated report",
                      "example": "csv"
                    },
                    "filters": {
                      "type": "object",
                      "description": "Filters for the report",
                      "properties": {
                        "conditionFilters": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "number"
                                  },
                                  {
                                    "type": "boolean"
                                  },
                                  {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                ],
                                "description": "Filter value"
                              },
                              "comparision": {
                                "type": "string",
                                "nullable": true,
                                "enum": [
                                  "<",
                                  "<=",
                                  "=",
                                  ">=",
                                  ">",
                                  "contains",
                                  "startswith"
                                ],
                                "description": "Comparison operator to be applied with the chosen filter value"
                              }
                            }
                          },
                          "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                          "example": {
                            "packageType": {
                              "value": "os"
                            },
                            "fixAvailable": {
                              "value": false
                            },
                            "vulnSeverity": {
                              "value": "high",
                              "comparison": ">="
                            }
                          }
                        },
                        "scopeFilter": {
                          "type": "string",
                          "description": "Scope Filters for the Report",
                          "example": "kubernetes.cluster.name in (\"prod\", \"stg\")"
                        }
                      }
                    },
                    "schedule": {
                      "type": "string",
                      "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                      "description": "A cron-like expression representing the generation frequency of the reports.",
                      "example": "00 09 * * *"
                    },
                    "enabled": {
                      "type": "boolean",
                      "description": "Whether the report generation is active or not",
                      "example": true
                    },
                    "notificationChannels": {
                      "type": "array",
                      "description": "Notification channels where to notify the generation of a new report",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "ID of notification channel where the generation of new reports is notified",
                            "example": 12456
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "SLACK",
                              "WEBHOOK",
                              "EMAIL",
                              "TEAM_EMAIL"
                            ],
                            "description": "Type of notification channel where the generation of new reports is notified",
                            "example": "SLACK"
                          }
                        }
                      }
                    },
                    "reportLastScheduledAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true,
                      "description": "The timestamp when a new generation of the scheduled report was last queued",
                      "example": "2022-02-23T16:25:31.152Z"
                    },
                    "reportLastStartedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true,
                      "description": "The timestamp when the generation of the scheduled report started the last time",
                      "example": "2022-02-23T16:28:31.152Z"
                    },
                    "reportLastCompletedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true,
                      "description": "The timestamp when the generation of the scheduled report completed the last time",
                      "example": "2022-02-23T16:28:41.152Z"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The timestamp when the schedule was defined the first time",
                      "example": "2022-02-23T16:23:31.152Z"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "description": "The timestamp when the schedule was last updated",
                      "example": "2022-02-23T16:24:31.152Z"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Updated configuration for the requested schedule for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Schedule and configuration definition for a report generation",
                    "required": [
                      "name",
                      "schedule",
                      "reportType",
                      "reportFormat",
                      "enabled"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the report generation schedule.",
                        "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "name": {
                        "type": "string",
                        "description": "The title for the generated reports.",
                        "example": "Weekly vulnerability report"
                      },
                      "description": {
                        "type": "string",
                        "description": "A human-readable description for the report content.",
                        "example": "Weekly report for package vulnerabilities fount in the Production environment.\nRequired for compliance needs.\n"
                      },
                      "reportType": {
                        "type": "string",
                        "description": "The kind of report to generate",
                        "enum": [
                          "vulnerabilities"
                        ],
                        "example": "vulnerabilities"
                      },
                      "reportFormat": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "ndjson",
                          "json"
                        ],
                        "description": "Format of the generated report",
                        "example": "csv"
                      },
                      "filters": {
                        "type": "object",
                        "description": "Filters for the report",
                        "properties": {
                          "conditionFilters": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    },
                                    {
                                      "type": "boolean"
                                    },
                                    {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    }
                                  ],
                                  "description": "Filter value"
                                },
                                "comparision": {
                                  "type": "string",
                                  "nullable": true,
                                  "enum": [
                                    "<",
                                    "<=",
                                    "=",
                                    ">=",
                                    ">",
                                    "contains",
                                    "startswith"
                                  ],
                                  "description": "Comparison operator to be applied with the chosen filter value"
                                }
                              }
                            },
                            "description": "Set of additional filter conditions on the generated reports. Filters are defined as map with filter names as key.",
                            "example": {
                              "packageType": {
                                "value": "os"
                              },
                              "fixAvailable": {
                                "value": false
                              },
                              "vulnSeverity": {
                                "value": "high",
                                "comparison": ">="
                              }
                            }
                          },
                          "scopeFilter": {
                            "type": "string",
                            "description": "Scope Filters for the Report",
                            "example": "kubernetes.cluster.name in (\"prod\", \"stg\")"
                          }
                        }
                      },
                      "schedule": {
                        "type": "string",
                        "pattern": "^[0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+ [0-9*/,-]+$",
                        "description": "A cron-like expression representing the generation frequency of the reports.",
                        "example": "00 09 * * *"
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Whether the report generation is active or not",
                        "example": true
                      },
                      "notificationChannels": {
                        "type": "array",
                        "description": "Notification channels where to notify the generation of a new report",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "ID of notification channel where the generation of new reports is notified",
                              "example": 12456
                            },
                            "type": {
                              "type": "string",
                              "enum": [
                                "SLACK",
                                "WEBHOOK",
                                "EMAIL",
                                "TEAM_EMAIL"
                              ],
                              "description": "Type of notification channel where the generation of new reports is notified",
                              "example": "SLACK"
                            }
                          }
                        }
                      },
                      "reportLastScheduledAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when a new generation of the scheduled report was last queued",
                        "example": "2022-02-23T16:25:31.152Z"
                      },
                      "reportLastStartedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when the generation of the scheduled report started the last time",
                        "example": "2022-02-23T16:28:31.152Z"
                      },
                      "reportLastCompletedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when the generation of the scheduled report completed the last time",
                        "example": "2022-02-23T16:28:41.152Z"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was defined the first time",
                        "example": "2022-02-23T16:23:31.152Z"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "description": "The timestamp when the schedule was last updated",
                        "example": "2022-02-23T16:24:31.152Z"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid report configuration"
                }
              }
            },
            "404": {
              "description": "Requested report generation schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation schedule not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"reportFormat\\\":\\\"csv\\\",\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"},\\\"schedule\\\":\\\"00 09 * * *\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"id\\\":12456,\\\"type\\\":\\\"SLACK\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Weekly vulnerability report\",\"description\":\"Weekly report for package vulnerabilities fount in the Production environment.\\nRequired for compliance needs.\\n\",\"reportType\":\"vulnerabilities\",\"reportFormat\":\"csv\",\"filters\":{\"conditionFilters\":{\"packageType\":{\"value\":\"os\"},\"fixAvailable\":{\"value\":false},\"vulnSeverity\":{\"value\":\"high\",\"comparison\":\">=\"}},\"scopeFilter\":\"kubernetes.cluster.name in (\\\"prod\\\", \\\"stg\\\")\"},\"schedule\":\"00 09 * * *\",\"enabled\":true,\"notificationChannels\":[{\"id\":12456,\"type\":\"SLACK\"}]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Weekly vulnerability report',\n    description: 'Weekly report for package vulnerabilities fount in the Production environment.\\nRequired for compliance needs.\\n',\n    reportType: 'vulnerabilities',\n    reportFormat: 'csv',\n    filters: {\n      conditionFilters: {\n        packageType: {value: 'os'},\n        fixAvailable: {value: false},\n        vulnSeverity: {value: 'high', comparison: '>='}\n      },\n      scopeFilter: 'kubernetes.cluster.name in (\"prod\", \"stg\")'\n    },\n    schedule: '00 09 * * *',\n    enabled: true,\n    notificationChannels: [{id: 12456, type: 'SLACK'}]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"reportFormat\\\":\\\"csv\\\",\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"},\\\"schedule\\\":\\\"00 09 * * *\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"id\\\":12456,\\\"type\\\":\\\"SLACK\\\"}]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Weekly vulnerability report\\\",\\\"description\\\":\\\"Weekly report for package vulnerabilities fount in the Production environment.\\\\nRequired for compliance needs.\\\\n\\\",\\\"reportType\\\":\\\"vulnerabilities\\\",\\\"reportFormat\\\":\\\"csv\\\",\\\"filters\\\":{\\\"conditionFilters\\\":{\\\"packageType\\\":{\\\"value\\\":\\\"os\\\"},\\\"fixAvailable\\\":{\\\"value\\\":false},\\\"vulnSeverity\\\":{\\\"value\\\":\\\"high\\\",\\\"comparison\\\":\\\">=\\\"}},\\\"scopeFilter\\\":\\\"kubernetes.cluster.name in (\\\\\\\"prod\\\\\\\", \\\\\\\"stg\\\\\\\")\\\"},\\\"schedule\\\":\\\"00 09 * * *\\\",\\\"enabled\\\":true,\\\"notificationChannels\\\":[{\\\"id\\\":12456,\\\"type\\\":\\\"SLACK\\\"}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Remove the requested schedule for report generation",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "204": {
              "description": "Schedule for report generation removed"
            },
            "404": {
              "description": "Schedule not found"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules/{scheduleId}/status": {
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "get": {
          "summary": "Get the status of the current and last completed reports generated by the schedule",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "Status of a given schedule",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Schedule and configuration definition for a report generation",
                    "required": [
                      "scheduleId"
                    ],
                    "properties": {
                      "scheduleId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the schedule.",
                        "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "currentReport": {
                        "type": "object",
                        "description": "Status of a given report",
                        "required": [
                          "reportId"
                        ],
                        "properties": {
                          "reportId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Unique opaque identifier of the report.",
                            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "scheduled",
                              "progress",
                              "completed",
                              "error"
                            ],
                            "description": "Status of the current report execution"
                          },
                          "error": {
                            "type": "string",
                            "description": "Error message",
                            "example": "invalid team scope"
                          },
                          "reportType": {
                            "type": "string",
                            "description": "The kind of report to generate",
                            "enum": [
                              "vulnerabilities"
                            ],
                            "example": "vulnerabilities"
                          },
                          "reportFormat": {
                            "type": "string",
                            "enum": [
                              "csv",
                              "ndjson",
                              "json"
                            ],
                            "description": "Format of the generated report",
                            "example": "csv"
                          },
                          "scheduledAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when a new generation of the scheduled report was last queued",
                            "example": "2022-02-23T16:25:31.152Z"
                          },
                          "startedAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report started the last time",
                            "example": "2022-02-23T16:26:31.152Z"
                          },
                          "completedAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report completed the last time",
                            "example": "2022-02-23T16:26:41.152Z"
                          }
                        }
                      },
                      "lastCompletedReport": {
                        "type": "object",
                        "description": "Status of a given report",
                        "required": [
                          "reportId"
                        ],
                        "properties": {
                          "reportId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Unique opaque identifier of the report.",
                            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "scheduled",
                              "progress",
                              "completed",
                              "error"
                            ],
                            "description": "Status of the current report execution"
                          },
                          "error": {
                            "type": "string",
                            "description": "Error message",
                            "example": "invalid team scope"
                          },
                          "reportType": {
                            "type": "string",
                            "description": "The kind of report to generate",
                            "enum": [
                              "vulnerabilities"
                            ],
                            "example": "vulnerabilities"
                          },
                          "reportFormat": {
                            "type": "string",
                            "enum": [
                              "csv",
                              "ndjson",
                              "json"
                            ],
                            "description": "Format of the generated report",
                            "example": "csv"
                          },
                          "scheduledAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when a new generation of the scheduled report was last queued",
                            "example": "2022-02-23T16:25:31.152Z"
                          },
                          "startedAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report started the last time",
                            "example": "2022-02-23T16:26:31.152Z"
                          },
                          "completedAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "nullable": true,
                            "description": "The timestamp when the generation of the scheduled report completed the last time",
                            "example": "2022-02-23T16:26:41.152Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Requested report generation schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Schedule not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/status'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules/{scheduleId}/download": {
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "get": {
          "summary": "Download the last generated report of the given schedule",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "Requested report available for download at another location",
              "headers": {
                "Location": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Requested report not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "head": {
          "summary": "Return headers of the download request",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "307": {
              "description": "Requested report available for download at another location",
              "headers": {
                "Location": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Requested report not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\"\n\n\treq, _ := http.NewRequest(\"HEAD\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request HEAD \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'HEAD',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.head(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"HEAD\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules/{scheduleId}/reports": {
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "get": {
          "summary": "Get the list of reports generated by a schedule",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "Configuration for the requested schedule for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Report is the generated report given a schedule",
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique opaque identifier of the report generated.",
                          "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                        },
                        "scheduleId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Unique opaque identifier of the schedule that generated the report.",
                          "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "scheduled",
                            "progress",
                            "completed",
                            "error"
                          ],
                          "description": "Status of the current report execution",
                          "example": "completed"
                        },
                        "error": {
                          "type": "string",
                          "description": "Error message",
                          "example": "invalid team scope"
                        },
                        "reportFormat": {
                          "type": "string",
                          "enum": [
                            "csv",
                            "ndjson",
                            "json"
                          ],
                          "description": "Format of the generated report",
                          "example": "csv"
                        },
                        "reportType": {
                          "type": "string",
                          "description": "The kind of report to generate",
                          "enum": [
                            "vulnerabilities"
                          ]
                        },
                        "scheduledAt": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when a new generation of the scheduled report was last queued",
                          "example": "2022-02-23T16:25:31.152Z"
                        },
                        "startedAt": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when the generation of the scheduled report started the last time",
                          "example": "2022-02-23T16:26:31.152Z"
                        },
                        "completedAt": {
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true,
                          "description": "The timestamp when the generation of the scheduled report completed the last time",
                          "example": "2022-02-23T16:26:41.152Z"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Requested schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report schedule not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules/{scheduleId}/reports/{reportId}": {
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          },
          {
            "in": "path",
            "name": "reportId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the report",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "get": {
          "summary": "Get a specific report",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "Configuration for the requested schedule for report generation",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Report is the generated report given a schedule",
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the report generated.",
                        "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "scheduleId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Unique opaque identifier of the schedule that generated the report.",
                        "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "scheduled",
                          "progress",
                          "completed",
                          "error"
                        ],
                        "description": "Status of the current report execution",
                        "example": "completed"
                      },
                      "error": {
                        "type": "string",
                        "description": "Error message",
                        "example": "invalid team scope"
                      },
                      "reportFormat": {
                        "type": "string",
                        "enum": [
                          "csv",
                          "ndjson",
                          "json"
                        ],
                        "description": "Format of the generated report",
                        "example": "csv"
                      },
                      "reportType": {
                        "type": "string",
                        "description": "The kind of report to generate",
                        "enum": [
                          "vulnerabilities"
                        ]
                      },
                      "scheduledAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when a new generation of the scheduled report was last queued",
                        "example": "2022-02-23T16:25:31.152Z"
                      },
                      "startedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when the generation of the scheduled report started the last time",
                        "example": "2022-02-23T16:26:31.152Z"
                      },
                      "completedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true,
                        "description": "The timestamp when the generation of the scheduled report completed the last time",
                        "example": "2022-02-23T16:26:41.152Z"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Requested schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules/{scheduleId}/reports/{reportId}/download": {
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          },
          {
            "in": "path",
            "name": "reportId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the report",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "get": {
          "summary": "Download a specific report",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "307": {
              "description": "Requested report available for download at another location",
              "headers": {
                "Location": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Requested report not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "head": {
          "summary": "Get the download headers",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "Requested report available for download at another location",
              "headers": {
                "Location": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Requested report not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report not found"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\"\n\n\treq, _ := http.NewRequest(\"HEAD\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request HEAD \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'HEAD',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.head(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"HEAD\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/reports/1hDkklCWc5UtuFhwCaZkbFNY5ZV/download\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules/{scheduleId}/run": {
        "parameters": [
          {
            "in": "path",
            "name": "scheduleId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "The ID of the schedule for report generation",
            "example": "1hDkklCWc5UtuFhwCaZkbFNY5ZV"
          }
        ],
        "post": {
          "summary": "Generate an on-demand report using the configuration of the requested schedule",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "202": {
              "description": "Generation of requested report accepted"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid request payload"
                }
              }
            },
            "403": {
              "description": "Generation of requested report is either forbidden or disabled",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation forbidden or disabled"
                }
              }
            },
            "404": {
              "description": "Requested report generation schedule not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation schedule not found"
                }
              }
            },
            "409": {
              "description": "Report generation is either already running or will be running shortly",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Report generation already running"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/run\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/run"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/run'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/run\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/scanning/reporting/v2/schedules/1hDkklCWc5UtuFhwCaZkbFNY5ZV/run\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/scanning/reporting/v2/schedules/disable": {
        "post": {
          "summary": "Disable all schedules for a given customer",
          "description": "__Note__ This API is compatible only with [new scanning engine](https://docs.sysdig.com/en/docs/sysdig-secure/vulnerabilities/runtime/)",
          "tags": [
            "Reporting v2"
          ],
          "responses": {
            "200": {
              "description": "Request completed successfully"
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Invalid request payload"
                }
              }
            },
            "403": {
              "description": "Disable is either forbidden or disabled",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  },
                  "example": "Disable is either forbidden or disabled"
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/disable\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/scanning/reporting/v2/schedules/disable"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/scanning/reporting/v2/schedules/disable'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/scanning/reporting/v2/schedules/disable\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/scanning/reporting/v2/schedules/disable\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secureEvents": {
        "get": {
          "summary": "Retrieves a secure events feed",
          "description": "Retrieves the list of events that match a filter given a specified\ntime range or cursor.\nThe pair `from` and `to` and the `cursor` parameter are mutually\nexclusive. If you supply a `from` and `to` you must not supply a\n`cursor` and vice-versa.\nIf you supply a `cursor` then the `prev` field inside the response is\nset if and only if there are events before the first event returned, while\nthe `next` field inside the response is set if and only if there are\nevents after the last event returned. If, instead, you supply the `from`\nand `to` pair then the `prev` and `next` fields inside the response are\nalways set, because in that case there is no efficient way for the backend\nto verify if `next` and `prev` events actually exist. For this reason, the\nbest way to use this API is to supply the `from` and `to` pair at the\nfirst request and then use the `prev` and `next` cursors to fetch events\nbefore and after the events returned.\nPlease, do note that if you supply `from` and `to` and receive the `prev`\nand `next` cursors, any subsequent request made by supplying that `next`\nor `prev` cursor will return results that are not filtered by the `from`\nand `to` you provided in the first request.\nFinally, the difference between `from` and `to` cannot be greater than\n2 weeks.\n",
          "tags": [
            "Secure Events"
          ],
          "parameters": [
            {
              "name": "from",
              "description": "From, expressed in nanoseconds. The difference between `from` and `to`\ncannot be greater than 2 weeks.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "int64",
                "minimum": 0,
                "example": 1546300800000000000
              }
            },
            {
              "name": "to",
              "description": "To, expressed in nanoseconds. The difference between `from` and `to`\ncannot be greater than 2 weeks.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "int64",
                "minimum": 0,
                "example": 1546300800000000000
              }
            },
            {
              "name": "cursor",
              "description": "Cursor is a string used to retrieve data given a specific context. The context can either be events feed before a certain event, after it or its surrounding. See the `prev`, `next` and `cursor` fields inside the response for further details.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "example": "LTltNGUybXIwdWkzZThhMjE1bjRn"
              }
            },
            {
              "name": "filter",
              "description": "Query language expression for filtering results. It is a subset of the\nfull metrics query language used in monitoring.\n\nOperators:\n- `and`, `or` and `not` logical operators (i.e. `pid = 1 and ppid = 2`)\n- `=`, `!=`, `>`, `>=`, `<` and `<=` comparison operators (i.e. `pid = 1`)\n- `in` to check inclusion in a list of values (i.e. `pid in (1, 2)` or\n`clientipv4 in (\"127.0.0.1\", \"192.168.0.1\")`)\n\nThis query language does not support the full set of metrics supported\nin the monitor query language, but instead supports a set of fields\nproper to each audit events type.\n\nThe list of supported fields can be retrieved through the\n`eventsFeedFilters` endpoint. In addition to those fields, also these\nfields are supported:\n- `severity` as numeric value in the `[0, 7]` range\n- `category` as string value\n- `originator` as string value (either  `policy` or `scanning`)\n- `name` as string value\n- `freeText` as string value\n- `source` as string value\n- `agentId` as numeric value\n- `containerId` as string value\n- `machineId` as string value\n- `ruleName` as string value\n- `ruleType` as numeric value\n- `ruleSubType` as numeric value\n- `policyId` as numeric value\n- `alertName` as string value\n- `trigger` as string value\n- `image.id` as string value\n- `image.registry` as string value\n- `image.repo` as string value\n- `image.tag` as string value\n- `image.digest` as string value\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "example": "agent.id=1"
              }
            },
            {
              "name": "limit",
              "description": "Limit the number of events to return.",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "integer",
                "example": 50,
                "minimum": 1,
                "maximum": 999,
                "default": 100
              }
            },
            {
              "name": "specialCategory",
              "description": "How to handle special events categories, like the policy simulation\n(advisor).\n- `exclude_simulation` excludes events with category `simulation`\n- `only_simulation` returns only events with category `simulation`\n",
              "in": "query",
              "schema": {
                "type": "string",
                "enum": [
                  "exclude_simulation",
                  "only_simulation"
                ],
                "example": "exclude_simulation",
                "default": "exclude_simulation"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The secure events feed.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "page",
                      "data"
                    ],
                    "properties": {
                      "page": {
                        "type": "object",
                        "required": [
                          "total"
                        ],
                        "properties": {
                          "total": {
                            "type": "number",
                            "format": "integer",
                            "description": "The number of events returned. This number is always less or\nequal the limit specified in the request.\n",
                            "example": 10
                          },
                          "prev": {
                            "type": "string",
                            "description": "The cursor that can be used to fetch a set of events before the\nfirst event returned in the `data` array.\nIf this value is unset, then there are no events before the first\nevent returned in the `data` array.\nBy providing this value as `cursor` in a GET `secureEvents` request,\nyou will get the set of events that precede the first event returned\nin the `data` array.\n",
                            "example": "LTltNGUybXIwdWkzZThhMjE1bjRn"
                          },
                          "next": {
                            "type": "string",
                            "description": "The cursor that can be used to fetch a set of events after the last\nevent returned in the `data` array.\nIf this value is unset, then there are no events after the last\nevent returned  in the `data` array.\nBy providing this value as `cursor` in a GET `secureEvents` request,\nyou will get the set of events after the last event returned in the\n`data` array.\n",
                            "example": "KzltNGUybXIwdWkzZThhMjE1bjRn"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "cursor",
                            "timestamp",
                            "customerId",
                            "originator",
                            "source",
                            "category",
                            "name",
                            "description",
                            "severity",
                            "machineId",
                            "actions",
                            "labels"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The event id.",
                              "example": "15cbf54e34df95404caad1c988cf7c42"
                            },
                            "cursor": {
                              "type": "string",
                              "description": "The cursor that can be used to fetch a set of events surrounding\nthis same event. By providing this value as `cursor` in a GET\n`secureEvents` request, you will get the set of events surrounding\nthis current event.\n",
                              "example": "LTltNGUybXIwdWkzZThhMjE1bjRn"
                            },
                            "timestamp": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timestamp the event occured.",
                              "example": "2020-04-21T16:08:08.845336507Z"
                            },
                            "customerId": {
                              "type": "number",
                              "format": "int64",
                              "description": "The customer id.",
                              "example": 1
                            },
                            "originator": {
                              "type": "string",
                              "description": "Type of the event (i.e. policy, scanning etc.).",
                              "example": "policy"
                            },
                            "source": {
                              "type": "string",
                              "description": "Source of the event.",
                              "example": "k8s_audit"
                            },
                            "category": {
                              "type": "string",
                              "description": "The event category.",
                              "enum": [
                                "runtime",
                                "simulation"
                              ],
                              "example": "runtime"
                            },
                            "name": {
                              "type": "string",
                              "description": "The event name.",
                              "example": "Launch Privileged Container"
                            },
                            "description": {
                              "type": "string",
                              "description": "The event description.",
                              "example": "Identify a container being created with privileged=true\n"
                            },
                            "severity": {
                              "type": "number",
                              "description": "The event severity.",
                              "minimum": 0,
                              "maximum": 7,
                              "example": 4
                            },
                            "agentId": {
                              "type": "number",
                              "format": "int64",
                              "description": "The agent id.",
                              "example": 1
                            },
                            "containerId": {
                              "type": "string",
                              "description": "The container id.",
                              "example": "df5f83c5d5e5"
                            },
                            "machineId": {
                              "type": "string",
                              "description": "The machine id (i.e. hostname).",
                              "example": "02:37:22:86:ce:53"
                            },
                            "actions": {
                              "type": "array",
                              "items": {
                                "oneOf": [
                                  {
                                    "title": "Capture",
                                    "type": "object",
                                    "description": "Capture action performed once the event happened.",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Capture action type.",
                                        "enum": [
                                          "capture"
                                        ]
                                      },
                                      "successful": {
                                        "type": "boolean",
                                        "description": "Whether or not the action was completed successfully."
                                      },
                                      "errMsg": {
                                        "description": "When `successful == false`, details on why the action failed.\n",
                                        "type": "string"
                                      },
                                      "token": {
                                        "type": "string",
                                        "description": "Token that can be related to later messages.",
                                        "example": "4f24c92e-48f5-45ab-84a5-c394f07e855e"
                                      },
                                      "afterEventNs": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Period of time to capture after event in nanoseconds.\n",
                                        "example": 18000000000
                                      },
                                      "beforeEventNs": {
                                        "type": "number",
                                        "format": "int64",
                                        "description": "Period of time to capture before event in nanoseconds.\n",
                                        "example": 5000000000
                                      }
                                    }
                                  },
                                  {
                                    "title": "Container paused",
                                    "type": "object",
                                    "description": "Container paused action performed once the event happened.",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Container paused action type.",
                                        "enum": [
                                          "container paused"
                                        ]
                                      },
                                      "successful": {
                                        "type": "boolean",
                                        "description": "Whether or not the action was completed successfully."
                                      },
                                      "errMsg": {
                                        "description": "When `successful == false`, details on why the action failed.\n",
                                        "type": "string"
                                      },
                                      "token": {
                                        "type": "string",
                                        "description": "Token that can be related to later messages.",
                                        "example": "4f24c92e-48f5-45ab-84a5-c394f07e855e"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Container stopped",
                                    "type": "object",
                                    "description": "Container stopped action performed once the event happened.",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Container stopped action type.",
                                        "enum": [
                                          "container stopped"
                                        ]
                                      },
                                      "successful": {
                                        "type": "boolean",
                                        "description": "Whether or not the action was completed successfully."
                                      },
                                      "errMsg": {
                                        "description": "When `successful == false`, details on why the action failed.\n",
                                        "type": "string"
                                      },
                                      "token": {
                                        "type": "string",
                                        "description": "Token that can be related to later messages.",
                                        "example": "4f24c92e-48f5-45ab-84a5-c394f07e855e"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Container killed",
                                    "type": "object",
                                    "description": "Container killed action performed once the event happened.",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Action type.",
                                        "enum": [
                                          "container killed"
                                        ]
                                      },
                                      "successful": {
                                        "type": "boolean",
                                        "description": "Whether or not the action was completed successfully."
                                      },
                                      "errMsg": {
                                        "description": "When `successful == false`, details on why the action failed.\n",
                                        "type": "string"
                                      },
                                      "token": {
                                        "type": "string",
                                        "description": "Token that can be related to later messages.",
                                        "example": "4f24c92e-48f5-45ab-84a5-c394f07e855e"
                                      }
                                    }
                                  },
                                  {
                                    "title": "Scan image",
                                    "type": "object",
                                    "description": "Scan image action performed once the event happened.",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Scan image action type.",
                                        "enum": [
                                          "scan image"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "content": {
                              "type": "object",
                              "description": "Body of the specific event. It contains fields that are specific to\na single event and are not shared among different event types.\n",
                              "oneOf": [
                                {
                                  "title": "Policy Event",
                                  "type": "object",
                                  "required": [
                                    "policyId",
                                    "ruleName",
                                    "ruleType",
                                    "ruleSubType",
                                    "ruleTags",
                                    "output",
                                    "fields",
                                    "falsePositive",
                                    "matchedOnDefault"
                                  ],
                                  "properties": {
                                    "policyId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Policy ID.",
                                      "example": 2
                                    },
                                    "ruleName": {
                                      "type": "string",
                                      "description": "Rule name.",
                                      "example": "Terminal shell in container"
                                    },
                                    "ruleType": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Rule type.",
                                      "example": 6
                                    },
                                    "ruleSubType": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Rule subtype.",
                                      "example": 0
                                    },
                                    "ruleTags": {
                                      "description": "Rule tags.",
                                      "type": "array",
                                      "items": {
                                        "type": "object"
                                      },
                                      "example": [
                                        "mitre_credential_access",
                                        "mitre_discovery",
                                        "filesystem"
                                      ]
                                    },
                                    "output": {
                                      "type": "string",
                                      "description": "Output of the policy event.",
                                      "example": "File below a known binary directory opened for writing...\n"
                                    },
                                    "fields": {
                                      "type": "object",
                                      "description": "Attribute fields of the policy event.\n"
                                    },
                                    "falsePositive": {
                                      "type": "boolean",
                                      "default": false,
                                      "example": false
                                    },
                                    "matchedOnDefault": {
                                      "type": "boolean",
                                      "default": false,
                                      "example": false
                                    }
                                  }
                                },
                                {
                                  "title": "Scanning Event",
                                  "type": "object",
                                  "required": [
                                    "alertId",
                                    "trigger",
                                    "alertName",
                                    "alertUrl",
                                    "scanResultUrl",
                                    "image",
                                    "result"
                                  ],
                                  "properties": {
                                    "alertId": {
                                      "type": "string",
                                      "description": "The alert id.",
                                      "example": "abcdaaaaaa"
                                    },
                                    "trigger": {
                                      "type": "string",
                                      "description": "Event trigger.",
                                      "example": "Unscanned Image"
                                    },
                                    "alertName": {
                                      "type": "string",
                                      "description": "Alert Name.",
                                      "example": "Notify CVE Result change in store frontend"
                                    },
                                    "alertUrl": {
                                      "type": "string",
                                      "description": "Edit alert link."
                                    },
                                    "scanResultUrl": {
                                      "type": "string",
                                      "description": "Scan result link."
                                    },
                                    "image": {
                                      "description": "Docker image metadata.",
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "repo",
                                        "registry",
                                        "tag",
                                        "digest"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "format": "int64",
                                          "description": "Image ID.",
                                          "example": 5.353536363873897e+38
                                        },
                                        "repo": {
                                          "type": "string",
                                          "description": "Image repository.",
                                          "example": "alpine"
                                        },
                                        "registry": {
                                          "type": "string",
                                          "description": "Image registry.",
                                          "example": "quay.io"
                                        },
                                        "tag": {
                                          "type": "string",
                                          "description": "Image tag.",
                                          "example": "3.11.2"
                                        },
                                        "digest": {
                                          "type": "string",
                                          "description": "Image digest.",
                                          "example": "sha256:1234432342323232323232323232323232323232"
                                        }
                                      }
                                    },
                                    "result": {
                                      "type": "string",
                                      "description": "Scanning Result.",
                                      "enum": [
                                        "Failed",
                                        "Passed"
                                      ],
                                      "example": "Failed"
                                    },
                                    "cveUpdate": {
                                      "type": "object",
                                      "required": [
                                        "added",
                                        "updated",
                                        "removed"
                                      ],
                                      "properties": {
                                        "added": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "severity",
                                              "packageName",
                                              "fixAvailable"
                                            ],
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "feed": {
                                                "type": "string"
                                              },
                                              "feedGroup": {
                                                "type": "string"
                                              },
                                              "fixAvailable": {
                                                "type": "boolean"
                                              },
                                              "packageName": {
                                                "type": "string"
                                              },
                                              "packageType": {
                                                "type": "string"
                                              },
                                              "packageVersion": {
                                                "type": "string"
                                              },
                                              "severity": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              },
                                              "vulnerablePackage": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "updated": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "severity",
                                              "packageName",
                                              "fixAvailable"
                                            ],
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "feed": {
                                                "type": "string"
                                              },
                                              "feedGroup": {
                                                "type": "string"
                                              },
                                              "fixAvailable": {
                                                "type": "boolean"
                                              },
                                              "packageName": {
                                                "type": "string"
                                              },
                                              "packageType": {
                                                "type": "string"
                                              },
                                              "packageVersion": {
                                                "type": "string"
                                              },
                                              "severity": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              },
                                              "vulnerablePackage": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "removed": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "required": [
                                              "id",
                                              "severity",
                                              "packageName",
                                              "fixAvailable"
                                            ],
                                            "properties": {
                                              "id": {
                                                "type": "string"
                                              },
                                              "feed": {
                                                "type": "string"
                                              },
                                              "feedGroup": {
                                                "type": "string"
                                              },
                                              "fixAvailable": {
                                                "type": "boolean"
                                              },
                                              "packageName": {
                                                "type": "string"
                                              },
                                              "packageType": {
                                                "type": "string"
                                              },
                                              "packageVersion": {
                                                "type": "string"
                                              },
                                              "severity": {
                                                "type": "string"
                                              },
                                              "url": {
                                                "type": "string"
                                              },
                                              "vulnerablePackage": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "title": "Profiling Detection Event",
                                  "type": "object",
                                  "required": [
                                    "timestampNs",
                                    "customerId",
                                    "machineId",
                                    "containerId",
                                    "imageId",
                                    "imageName",
                                    "command",
                                    "exe",
                                    "mlModel",
                                    "detectedClassProbability",
                                    "detectedClass"
                                  ],
                                  "properties": {
                                    "timestampNs": {
                                      "type": "integer",
                                      "description": "The timestamp in nanoseconds",
                                      "example": 1546300800000000000
                                    },
                                    "customerId": {
                                      "type": "integer",
                                      "description": "The customer ID",
                                      "example": 12345
                                    },
                                    "machineId": {
                                      "type": "string",
                                      "description": "The host mac",
                                      "example": "04:2a:d5:cf:aa:bc"
                                    },
                                    "containerId": {
                                      "type": "string",
                                      "description": "The container ID",
                                      "example": "789ca4dd08dd"
                                    },
                                    "imageId": {
                                      "type": "string",
                                      "description": "The image ID",
                                      "example": 5.353536363873897e+38
                                    },
                                    "imageName": {
                                      "type": "string",
                                      "description": "The image name"
                                    },
                                    "command": {
                                      "type": "string",
                                      "description": "The command name",
                                      "example": "bash"
                                    },
                                    "exe": {
                                      "type": "string",
                                      "description": "The command path",
                                      "example": "/bin/bash"
                                    },
                                    "mlModel": {
                                      "type": "string",
                                      "description": "The Machine Learning model name"
                                    },
                                    "detectedClassProbability": {
                                      "type": "number",
                                      "format": "float",
                                      "description": "The detected class probability (confidence score)",
                                      "minimum": 0,
                                      "maximum": 1,
                                      "example": 0.8
                                    },
                                    "detectedClass": {
                                      "type": "number",
                                      "format": "string",
                                      "description": "The detection class",
                                      "enum": [
                                        "miner"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "label": {
                              "type": "object",
                              "description": "Key value pairs of labels.",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The request is invalid.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "requestId": {
                        "type": "string",
                        "description": "The request ID."
                      }
                    }
                  }
                }
              }
            },
            "422": {
              "description": "Attempting to retrieve a secure events feed by using a filter that\ncontains unsupported metrics.\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "requestId": {
                        "type": "string",
                        "description": "The request ID."
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "requestId": {
                        "type": "string",
                        "description": "The request ID."
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secureEvents?from=1546300800000000000&to=1546300800000000000&cursor=LTltNGUybXIwdWkzZThhMjE1bjRn&filter=agent.id%3D1&limit=50&specialCategory=exclude_simulation\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/secureEvents?from=1546300800000000000&to=1546300800000000000&cursor=LTltNGUybXIwdWkzZThhMjE1bjRn&filter=agent.id%3D1&limit=50&specialCategory=exclude_simulation'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/secureEvents',\n  qs: {\n    from: '1546300800000000000',\n    to: '1546300800000000000',\n    cursor: 'LTltNGUybXIwdWkzZThhMjE1bjRn',\n    filter: 'agent.id=1',\n    limit: '50',\n    specialCategory: 'exclude_simulation'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secureEvents?from=1546300800000000000&to=1546300800000000000&cursor=LTltNGUybXIwdWkzZThhMjE1bjRn&filter=agent.id%3D1&limit=50&specialCategory=exclude_simulation\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secureEvents?from=1546300800000000000&to=1546300800000000000&cursor=LTltNGUybXIwdWkzZThhMjE1bjRn&filter=agent.id%3D1&limit=50&specialCategory=exclude_simulation\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secureEvents/status": {
        "get": {
          "summary": "Ping the status",
          "description": "Retrieves a 200 to double check if the `secureEvents` feature on the\nbackend is available.\n",
          "tags": [
            "Secure Events"
          ],
          "responses": {
            "200": {
              "description": "The supported secure events filters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status.",
                        "enum": [
                          "ok"
                        ],
                        "example": "ok"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secureEvents/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/secureEvents/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v1/secureEvents/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secureEvents/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secureEvents/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secureEvents/hasEvents": {
        "get": {
          "summary": "Verify presence of old events",
          "description": "Verify if there are new/legacy events in the store.\n",
          "tags": [
            "Secure Events"
          ],
          "responses": {
            "200": {
              "description": "Whether or not there are new/legacy events.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "hasLegacyEvents",
                      "hasNewEvents"
                    ],
                    "properties": {
                      "hasLegacyEvents": {
                        "type": "boolean",
                        "description": "This is `true` if and only if there are no new events (i.e.\nevents in the new indices) in the time range from 30 days\nago to 29 days ago. This assumes that once the Secure Events\nfeature is deployed, all the events are written in the new\nindices only; therefore, there are legacy events only if\nthere are no events in the new indices for that time range.\n"
                      },
                      "hasNewEvents": {
                        "type": "boolean",
                        "description": "This is `true` if and only if there is at least a new event\nin the time range from 1 day ago to now.\n",
                        "example": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "requestId": {
                        "type": "string",
                        "description": "The request ID."
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secureEvents/hasEvents\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/secureEvents/hasEvents"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v1/secureEvents/hasEvents'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secureEvents/hasEvents\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secureEvents/hasEvents\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secureEvents/filters": {
        "get": {
          "summary": "Retrieves the supported events feed scope filters",
          "description": "Retrieves the whitelist of supported secure events scope filters that can\nbe used inside the `filter` parameter while retrieving the secure events\nfeed.\n",
          "tags": [
            "Secure Events"
          ],
          "responses": {
            "200": {
              "description": "The supported secure events scope filters.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "List of supported scope filters",
                    "required": [
                      "labelDescriptors"
                    ],
                    "properties": {
                      "labelDescriptors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "required": [
                            "id",
                            "type"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The supported scope filter key."
                            },
                            "type": {
                              "type": "string",
                              "description": "Type of the scope filter value.",
                              "enum": [
                                "string",
                                "number",
                                "date",
                                "ip"
                              ]
                            }
                          }
                        },
                        "example": [
                          {
                            "id": "container.image.repo",
                            "type": "string"
                          },
                          {
                            "id": "container.image.tag",
                            "type": "string"
                          },
                          {
                            "id": "container.name",
                            "type": "string"
                          },
                          {
                            "id": "container.label",
                            "type": "string"
                          },
                          {
                            "id": "container.label.io.kubernetes.container.name",
                            "type": "string"
                          },
                          {
                            "id": "container.label.io.kubernetes.pod.name",
                            "type": "string"
                          },
                          {
                            "id": "container.label.io.kubernetes.pod.namespace",
                            "type": "string"
                          },
                          {
                            "id": "container.label.maintainer",
                            "type": "string"
                          },
                          {
                            "id": "host.hostName",
                            "type": "string"
                          },
                          {
                            "id": "host.ip.private",
                            "type": "ip"
                          },
                          {
                            "id": "host.ip.public",
                            "type": "ip"
                          },
                          {
                            "id": "host.mac",
                            "type": "string"
                          },
                          {
                            "id": "kubernetes.cluster.name",
                            "type": "string"
                          },
                          {
                            "id": "kubernetes.daemonSet.name",
                            "type": "string"
                          },
                          {
                            "id": "kubernetes.namespace.name",
                            "type": "string"
                          },
                          {
                            "id": "kubernetes.pod.name",
                            "type": "string"
                          },
                          {
                            "id": "kubernetes.replicaSet.name",
                            "type": "string"
                          },
                          {
                            "id": "kubernetes.statefulSet.name",
                            "type": "string"
                          },
                          {
                            "id": "azure.subscriptionId",
                            "type": "string"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "requestId": {
                        "type": "string",
                        "description": "The request ID."
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secureEvents/filters\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/secureEvents/filters"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v1/secureEvents/filters'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secureEvents/filters\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secureEvents/filters\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secureEvents/{eventId}": {
        "get": {
          "summary": "Retrieves an event given its id",
          "description": "Retrieves an event with a given id.\n",
          "tags": [
            "Secure Events"
          ],
          "parameters": [
            {
              "name": "eventId",
              "description": "The event id.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string",
                "example": "15cbf54e34df95404caad1c988cf7c42"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Event with the given id.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "id",
                      "cursor",
                      "timestamp",
                      "customerId",
                      "originator",
                      "source",
                      "category",
                      "name",
                      "description",
                      "severity",
                      "machineId",
                      "actions",
                      "labels"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The event id.",
                        "example": "15cbf54e34df95404caad1c988cf7c42"
                      },
                      "cursor": {
                        "type": "string",
                        "description": "The cursor that can be used to fetch a set of events surrounding\nthis same event. By providing this value as `cursor` in a GET\n`secureEvents` request, you will get the set of events surrounding\nthis current event.\n",
                        "example": "LTltNGUybXIwdWkzZThhMjE1bjRn"
                      },
                      "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp the event occured.",
                        "example": "2020-04-21T16:08:08.845336507Z"
                      },
                      "customerId": {
                        "type": "number",
                        "format": "int64",
                        "description": "The customer id.",
                        "example": 1
                      },
                      "originator": {
                        "type": "string",
                        "description": "Type of the event (i.e. policy, scanning etc.).",
                        "example": "policy"
                      },
                      "source": {
                        "type": "string",
                        "description": "Source of the event.",
                        "example": "k8s_audit"
                      },
                      "category": {
                        "type": "string",
                        "description": "The event category.",
                        "enum": [
                          "runtime",
                          "simulation"
                        ],
                        "example": "runtime"
                      },
                      "name": {
                        "type": "string",
                        "description": "The event name.",
                        "example": "Launch Privileged Container"
                      },
                      "description": {
                        "type": "string",
                        "description": "The event description.",
                        "example": "Identify a container being created with privileged=true\n"
                      },
                      "severity": {
                        "type": "number",
                        "description": "The event severity.",
                        "minimum": 0,
                        "maximum": 7,
                        "example": 4
                      },
                      "agentId": {
                        "type": "number",
                        "format": "int64",
                        "description": "The agent id.",
                        "example": 1
                      },
                      "containerId": {
                        "type": "string",
                        "description": "The container id.",
                        "example": "df5f83c5d5e5"
                      },
                      "machineId": {
                        "type": "string",
                        "description": "The machine id (i.e. hostname).",
                        "example": "02:37:22:86:ce:53"
                      },
                      "actions": {
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "title": "Capture",
                              "type": "object",
                              "description": "Capture action performed once the event happened.",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Capture action type.",
                                  "enum": [
                                    "capture"
                                  ]
                                },
                                "successful": {
                                  "type": "boolean",
                                  "description": "Whether or not the action was completed successfully."
                                },
                                "errMsg": {
                                  "description": "When `successful == false`, details on why the action failed.\n",
                                  "type": "string"
                                },
                                "token": {
                                  "type": "string",
                                  "description": "Token that can be related to later messages.",
                                  "example": "4f24c92e-48f5-45ab-84a5-c394f07e855e"
                                },
                                "afterEventNs": {
                                  "type": "number",
                                  "format": "int64",
                                  "description": "Period of time to capture after event in nanoseconds.\n",
                                  "example": 18000000000
                                },
                                "beforeEventNs": {
                                  "type": "number",
                                  "format": "int64",
                                  "description": "Period of time to capture before event in nanoseconds.\n",
                                  "example": 5000000000
                                }
                              }
                            },
                            {
                              "title": "Container paused",
                              "type": "object",
                              "description": "Container paused action performed once the event happened.",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Container paused action type.",
                                  "enum": [
                                    "container paused"
                                  ]
                                },
                                "successful": {
                                  "type": "boolean",
                                  "description": "Whether or not the action was completed successfully."
                                },
                                "errMsg": {
                                  "description": "When `successful == false`, details on why the action failed.\n",
                                  "type": "string"
                                },
                                "token": {
                                  "type": "string",
                                  "description": "Token that can be related to later messages.",
                                  "example": "4f24c92e-48f5-45ab-84a5-c394f07e855e"
                                }
                              }
                            },
                            {
                              "title": "Container stopped",
                              "type": "object",
                              "description": "Container stopped action performed once the event happened.",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Container stopped action type.",
                                  "enum": [
                                    "container stopped"
                                  ]
                                },
                                "successful": {
                                  "type": "boolean",
                                  "description": "Whether or not the action was completed successfully."
                                },
                                "errMsg": {
                                  "description": "When `successful == false`, details on why the action failed.\n",
                                  "type": "string"
                                },
                                "token": {
                                  "type": "string",
                                  "description": "Token that can be related to later messages.",
                                  "example": "4f24c92e-48f5-45ab-84a5-c394f07e855e"
                                }
                              }
                            },
                            {
                              "title": "Container killed",
                              "type": "object",
                              "description": "Container killed action performed once the event happened.",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Action type.",
                                  "enum": [
                                    "container killed"
                                  ]
                                },
                                "successful": {
                                  "type": "boolean",
                                  "description": "Whether or not the action was completed successfully."
                                },
                                "errMsg": {
                                  "description": "When `successful == false`, details on why the action failed.\n",
                                  "type": "string"
                                },
                                "token": {
                                  "type": "string",
                                  "description": "Token that can be related to later messages.",
                                  "example": "4f24c92e-48f5-45ab-84a5-c394f07e855e"
                                }
                              }
                            },
                            {
                              "title": "Scan image",
                              "type": "object",
                              "description": "Scan image action performed once the event happened.",
                              "required": [
                                "type"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Scan image action type.",
                                  "enum": [
                                    "scan image"
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      },
                      "content": {
                        "type": "object",
                        "description": "Body of the specific event. It contains fields that are specific to\na single event and are not shared among different event types.\n",
                        "oneOf": [
                          {
                            "title": "Policy Event",
                            "type": "object",
                            "required": [
                              "policyId",
                              "ruleName",
                              "ruleType",
                              "ruleSubType",
                              "ruleTags",
                              "output",
                              "fields",
                              "falsePositive",
                              "matchedOnDefault"
                            ],
                            "properties": {
                              "policyId": {
                                "type": "number",
                                "format": "integer",
                                "description": "Policy ID.",
                                "example": 2
                              },
                              "ruleName": {
                                "type": "string",
                                "description": "Rule name.",
                                "example": "Terminal shell in container"
                              },
                              "ruleType": {
                                "type": "number",
                                "format": "integer",
                                "description": "Rule type.",
                                "example": 6
                              },
                              "ruleSubType": {
                                "type": "number",
                                "format": "integer",
                                "description": "Rule subtype.",
                                "example": 0
                              },
                              "ruleTags": {
                                "description": "Rule tags.",
                                "type": "array",
                                "items": {
                                  "type": "object"
                                },
                                "example": [
                                  "mitre_credential_access",
                                  "mitre_discovery",
                                  "filesystem"
                                ]
                              },
                              "output": {
                                "type": "string",
                                "description": "Output of the policy event.",
                                "example": "File below a known binary directory opened for writing...\n"
                              },
                              "fields": {
                                "type": "object",
                                "description": "Attribute fields of the policy event.\n"
                              },
                              "falsePositive": {
                                "type": "boolean",
                                "default": false,
                                "example": false
                              },
                              "matchedOnDefault": {
                                "type": "boolean",
                                "default": false,
                                "example": false
                              }
                            }
                          },
                          {
                            "title": "Scanning Event",
                            "type": "object",
                            "required": [
                              "alertId",
                              "trigger",
                              "alertName",
                              "alertUrl",
                              "scanResultUrl",
                              "image",
                              "result"
                            ],
                            "properties": {
                              "alertId": {
                                "type": "string",
                                "description": "The alert id.",
                                "example": "abcdaaaaaa"
                              },
                              "trigger": {
                                "type": "string",
                                "description": "Event trigger.",
                                "example": "Unscanned Image"
                              },
                              "alertName": {
                                "type": "string",
                                "description": "Alert Name.",
                                "example": "Notify CVE Result change in store frontend"
                              },
                              "alertUrl": {
                                "type": "string",
                                "description": "Edit alert link."
                              },
                              "scanResultUrl": {
                                "type": "string",
                                "description": "Scan result link."
                              },
                              "image": {
                                "description": "Docker image metadata.",
                                "type": "object",
                                "required": [
                                  "id",
                                  "repo",
                                  "registry",
                                  "tag",
                                  "digest"
                                ],
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "format": "int64",
                                    "description": "Image ID.",
                                    "example": 5.353536363873897e+38
                                  },
                                  "repo": {
                                    "type": "string",
                                    "description": "Image repository.",
                                    "example": "alpine"
                                  },
                                  "registry": {
                                    "type": "string",
                                    "description": "Image registry.",
                                    "example": "quay.io"
                                  },
                                  "tag": {
                                    "type": "string",
                                    "description": "Image tag.",
                                    "example": "3.11.2"
                                  },
                                  "digest": {
                                    "type": "string",
                                    "description": "Image digest.",
                                    "example": "sha256:1234432342323232323232323232323232323232"
                                  }
                                }
                              },
                              "result": {
                                "type": "string",
                                "description": "Scanning Result.",
                                "enum": [
                                  "Failed",
                                  "Passed"
                                ],
                                "example": "Failed"
                              },
                              "cveUpdate": {
                                "type": "object",
                                "required": [
                                  "added",
                                  "updated",
                                  "removed"
                                ],
                                "properties": {
                                  "added": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "severity",
                                        "packageName",
                                        "fixAvailable"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "feed": {
                                          "type": "string"
                                        },
                                        "feedGroup": {
                                          "type": "string"
                                        },
                                        "fixAvailable": {
                                          "type": "boolean"
                                        },
                                        "packageName": {
                                          "type": "string"
                                        },
                                        "packageType": {
                                          "type": "string"
                                        },
                                        "packageVersion": {
                                          "type": "string"
                                        },
                                        "severity": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        },
                                        "vulnerablePackage": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "updated": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "severity",
                                        "packageName",
                                        "fixAvailable"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "feed": {
                                          "type": "string"
                                        },
                                        "feedGroup": {
                                          "type": "string"
                                        },
                                        "fixAvailable": {
                                          "type": "boolean"
                                        },
                                        "packageName": {
                                          "type": "string"
                                        },
                                        "packageType": {
                                          "type": "string"
                                        },
                                        "packageVersion": {
                                          "type": "string"
                                        },
                                        "severity": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        },
                                        "vulnerablePackage": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  },
                                  "removed": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "id",
                                        "severity",
                                        "packageName",
                                        "fixAvailable"
                                      ],
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "feed": {
                                          "type": "string"
                                        },
                                        "feedGroup": {
                                          "type": "string"
                                        },
                                        "fixAvailable": {
                                          "type": "boolean"
                                        },
                                        "packageName": {
                                          "type": "string"
                                        },
                                        "packageType": {
                                          "type": "string"
                                        },
                                        "packageVersion": {
                                          "type": "string"
                                        },
                                        "severity": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        },
                                        "vulnerablePackage": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          {
                            "title": "Profiling Detection Event",
                            "type": "object",
                            "required": [
                              "timestampNs",
                              "customerId",
                              "machineId",
                              "containerId",
                              "imageId",
                              "imageName",
                              "command",
                              "exe",
                              "mlModel",
                              "detectedClassProbability",
                              "detectedClass"
                            ],
                            "properties": {
                              "timestampNs": {
                                "type": "integer",
                                "description": "The timestamp in nanoseconds",
                                "example": 1546300800000000000
                              },
                              "customerId": {
                                "type": "integer",
                                "description": "The customer ID",
                                "example": 12345
                              },
                              "machineId": {
                                "type": "string",
                                "description": "The host mac",
                                "example": "04:2a:d5:cf:aa:bc"
                              },
                              "containerId": {
                                "type": "string",
                                "description": "The container ID",
                                "example": "789ca4dd08dd"
                              },
                              "imageId": {
                                "type": "string",
                                "description": "The image ID",
                                "example": 5.353536363873897e+38
                              },
                              "imageName": {
                                "type": "string",
                                "description": "The image name"
                              },
                              "command": {
                                "type": "string",
                                "description": "The command name",
                                "example": "bash"
                              },
                              "exe": {
                                "type": "string",
                                "description": "The command path",
                                "example": "/bin/bash"
                              },
                              "mlModel": {
                                "type": "string",
                                "description": "The Machine Learning model name"
                              },
                              "detectedClassProbability": {
                                "type": "number",
                                "format": "float",
                                "description": "The detected class probability (confidence score)",
                                "minimum": 0,
                                "maximum": 1,
                                "example": 0.8
                              },
                              "detectedClass": {
                                "type": "number",
                                "format": "string",
                                "description": "The detection class",
                                "enum": [
                                  "miner"
                                ]
                              }
                            }
                          }
                        ]
                      },
                      "label": {
                        "type": "object",
                        "description": "Key value pairs of labels.",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The event could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition that prevented it from\nfulfilling the request.\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "message"
                    ],
                    "properties": {
                      "message": {
                        "type": "string",
                        "description": "The error message."
                      },
                      "requestId": {
                        "type": "string",
                        "description": "The request ID."
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secureEvents/%7BeventId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/secureEvents/%7BeventId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/secureEvents/%7BeventId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secureEvents/%7BeventId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secureEvents/%7BeventId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/vi/secureEvents/count": {
        "get": {
          "summary": "Retrieves the count of scanning and policy events.",
          "description": "Retrieves the count of events that match a `filter` given a specified time range (`from <= to`). Parameters `from` and `to` are required.\n",
          "tags": [
            "Secure Events"
          ],
          "parameters": [
            {
              "name": "from",
              "description": "From, expressed in nanoseconds. The difference between `from` and `to`\ncannot be greater than 2 weeks.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "int64",
                "minimum": 0,
                "example": 1546300800000000000
              }
            },
            {
              "name": "to",
              "description": "To, expressed in nanoseconds. The difference between `from` and `to`\ncannot be greater than 2 weeks.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "int64",
                "minimum": 0,
                "example": 1546300800000000000
              }
            },
            {
              "name": "filter",
              "description": "Query language expression for filtering results. It is a subset of the\nfull metrics query language used in monitoring.\n\nOperators:\n- `and`, `or` and `not` logical operators (i.e. `pid = 1 and ppid = 2`)\n- `=`, `!=`, `>`, `>=`, `<` and `<=` comparison operators (i.e. `pid = 1`)\n- `in` to check inclusion in a list of values (i.e. `pid in (1, 2)` or\n`clientipv4 in (\"127.0.0.1\", \"192.168.0.1\")`)\n\nThis query language does not support the full set of metrics supported\nin the monitor query language, but instead supports a set of fields\nproper to each audit events type.\n\nThe list of supported fields can be retrieved through the\n`eventsFeedFilters` endpoint. In addition to those fields, also these\nfields are supported:\n- `severity` as numeric value in the `[0, 7]` range\n- `category` as string value\n- `originator` as string value (either  `policy` or `scanning`)\n- `name` as string value\n- `freeText` as string value\n- `source` as string value\n- `agentId` as numeric value\n- `containerId` as string value\n- `machineId` as string value\n- `ruleName` as string value\n- `ruleType` as numeric value\n- `ruleSubType` as numeric value\n- `policyId` as numeric value\n- `alertName` as string value\n- `trigger` as string value\n- `image.id` as string value\n- `image.registry` as string value\n- `image.repo` as string value\n- `image.tag` as string value\n- `image.digest` as string value\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "example": "agent.id=1"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The scanning and secure events count by severity.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "scanningEvents",
                      "policyEvents",
                      "profilingDetectionEvents"
                    ],
                    "properties": {
                      "scanningEvents": {
                        "type": "object",
                        "required": [
                          "countBySeverity"
                        ],
                        "properties": {
                          "countBySeverity": {
                            "type": "object",
                            "description": "The count of events separatelly for each severity level.\n",
                            "example": {
                              "1": 0,
                              "2": 0,
                              "3": 0,
                              "4": 0,
                              "5": 0,
                              "6": 0,
                              "7": 0
                            }
                          }
                        }
                      },
                      "policyEvents": {
                        "type": "object",
                        "required": [
                          "countBySeverity"
                        ],
                        "properties": {
                          "countBySeverity": {
                            "type": "object",
                            "description": "The count of events separatelly for each severity level.\n",
                            "example": {
                              "1": 0,
                              "2": 0,
                              "3": 0,
                              "4": 0,
                              "5": 0,
                              "6": 0,
                              "7": 0
                            }
                          }
                        }
                      },
                      "profilingDetectionEvents": {
                        "type": "object",
                        "required": [
                          "countBySeverity"
                        ],
                        "properties": {
                          "countBySeverity": {
                            "type": "object",
                            "description": "The count of events separately for each severity level.\n",
                            "example": {
                              "1": 0,
                              "2": 0,
                              "3": 0,
                              "4": 0,
                              "5": 0,
                              "6": 0,
                              "7": 0
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The query parameters are missing or invalid"
            },
            "403": {
              "description": "The provided access token is invalid"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/vi/secureEvents/count?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/vi/secureEvents/count?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/vi/secureEvents/count',\n  qs: {from: '1546300800000000000', to: '1546300800000000000', filter: 'agent.id=1'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/vi/secureEvents/count?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/vi/secureEvents/count?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/vi/secureEvents/topStats": {
        "get": {
          "summary": "Retrieves top column value and counts of events by cluster, compliance, mitre, namespace, node, rule name, workload.",
          "description": "Retrieves the top column value and counts of policy events that match a `filter`, specified time range (`from` <= `to`), and number of rows to return for all columns.\nParameters `from` and `to` are required.\n",
          "tags": [
            "Secure Events"
          ],
          "parameters": [
            {
              "name": "from",
              "description": "From, expressed in nanoseconds. The difference between `from` and `to`\ncannot be greater than 2 weeks.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "int64",
                "minimum": 0,
                "example": 1546300800000000000
              }
            },
            {
              "name": "to",
              "description": "To, expressed in nanoseconds. The difference between `from` and `to`\ncannot be greater than 2 weeks.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "int64",
                "minimum": 0,
                "example": 1546300800000000000
              }
            },
            {
              "name": "filter",
              "description": "Query language expression for filtering results. It is a subset of the\nfull metrics query language used in monitoring.\n\nOperators:\n- `and`, `or` and `not` logical operators (i.e. `pid = 1 and ppid = 2`)\n- `=`, `!=`, `>`, `>=`, `<` and `<=` comparison operators (i.e. `pid = 1`)\n- `in` to check inclusion in a list of values (i.e. `pid in (1, 2)` or\n`clientipv4 in (\"127.0.0.1\", \"192.168.0.1\")`)\n\nThis query language does not support the full set of metrics supported\nin the monitor query language, but instead supports a set of fields\nproper to each audit events type.\n\nThe list of supported fields can be retrieved through the\n`eventsFeedFilters` endpoint. In addition to those fields, also these\nfields are supported:\n- `severity` as numeric value in the `[0, 7]` range\n- `category` as string value\n- `originator` as string value (either  `policy` or `scanning`)\n- `name` as string value\n- `freeText` as string value\n- `source` as string value\n- `agentId` as numeric value\n- `containerId` as string value\n- `machineId` as string value\n- `ruleName` as string value\n- `ruleType` as numeric value\n- `ruleSubType` as numeric value\n- `policyId` as numeric value\n- `alertName` as string value\n- `trigger` as string value\n- `image.id` as string value\n- `image.registry` as string value\n- `image.repo` as string value\n- `image.tag` as string value\n- `image.digest` as string value\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "example": "agent.id=1"
              }
            },
            {
              "name": "rows",
              "description": "Describes how many rows of counts should be returned for each column category. Will be either 5 or 10.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "integer",
                "minimum": 5,
                "default": 5,
                "example": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The count stats of policy events for all columns.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "container.image.repo",
                      "kubernetes.cluster.name",
                      "kubernetes.namespace.name",
                      "kubernetes.node.name",
                      "mitre",
                      "ruleName",
                      "workload"
                    ],
                    "properties": {
                      "container.image.repo": {
                        "type": "array",
                        "description": "Array of the count of events per compliance tag, sorted by count.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "count",
                            "label"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "String key value\n",
                              "example": "NIST"
                            },
                            "count": {
                              "type": "integer",
                              "description": "Integer value representing count of events. \n",
                              "example": 543
                            },
                            "label": {
                              "type": "string",
                              "description": "String label value that represents the field\n",
                              "example": "kubernetes.deployment.name"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "quay.io/sysdig/dev",
                            "count": 43,
                            "label": "container.image.repo"
                          },
                          {
                            "key": "quay.io/elastic",
                            "count": 23,
                            "label": "container.image.repo"
                          },
                          {
                            "key": "docker.io/ubuntu",
                            "count": 13,
                            "label": "container.image.repo"
                          },
                          {
                            "key": "quay.io/sysdig/policies",
                            "count": 12,
                            "label": "container.image.repo"
                          },
                          {
                            "key": "docker.io/nginx",
                            "count": 2,
                            "label": "container.image.repo"
                          }
                        ]
                      },
                      "kubernetes.cluster.name": {
                        "type": "array",
                        "description": "Array of the count of events per cluster, sorted by count.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "count",
                            "label"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "String key value\n",
                              "example": "NIST"
                            },
                            "count": {
                              "type": "integer",
                              "description": "Integer value representing count of events. \n",
                              "example": 543
                            },
                            "label": {
                              "type": "string",
                              "description": "String label value that represents the field\n",
                              "example": "kubernetes.deployment.name"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "dev2",
                            "count": 100,
                            "label": "kubernetes.cluster.name"
                          },
                          {
                            "key": "staging",
                            "count": 40,
                            "label": "kubernetes.cluster.name"
                          },
                          {
                            "key": "dev",
                            "count": 35,
                            "label": "kubernetes.cluster.name"
                          },
                          {
                            "key": "qa",
                            "count": 20,
                            "label": "kubernetes.cluster.name"
                          },
                          {
                            "key": "prod",
                            "count": 3,
                            "label": "kubernetes.cluster.name"
                          }
                        ]
                      },
                      "kubernetes.namespace.name": {
                        "type": "array",
                        "description": "Array of the count of events per namespace, sorted by count.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "count",
                            "label"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "String key value\n",
                              "example": "NIST"
                            },
                            "count": {
                              "type": "integer",
                              "description": "Integer value representing count of events. \n",
                              "example": 543
                            },
                            "label": {
                              "type": "string",
                              "description": "String label value that represents the field\n",
                              "example": "kubernetes.deployment.name"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "default",
                            "count": 10,
                            "label": "kubernetes.namespace.name"
                          },
                          {
                            "key": "sysdigcloud",
                            "count": 4,
                            "label": "kubernetes.namespace.name"
                          },
                          {
                            "key": "sysdig-agent",
                            "count": 3,
                            "label": "kubernetes.namespace.name"
                          },
                          {
                            "key": "sysdig",
                            "count": 2,
                            "label": "kubernetes.namespace.name"
                          },
                          {
                            "key": "test",
                            "count": 0,
                            "label": "kubernetes.namespace.name"
                          }
                        ]
                      },
                      "kubernetes.node.name": {
                        "type": "array",
                        "description": "Array of the count of nodes, sorted by count.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "count",
                            "label"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "String key value\n",
                              "example": "NIST"
                            },
                            "count": {
                              "type": "integer",
                              "description": "Integer value representing count of events. \n",
                              "example": 543
                            },
                            "label": {
                              "type": "string",
                              "description": "String label value that represents the field\n",
                              "example": "kubernetes.deployment.name"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "ip-432-43-217-754",
                            "count": 43,
                            "label": "kubernetes.node.name"
                          },
                          {
                            "key": "ip-132-43-115-754",
                            "count": 23,
                            "label": "kubernetes.node.name"
                          },
                          {
                            "key": "ip-112-43-217-254",
                            "count": 13,
                            "label": "kubernetes.node.name"
                          },
                          {
                            "key": "ip-115-23-112-724",
                            "count": 12,
                            "label": "kubernetes.node.name"
                          },
                          {
                            "key": "ip-109-43-217-354",
                            "count": 2,
                            "label": "kubernetes.node.name"
                          }
                        ]
                      },
                      "mitre": {
                        "type": "array",
                        "description": "Array of the count of events per mitre sub-tag, sorted by count.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "count",
                            "label"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "String key value\n",
                              "example": "NIST"
                            },
                            "count": {
                              "type": "integer",
                              "description": "Integer value representing count of events. \n",
                              "example": 543
                            },
                            "label": {
                              "type": "string",
                              "description": "String label value that represents the field\n",
                              "example": "kubernetes.deployment.name"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "Initial access",
                            "count": 233,
                            "label": "ruleTags"
                          },
                          {
                            "key": "Execution",
                            "count": 219,
                            "label": "ruleTags"
                          },
                          {
                            "key": "Persistence",
                            "count": 3,
                            "label": "ruleTags"
                          }
                        ]
                      },
                      "ruleName": {
                        "type": "array",
                        "description": "Array of the count of events per rule name, sorted by count.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "count",
                            "label"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "String key value\n",
                              "example": "NIST"
                            },
                            "count": {
                              "type": "integer",
                              "description": "Integer value representing count of events. \n",
                              "example": 543
                            },
                            "label": {
                              "type": "string",
                              "description": "String label value that represents the field\n",
                              "example": "kubernetes.deployment.name"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "Launch Suspicious Network Tool",
                            "count": 43,
                            "label": "ruleName"
                          },
                          {
                            "key": "Write below root",
                            "count": 23,
                            "label": "ruleName"
                          },
                          {
                            "key": "Write below etc",
                            "count": 13,
                            "label": "ruleName"
                          },
                          {
                            "key": "Modify binary dirs",
                            "count": 12,
                            "label": "ruleName"
                          },
                          {
                            "key": "Clear log activities",
                            "count": 2,
                            "label": "ruleName"
                          }
                        ]
                      },
                      "workload": {
                        "type": "array",
                        "description": "Array of the count of workloads per workload type and name, sorted by count.\n",
                        "items": {
                          "type": "object",
                          "required": [
                            "key",
                            "count",
                            "label"
                          ],
                          "properties": {
                            "key": {
                              "type": "string",
                              "description": "String key value\n",
                              "example": "NIST"
                            },
                            "count": {
                              "type": "integer",
                              "description": "Integer value representing count of events. \n",
                              "example": 543
                            },
                            "label": {
                              "type": "string",
                              "description": "String label value that represents the field\n",
                              "example": "kubernetes.deployment.name"
                            }
                          }
                        },
                        "example": [
                          {
                            "key": "sysdig-agent",
                            "count": 43,
                            "label": "kubernetes.daemonSet.name"
                          },
                          {
                            "key": "sysdigcloud-api",
                            "count": 23,
                            "label": "kubernetes.deployment.name"
                          },
                          {
                            "key": "sysdigcloud-netsec-ingest",
                            "count": 13,
                            "label": "kubernetes.statefulset.name"
                          },
                          {
                            "key": "sysdigcloud-netsec-janitor",
                            "count": 12,
                            "label": "kubernetes.cronJob.name"
                          },
                          {
                            "key": "sysdigcloud-policies-init-job",
                            "count": 2,
                            "label": "kubernetes.job.name"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The query parameters are missing or invalid"
            },
            "403": {
              "description": "The provided access token is invalid"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/vi/secureEvents/topStats?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1&rows=10\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/vi/secureEvents/topStats?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1&rows=10'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/vi/secureEvents/topStats',\n  qs: {\n    from: '1546300800000000000',\n    to: '1546300800000000000',\n    filter: 'agent.id=1',\n    rows: '10'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/vi/secureEvents/topStats?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1&rows=10\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/vi/secureEvents/topStats?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1&rows=10\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/vi/secureEvents/timeSeries": {
        "get": {
          "summary": "Retrieves timeseries counts of events by severity or user.",
          "description": "Retrieves the top column value and counts of policy events that match a `filter`, specified time range (`from` <= `to`), and number of rows to return for all columns.\nParameters `from`, `to`, and `metric` are required.\n",
          "tags": [
            "Secure Events"
          ],
          "parameters": [
            {
              "name": "from",
              "description": "From, expressed in nanoseconds. The difference between `from` and `to`\ncannot be greater than 2 weeks.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "int64",
                "minimum": 0,
                "example": 1546300800000000000
              }
            },
            {
              "name": "to",
              "description": "To, expressed in nanoseconds. The difference between `from` and `to`\ncannot be greater than 2 weeks.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "int64",
                "minimum": 0,
                "example": 1546300800000000000
              }
            },
            {
              "name": "filter",
              "description": "Query language expression for filtering results. It is a subset of the\nfull metrics query language used in monitoring.\n\nOperators:\n- `and`, `or` and `not` logical operators (i.e. `pid = 1 and ppid = 2`)\n- `=`, `!=`, `>`, `>=`, `<` and `<=` comparison operators (i.e. `pid = 1`)\n- `in` to check inclusion in a list of values (i.e. `pid in (1, 2)` or\n`clientipv4 in (\"127.0.0.1\", \"192.168.0.1\")`)\n\nThis query language does not support the full set of metrics supported\nin the monitor query language, but instead supports a set of fields\nproper to each audit events type.\n\nThe list of supported fields can be retrieved through the\n`eventsFeedFilters` endpoint. In addition to those fields, also these\nfields are supported:\n- `severity` as numeric value in the `[0, 7]` range\n- `category` as string value\n- `originator` as string value (either  `policy` or `scanning`)\n- `name` as string value\n- `freeText` as string value\n- `source` as string value\n- `agentId` as numeric value\n- `containerId` as string value\n- `machineId` as string value\n- `ruleName` as string value\n- `ruleType` as numeric value\n- `ruleSubType` as numeric value\n- `policyId` as numeric value\n- `alertName` as string value\n- `trigger` as string value\n- `image.id` as string value\n- `image.registry` as string value\n- `image.repo` as string value\n- `image.tag` as string value\n- `image.digest` as string value\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "example": "agent.id=1"
              }
            },
            {
              "name": "rows",
              "description": "Describes how many rows of counts should be returned for each column category. Will be either 5 or 10.\n",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "integer",
                "minimum": 5,
                "default": 5,
                "example": 10
              }
            },
            {
              "name": "metric",
              "description": "The metric to query timeseries for. Valid values are either `user` or `severity`.\n",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "example": "severity"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The time series stats of runtime policy events for the specified columns.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "data",
                      "step"
                    ],
                    "properties": {
                      "step": {
                        "type": "number",
                        "format": "integer",
                        "description": "This is the distance between points from and to in values expressed in nanoseconds.\n",
                        "example": 600000000000
                      },
                      "data": {
                        "type": "object",
                        "required": [
                          "severity",
                          "user"
                        ],
                        "properties": {
                          "severity": {
                            "type": "array",
                            "description": "Array of the count of events per severity and segmented.\n",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "counts"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "String key value\n",
                                  "example": "Cloud Trail"
                                },
                                "counts": {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "integer"
                                    }
                                  },
                                  "description": "Array of the counts of events, segmented into buckets.\n",
                                  "example": [
                                    [
                                      1652890200000000000,
                                      0
                                    ],
                                    [
                                      1652890800000000000,
                                      50
                                    ],
                                    [
                                      1652891400000000000,
                                      12
                                    ],
                                    [
                                      1652892000000000000,
                                      0
                                    ],
                                    [
                                      1652892600000000000,
                                      69
                                    ]
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "1",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    0
                                  ],
                                  [
                                    1652890800000000000,
                                    50
                                  ],
                                  [
                                    1652891400000000000,
                                    12
                                  ],
                                  [
                                    1652892000000000000,
                                    0
                                  ],
                                  [
                                    1652892600000000000,
                                    69
                                  ]
                                ]
                              },
                              {
                                "key": "2",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    385
                                  ],
                                  [
                                    1652890800000000000,
                                    400
                                  ],
                                  [
                                    1652891400000000000,
                                    425
                                  ],
                                  [
                                    1652892000000000000,
                                    480
                                  ],
                                  [
                                    1652892600000000000,
                                    100
                                  ]
                                ]
                              },
                              {
                                "key": "3",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    450
                                  ],
                                  [
                                    1652890800000000000,
                                    308
                                  ],
                                  [
                                    1652891400000000000,
                                    342
                                  ],
                                  [
                                    1652892000000000000,
                                    50
                                  ],
                                  [
                                    1652892600000000000,
                                    14
                                  ]
                                ]
                              },
                              {
                                "key": "4",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    0
                                  ],
                                  [
                                    1652890800000000000,
                                    0
                                  ],
                                  [
                                    1652891400000000000,
                                    0
                                  ],
                                  [
                                    1652892000000000000,
                                    0
                                  ],
                                  [
                                    1652892600000000000,
                                    0
                                  ]
                                ]
                              },
                              {
                                "key": "5",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    0
                                  ],
                                  [
                                    1652890800000000000,
                                    0
                                  ],
                                  [
                                    1652891400000000000,
                                    0
                                  ],
                                  [
                                    1652892000000000000,
                                    0
                                  ],
                                  [
                                    1652892600000000000,
                                    0
                                  ]
                                ]
                              },
                              {
                                "key": "6",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    5
                                  ],
                                  [
                                    1652890800000000000,
                                    3
                                  ],
                                  [
                                    1652891400000000000,
                                    5
                                  ],
                                  [
                                    1652892000000000000,
                                    5
                                  ],
                                  [
                                    1652892600000000000,
                                    5
                                  ]
                                ]
                              },
                              {
                                "key": "7",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    0
                                  ],
                                  [
                                    1652890800000000000,
                                    0
                                  ],
                                  [
                                    1652891400000000000,
                                    0
                                  ],
                                  [
                                    1652892000000000000,
                                    0
                                  ],
                                  [
                                    1652892600000000000,
                                    0
                                  ]
                                ]
                              }
                            ]
                          },
                          "user": {
                            "type": "array",
                            "description": "Array of the count of events per user and segmented.\n",
                            "items": {
                              "type": "object",
                              "required": [
                                "key",
                                "counts"
                              ],
                              "properties": {
                                "key": {
                                  "type": "string",
                                  "description": "String key value\n",
                                  "example": "Cloud Trail"
                                },
                                "counts": {
                                  "type": "array",
                                  "items": {
                                    "type": "array",
                                    "items": {
                                      "type": "integer"
                                    }
                                  },
                                  "description": "Array of the counts of events, segmented into buckets.\n",
                                  "example": [
                                    [
                                      1652890200000000000,
                                      0
                                    ],
                                    [
                                      1652890800000000000,
                                      50
                                    ],
                                    [
                                      1652891400000000000,
                                      12
                                    ],
                                    [
                                      1652892000000000000,
                                      0
                                    ],
                                    [
                                      1652892600000000000,
                                      69
                                    ]
                                  ]
                                }
                              }
                            },
                            "example": [
                              {
                                "key": "CloudTrail",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    4
                                  ],
                                  [
                                    1652890800000000000,
                                    5
                                  ],
                                  [
                                    1652891400000000000,
                                    10
                                  ],
                                  [
                                    1652892000000000000,
                                    8
                                  ],
                                  [
                                    1652892600000000000,
                                    4
                                  ]
                                ]
                              },
                              {
                                "key": "alvaro.iradier@sysdig.com",
                                "counts": [
                                  [
                                    1652890200000000000,
                                    49
                                  ],
                                  [
                                    1652890800000000000,
                                    50
                                  ],
                                  [
                                    1652891400000000000,
                                    17
                                  ],
                                  [
                                    1652892000000000000,
                                    8
                                  ],
                                  [
                                    1652892600000000000,
                                    29
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The query parameters are missing or invalid"
            },
            "403": {
              "description": "The provided access token is invalid"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/vi/secureEvents/timeSeries?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1&rows=10&metric=severity\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/vi/secureEvents/timeSeries?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1&rows=10&metric=severity'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/vi/secureEvents/timeSeries',\n  qs: {\n    from: '1546300800000000000',\n    to: '1546300800000000000',\n    filter: 'agent.id=1',\n    rows: '10',\n    metric: 'severity'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/vi/secureEvents/timeSeries?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1&rows=10&metric=severity\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/vi/secureEvents/timeSeries?from=1546300800000000000&to=1546300800000000000&filter=agent.id%3D1&rows=10&metric=severity\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/activityAudit/summary": {
        "get": {
          "summary": "Retrieve a summary of the audit events",
          "description": "Retrieves a summary of the audit events in a time range grouped by a\nseries of metrics.\n",
          "tags": [
            "Activity Audit"
          ],
          "parameters": [
            {
              "name": "from",
              "description": "From, expressed in nanoseconds.",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "long",
                "example": 1546300800000000000
              }
            },
            {
              "name": "to",
              "description": "To, expressed in nanoseconds.",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "long",
                "example": 1546300800000000000
              }
            },
            {
              "name": "metric",
              "description": "Metric used for aggregating results. The metric values are directly\nfetched from the metadata service, so please refer to it for the full\nlist of supported metrics.\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "host.hostName"
              }
            },
            {
              "name": "scopeFilter",
              "description": "Metrics query language expression for filtering results based on the scope. This filter is forwarded to the metadata service to scope down the number of results based on metrics attributes.\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "host.hostName=\"ip-127-0-0-1\""
              }
            },
            {
              "name": "filter",
              "description": "Query language expression for filtering results. It is a subset of the\nfull metrics query language used in monitoring.\n\nOperators:\n- `and`, `or` and `not` logical operators (i.e. `pid = 1 and ppid = 2`)\n- `=`, `!=`, `>`, `>=`, `<` and `<=` comparison operators (i.e. `pid = 1`)\n- `in` to check inclusion in a list of values (i.e. `pid in (1, 2)` or\n`clientipv4 in (\"127.0.0.1\", \"192.168.0.1\")`)\n\nThis query language does not support the full set of metrics supported\nin the monitor query language, but instead supports a set of fields\nproper to each audit events type.\n\nThese are the supported fields:\n- `id`\n- `agentid`\n- `auditid`\n- `clientipv4`\n- `clientport`\n- `cmdline`\n- `comm`\n- `command`\n- `containerid`\n- `count`\n- `customerid`\n- `cwd`\n- `direction`\n- `errorcode`\n- `l4protocol`\n- `loginshell.distance`\n- `loginshell.id`\n- `name`\n- `namespace`\n- `pid`\n- `ppid`\n- `processname`\n- `resource`\n- `rxtimestamp`\n- `serveripv4`\n- `serverport`\n- `sourceaddresses`\n- `stages`\n- `status`\n- `subresource`\n- `timestamp`\n- `uid`\n- `user`\n- `useragent`\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "pid=1"
              }
            },
            {
              "name": "types",
              "description": "The event types to filter. A comma separated list of one or more of \nthe following supported values:\n  - kubernetes\n  - commands\n  - connections\n  - fileaccesses\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "commands,connections"
              }
            },
            {
              "name": "segment",
              "description": "Whether or not to segment the results with a distance between points\ndepending on the distance between `from` and `to`.\n",
              "in": "query",
              "schema": {
                "type": "boolean",
                "default": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The summary of audit events.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "metric": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "step": {
                        "type": "number",
                        "format": "integer",
                        "description": "If segmented data has been requested, the distance between points\nin values expressed in nanoseconds.\n"
                      },
                      "values": {
                        "type": "object",
                        "properties": {
                          "command": {
                            "type": "array",
                            "description": "Series of tuples containing timestamp and values for a specific point in\ntime for the metric. Only present if there are elements matching the metric.\n",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "description": "The first element is always a timestamp expressed in\nnanoseconds and the second one the metric value.\n",
                                "minItems": 2,
                                "maxItems": 2
                              }
                            }
                          },
                          "connection": {
                            "type": "array",
                            "description": "Series of tuples containing timestamp and values for a specific point in\ntime for the metric. Only present if there are elements matching the metric.\n",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "description": "The first element is always a timestamp expressed in\nnanoseconds and the second one the metric value.\n",
                                "minItems": 2,
                                "maxItems": 2
                              }
                            }
                          },
                          "fileaccess": {
                            "type": "array",
                            "description": "Series of tuples containing timestamp and values for a specific point in\ntime for the metric. Only present if there are elements matching the metric.\n",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "description": "The first element is always a timestamp expressed in\nnanoseconds and the second one the metric value.\n",
                                "minItems": 2,
                                "maxItems": 2
                              }
                            }
                          },
                          "kubernetes": {
                            "type": "array",
                            "description": "Series of tuples containing timestamp and values for a specific point in\ntime for the metric. Only present if there are elements matching the metric.\n",
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "number",
                                "description": "The first element is always a timestamp expressed in\nnanoseconds and the second one the metric value.\n",
                                "minItems": 2,
                                "maxItems": 2
                              }
                            }
                          }
                        }
                      }
                    },
                    "example": [
                      {
                        "metric": {
                          "host.hostName": "ip-127-0-0-1"
                        },
                        "values": {
                          "command": [
                            [
                              1569065400000000000,
                              132
                            ],
                            [
                              1569065460000000000,
                              132
                            ],
                            [
                              1569065520000000000,
                              132
                            ],
                            [
                              1569065580000000000,
                              132
                            ]
                          ]
                        },
                        "step": 60000000000
                      },
                      {
                        "metric": {
                          "host.hostName": "ip-172-31-63-213"
                        },
                        "values": {
                          "command": [
                            [
                              1569065400000000000,
                              36
                            ],
                            [
                              1569065460000000000,
                              36
                            ],
                            [
                              1569065520000000000,
                              36
                            ],
                            [
                              1569065580000000000,
                              36
                            ]
                          ],
                          "connection": [
                            [
                              1569065400000000000,
                              36
                            ],
                            [
                              1569065460000000000,
                              36
                            ],
                            [
                              1569065520000000000,
                              36
                            ],
                            [
                              1569065580000000000,
                              36
                            ]
                          ],
                          "fileaccess": [
                            [
                              1569065400000000000,
                              36
                            ],
                            [
                              1569065460000000000,
                              36
                            ],
                            [
                              1569065520000000000,
                              36
                            ],
                            [
                              1569065580000000000,
                              36
                            ]
                          ],
                          "kubernetes": [
                            [
                              1569065400000000000,
                              36
                            ],
                            [
                              1569065460000000000,
                              36
                            ],
                            [
                              1569065520000000000,
                              36
                            ],
                            [
                              1569065580000000000,
                              36
                            ]
                          ]
                        },
                        "step": 60000000000
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/activityAudit/summary?from=1546300800000000000&to=1546300800000000000&metric=host.hostName&scopeFilter=host.hostName%3D%22ip-127-0-0-1%22&filter=pid%3D1&types=commands%2Cconnections&segment=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/activityAudit/summary?from=1546300800000000000&to=1546300800000000000&metric=host.hostName&scopeFilter=host.hostName%3D%22ip-127-0-0-1%22&filter=pid%3D1&types=commands%2Cconnections&segment=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/activityAudit/summary',\n  qs: {\n    from: '1546300800000000000',\n    to: '1546300800000000000',\n    metric: 'host.hostName',\n    scopeFilter: 'host.hostName=\"ip-127-0-0-1\"',\n    filter: 'pid=1',\n    types: 'commands,connections',\n    segment: 'SOME_BOOLEAN_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/activityAudit/summary?from=1546300800000000000&to=1546300800000000000&metric=host.hostName&scopeFilter=host.hostName%3D%22ip-127-0-0-1%22&filter=pid%3D1&types=commands%2Cconnections&segment=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/activityAudit/summary?from=1546300800000000000&to=1546300800000000000&metric=host.hostName&scopeFilter=host.hostName%3D%22ip-127-0-0-1%22&filter=pid%3D1&types=commands%2Cconnections&segment=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/activityAudit/events": {
        "get": {
          "summary": "Retrieves a list of audit events",
          "description": "Retrieves a list of audit events in a time range filters.\nThe pair `from` and `to` and the `cursor` parameter are mutually\nexclusive. If you supply a `from` and `to` you must not supply a\n`cursor` and vice-versa.\n",
          "tags": [
            "Activity Audit"
          ],
          "parameters": [
            {
              "name": "from",
              "description": "From, expressed in nanoseconds.",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "long",
                "example": 1546300800000000000
              }
            },
            {
              "name": "to",
              "description": "To, expressed in nanoseconds.",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "long",
                "example": 1546300800000000000
              }
            },
            {
              "name": "cursor",
              "description": "Cursor is a string used to retrieve data given a specific context. The context can either be audit events before a certain event, after it or its surrounding.\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "LTltNGUybXIwdWkzZThhMjE1bjRn"
              }
            },
            {
              "name": "limit",
              "description": "Limit the number of results to return.",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "integer",
                "example": 100,
                "minimum": 1,
                "maximum": 9999,
                "default": 100
              }
            },
            {
              "name": "scopeFilter",
              "description": "Metrics query language expression for filtering results based on the scope. This filter is forwarded to the metadata service to scope down the number of results based on metrics attributes.\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "host.hostName=\"ip-127-0-0-1\""
              }
            },
            {
              "name": "filter",
              "description": "Query language expression for filtering results. It is a subset of the\nfull metrics query language used in monitoring.\n\nOperators:\n- `and`, `or` and `not` logical operators (i.e. `pid = 1 and ppid = 2`)\n- `=`, `!=`, `>`, `>=`, `<` and `<=` comparison operators (i.e. `pid = 1`)\n- `in` to check inclusion in a list of values (i.e. `pid in (1, 2)` or\n`clientipv4 in (\"127.0.0.1\", \"192.168.0.1\")`)\n\nThis query language does not support the full set of metrics supported\nin the monitor query language, but instead supports a set of fields\nproper to each audit events type.\n\nThese are the supported fields:\n- `id`\n- `agentid`\n- `auditid`\n- `clientipv4`\n- `clientport`\n- `cmdline`\n- `comm`\n- `command`\n- `containerid`\n- `count`\n- `customerid`\n- `cwd`\n- `direction`\n- `errorcode`\n- `l4protocol`\n- `loginshell.distance`\n- `loginshell.id`\n- `name`\n- `namespace`\n- `pid`\n- `ppid`\n- `processname`\n- `resource`\n- `rxtimestamp`\n- `serveripv4`\n- `serverport`\n- `sourceaddresses`\n- `stages`\n- `status`\n- `subresource`\n- `timestamp`\n- `uid`\n- `user`\n- `useragent`\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "pid=1"
              }
            },
            {
              "name": "types",
              "description": "The event types to filter. A comma separated list of one or more of \nthe following supported values:\n  - kubernetes\n  - commands\n  - connections\n  - fileaccesses\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "commands,connections"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The list of audit events.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "page": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "number",
                            "format": "integer",
                            "description": "The number of audit events returned. This number is always less or\nequal the limit specified in the request.\n",
                            "example": 10
                          },
                          "prev": {
                            "type": "string",
                            "description": "The continuation token used to fetch a set of audit events before\nthe current one.\n",
                            "example": "LTltNGUybXIwdWkzZThhMjE1bjRn"
                          },
                          "next": {
                            "type": "string",
                            "description": "The continuation token used to fetch a set of audit events after the\ncurrent one.\n",
                            "example": "KzltNGUybXIwdWkzZThhMjE1bjRn"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "description": "Represents a command execution.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "customerId",
                                    "agentId",
                                    "timestamp",
                                    "rxTimestamp",
                                    "type"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The audit event id.",
                                      "example": "15cbf54e34df95404caad1c988cf7c42"
                                    },
                                    "customerId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The customer id.",
                                      "example": 1
                                    },
                                    "agentId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The agent id.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "rxTimestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the command was received, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "command",
                                        "connection",
                                        "fileaccess",
                                        "kubernetes"
                                      ]
                                    },
                                    "metrics": {
                                      "type": "array",
                                      "description": "List of metrics associated to the audit event.",
                                      "example": [
                                        "ip-127-0-0-1",
                                        "f8d4f71ab80b"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "count",
                                    "cmdline",
                                    "comm",
                                    "pcomm",
                                    "pid",
                                    "ppid",
                                    "uid",
                                    "loginShellId",
                                    "loginShellDistance",
                                    "tty",
                                    "traceable"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "command"
                                      ]
                                    },
                                    "containerId": {
                                      "type": "string",
                                      "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                      "example": "f8d4f71ab80b"
                                    },
                                    "count": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Count of commands. `command` is ever greater than `1` only when\ncommands are grouped together.\n",
                                      "example": 1,
                                      "default": 1
                                    },
                                    "cmdline": {
                                      "type": "string",
                                      "description": "Full command line",
                                      "example": "pg_isready --host 10.32.0.8"
                                    },
                                    "comm": {
                                      "type": "string",
                                      "description": "The name of the command.",
                                      "example": "pg_isready"
                                    },
                                    "pcomm": {
                                      "type": "string",
                                      "description": "The name of the parent command.",
                                      "example": "sshd"
                                    },
                                    "pid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Process ID.",
                                      "example": 31135
                                    },
                                    "ppid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Parent process ID.",
                                      "example": 31132
                                    },
                                    "uid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "User ID",
                                      "example": 0
                                    },
                                    "cwd": {
                                      "type": "string",
                                      "description": "Command working directory.",
                                      "example": "/"
                                    },
                                    "hostname": {
                                      "type": "string",
                                      "description": "The Kubernetes hostname.",
                                      "example": "ip-127-0-0-1"
                                    },
                                    "loginShellId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Process id of the shell."
                                    },
                                    "loginShellDistance": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Level of nesting from the parent shell."
                                    },
                                    "tty": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "TTY number."
                                    },
                                    "traceable": {
                                      "type": "boolean",
                                      "default": false,
                                      "description": "If command can be traced."
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "customerId",
                                    "agentId",
                                    "timestamp",
                                    "rxTimestamp",
                                    "type"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The audit event id.",
                                      "example": "15cbf54e34df95404caad1c988cf7c42"
                                    },
                                    "customerId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The customer id.",
                                      "example": 1
                                    },
                                    "agentId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The agent id.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "rxTimestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the command was received, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "command",
                                        "connection",
                                        "fileaccess",
                                        "kubernetes"
                                      ]
                                    },
                                    "metrics": {
                                      "type": "array",
                                      "description": "List of metrics associated to the audit event.",
                                      "example": [
                                        "ip-127-0-0-1",
                                        "f8d4f71ab80b"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "pid",
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "connection"
                                      ]
                                    },
                                    "containerId": {
                                      "type": "string",
                                      "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                      "example": "f8d4f71ab80b"
                                    },
                                    "pid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Id of the process owning the connection.",
                                      "example": 123
                                    },
                                    "processName": {
                                      "type": "number",
                                      "format": "string",
                                      "description": "Name of the process owning the connection.",
                                      "example": "curl"
                                    },
                                    "clientIPv4": {
                                      "type": "string",
                                      "description": "The IPv4 dotted notation of the client address.",
                                      "example": "127.0.0.1"
                                    },
                                    "clientPort": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The client port.",
                                      "example": 31234
                                    },
                                    "serverIPv4": {
                                      "type": "string",
                                      "description": "The IPv4 dotted notation of the server address.",
                                      "example": "127.0.0.1"
                                    },
                                    "serverPort": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The server port.",
                                      "example": 80
                                    },
                                    "tty": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "TTY number."
                                    },
                                    "direction": {
                                      "type": "string",
                                      "description": "The direction of the connection.",
                                      "enum": [
                                        "INCOMING",
                                        "OUTGOING"
                                      ]
                                    },
                                    "l4protocol": {
                                      "type": "string",
                                      "description": "The layer 4 protocol.",
                                      "example": "tcp"
                                    },
                                    "errorCode": {
                                      "type": "number",
                                      "description": "The error code.",
                                      "example": 115
                                    },
                                    "hostname": {
                                      "type": "string",
                                      "description": "The Kubernetes hostname.",
                                      "example": "ip-127-0-0-1"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the connection.",
                                      "enum": [
                                        "ESTABLISHED",
                                        "FAILED"
                                      ],
                                      "example": "ESTABLISHED"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "customerId",
                                    "agentId",
                                    "timestamp",
                                    "rxTimestamp",
                                    "type"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The audit event id.",
                                      "example": "15cbf54e34df95404caad1c988cf7c42"
                                    },
                                    "customerId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The customer id.",
                                      "example": 1
                                    },
                                    "agentId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The agent id.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "rxTimestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the command was received, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "command",
                                        "connection",
                                        "fileaccess",
                                        "kubernetes"
                                      ]
                                    },
                                    "metrics": {
                                      "type": "array",
                                      "description": "List of metrics associated to the audit event.",
                                      "example": [
                                        "ip-127-0-0-1",
                                        "f8d4f71ab80b"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "pid",
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "fileaccess"
                                      ]
                                    },
                                    "containerId": {
                                      "type": "string",
                                      "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                      "example": "f8d4f71ab80b"
                                    },
                                    "pid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Id of the process owning the connection.",
                                      "example": 123
                                    },
                                    "processName": {
                                      "type": "number",
                                      "format": "string",
                                      "description": "Name of the process owning the connection.",
                                      "example": "curl"
                                    },
                                    "directory": {
                                      "type": "string",
                                      "description": "The Directory for the file access.",
                                      "example": "/home/sysdig/"
                                    },
                                    "filename": {
                                      "type": "string",
                                      "description": "The Filename involved in file access.",
                                      "example": "malicious_file.txt"
                                    },
                                    "permissions": {
                                      "type": "string",
                                      "description": "The Permissions of the file access.",
                                      "example": "rw"
                                    },
                                    "hostname": {
                                      "type": "string",
                                      "description": "The Kubernetes hostname.",
                                      "example": "ip-127-0-0-1"
                                    },
                                    "tty": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "TTY number."
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "customerId",
                                    "agentId",
                                    "timestamp",
                                    "rxTimestamp",
                                    "type"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The audit event id.",
                                      "example": "15cbf54e34df95404caad1c988cf7c42"
                                    },
                                    "customerId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The customer id.",
                                      "example": 1
                                    },
                                    "agentId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The agent id.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "rxTimestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the command was received, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "command",
                                        "connection",
                                        "fileaccess",
                                        "kubernetes"
                                      ]
                                    },
                                    "metrics": {
                                      "type": "array",
                                      "description": "List of metrics associated to the audit event.",
                                      "example": [
                                        "ip-127-0-0-1",
                                        "f8d4f71ab80b"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "resource",
                                    "stages",
                                    "sourceAddresses",
                                    "user",
                                    "userAgent",
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "kubernetes"
                                      ]
                                    },
                                    "hostname": {
                                      "type": "string",
                                      "description": "The Kubernetes hostname.",
                                      "example": "ip-127-0-0-1"
                                    },
                                    "containerId": {
                                      "type": "string",
                                      "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                      "example": "f8d4f71ab80b"
                                    },
                                    "resource": {
                                      "type": "string",
                                      "description": "The Kubernetes resource.",
                                      "example": "pods"
                                    },
                                    "subResource": {
                                      "type": "string",
                                      "description": "The Kubernetes subresource.",
                                      "example": "exec"
                                    },
                                    "namespace": {
                                      "type": "string",
                                      "description": "The Kubernetes namespace.",
                                      "example": "sysdigcloud"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the resource.",
                                      "example": "sysdigcloud-redis-75675f5897-7ci7o"
                                    },
                                    "stages": {
                                      "type": "object",
                                      "properties": {
                                        "started": {
                                          "type": "number",
                                          "format": "long",
                                          "description": "The timestamp of the started stage, expressed in nanoseconds\n",
                                          "example": 1546300800000000000
                                        },
                                        "completed": {
                                          "type": "number",
                                          "format": "long",
                                          "description": "The timestamp of the completed stage, expressed in\nnanoseconds\n",
                                          "example": 1546300800000000000
                                        }
                                      }
                                    },
                                    "sourceAddresses": {
                                      "type": "array",
                                      "example": [
                                        "127.0.0.1",
                                        "192.168.0.1"
                                      ]
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "username": {
                                          "type": "string",
                                          "description": "The username of the",
                                          "example": "kubernetes-admin"
                                        },
                                        "groups": {
                                          "type": "array",
                                          "example": [
                                            "system:masters",
                                            "system:authenticated"
                                          ]
                                        }
                                      }
                                    },
                                    "userAgent": {
                                      "type": "string",
                                      "description": "The user agent of the client",
                                      "example": "kubectl/v1.13.5 (linux/amd64) kubernetes/2166946"
                                    },
                                    "args": {
                                      "type": "object",
                                      "description": "Arguments specific for the different types of Kubernetes audit\nevents. In case of `pods:exec`, `args` will contain the fields\n`command` and `container` representing the command called and\nthe name of the container in the pod where the command was\nexecuted respectively.\n",
                                      "example": {
                                        "command": "bash",
                                        "container": "redis"
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/activityAudit/events?from=1546300800000000000&to=1546300800000000000&cursor=LTltNGUybXIwdWkzZThhMjE1bjRn&limit=100&scopeFilter=host.hostName%3D%22ip-127-0-0-1%22&filter=pid%3D1&types=commands%2Cconnections\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/activityAudit/events?from=1546300800000000000&to=1546300800000000000&cursor=LTltNGUybXIwdWkzZThhMjE1bjRn&limit=100&scopeFilter=host.hostName%3D%22ip-127-0-0-1%22&filter=pid%3D1&types=commands%2Cconnections'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/activityAudit/events',\n  qs: {\n    from: '1546300800000000000',\n    to: '1546300800000000000',\n    cursor: 'LTltNGUybXIwdWkzZThhMjE1bjRn',\n    limit: '100',\n    scopeFilter: 'host.hostName=\"ip-127-0-0-1\"',\n    filter: 'pid=1',\n    types: 'commands,connections'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/activityAudit/events?from=1546300800000000000&to=1546300800000000000&cursor=LTltNGUybXIwdWkzZThhMjE1bjRn&limit=100&scopeFilter=host.hostName%3D%22ip-127-0-0-1%22&filter=pid%3D1&types=commands%2Cconnections\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/activityAudit/events?from=1546300800000000000&to=1546300800000000000&cursor=LTltNGUybXIwdWkzZThhMjE1bjRn&limit=100&scopeFilter=host.hostName%3D%22ip-127-0-0-1%22&filter=pid%3D1&types=commands%2Cconnections\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/activityAudit/events/{type}/{eventId}": {
        "get": {
          "summary": "Retrieves an audit event given its type and id",
          "description": "Retrieves an audit event of a specified type with a given id.\n",
          "tags": [
            "Activity Audit"
          ],
          "parameters": [
            {
              "name": "type",
              "description": "The event type.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string",
                "example": "command",
                "enum": [
                  "commands",
                  "connections",
                  "fileaccesses",
                  "kubernetes"
                ]
              }
            },
            {
              "name": "eventId",
              "description": "The audit event id.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string",
                "example": "15cbf54e34df95404caad1c988cf7c42"
              }
            },
            {
              "name": "metrics",
              "description": "JSON list of metrics used to enrich results.\nIf no `metrics` is passed the audit events returned will not have a\n`metrics` field populated. The metrics attributes are directly fetched\nfrom the metadata service, so please refer to it for the full list of\nsupported metrics.\n",
              "in": "query",
              "schema": {
                "type": "string",
                "example": "[\"host.hostName\",\"container.id\"]"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Audit event with the given type and id.",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "description": "Represents a command execution.",
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "customerId",
                              "agentId",
                              "timestamp",
                              "rxTimestamp",
                              "type"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The audit event id.",
                                "example": "15cbf54e34df95404caad1c988cf7c42"
                              },
                              "customerId": {
                                "type": "number",
                                "format": "integer",
                                "description": "The customer id.",
                                "example": 1
                              },
                              "agentId": {
                                "type": "number",
                                "format": "integer",
                                "description": "The agent id.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "format": "long",
                                "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                "example": 1546300800000000000
                              },
                              "rxTimestamp": {
                                "type": "number",
                                "format": "long",
                                "description": "Timestamp the command was received, expressed in nanoseconds.",
                                "example": 1546300800000000000
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "command",
                                  "connection",
                                  "fileaccess",
                                  "kubernetes"
                                ]
                              },
                              "metrics": {
                                "type": "array",
                                "description": "List of metrics associated to the audit event.",
                                "example": [
                                  "ip-127-0-0-1",
                                  "f8d4f71ab80b"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "count",
                              "cmdline",
                              "comm",
                              "pcomm",
                              "pid",
                              "ppid",
                              "uid",
                              "loginShellId",
                              "loginShellDistance",
                              "tty",
                              "traceable"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "command"
                                ]
                              },
                              "containerId": {
                                "type": "string",
                                "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                "example": "f8d4f71ab80b"
                              },
                              "count": {
                                "type": "number",
                                "format": "integer",
                                "description": "Count of commands. `command` is ever greater than `1` only when\ncommands are grouped together.\n",
                                "example": 1,
                                "default": 1
                              },
                              "cmdline": {
                                "type": "string",
                                "description": "Full command line",
                                "example": "pg_isready --host 10.32.0.8"
                              },
                              "comm": {
                                "type": "string",
                                "description": "The name of the command.",
                                "example": "pg_isready"
                              },
                              "pcomm": {
                                "type": "string",
                                "description": "The name of the parent command.",
                                "example": "sshd"
                              },
                              "pid": {
                                "type": "number",
                                "format": "integer",
                                "description": "Process ID.",
                                "example": 31135
                              },
                              "ppid": {
                                "type": "number",
                                "format": "integer",
                                "description": "Parent process ID.",
                                "example": 31132
                              },
                              "uid": {
                                "type": "number",
                                "format": "integer",
                                "description": "User ID",
                                "example": 0
                              },
                              "cwd": {
                                "type": "string",
                                "description": "Command working directory.",
                                "example": "/"
                              },
                              "hostname": {
                                "type": "string",
                                "description": "The Kubernetes hostname.",
                                "example": "ip-127-0-0-1"
                              },
                              "loginShellId": {
                                "type": "number",
                                "format": "integer",
                                "description": "Process id of the shell."
                              },
                              "loginShellDistance": {
                                "type": "number",
                                "format": "integer",
                                "description": "Level of nesting from the parent shell."
                              },
                              "tty": {
                                "type": "number",
                                "format": "integer",
                                "description": "TTY number."
                              },
                              "traceable": {
                                "type": "boolean",
                                "default": false,
                                "description": "If command can be traced."
                              }
                            }
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "customerId",
                              "agentId",
                              "timestamp",
                              "rxTimestamp",
                              "type"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The audit event id.",
                                "example": "15cbf54e34df95404caad1c988cf7c42"
                              },
                              "customerId": {
                                "type": "number",
                                "format": "integer",
                                "description": "The customer id.",
                                "example": 1
                              },
                              "agentId": {
                                "type": "number",
                                "format": "integer",
                                "description": "The agent id.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "format": "long",
                                "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                "example": 1546300800000000000
                              },
                              "rxTimestamp": {
                                "type": "number",
                                "format": "long",
                                "description": "Timestamp the command was received, expressed in nanoseconds.",
                                "example": 1546300800000000000
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "command",
                                  "connection",
                                  "fileaccess",
                                  "kubernetes"
                                ]
                              },
                              "metrics": {
                                "type": "array",
                                "description": "List of metrics associated to the audit event.",
                                "example": [
                                  "ip-127-0-0-1",
                                  "f8d4f71ab80b"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "pid",
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "connection"
                                ]
                              },
                              "containerId": {
                                "type": "string",
                                "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                "example": "f8d4f71ab80b"
                              },
                              "pid": {
                                "type": "number",
                                "format": "integer",
                                "description": "Id of the process owning the connection.",
                                "example": 123
                              },
                              "processName": {
                                "type": "number",
                                "format": "string",
                                "description": "Name of the process owning the connection.",
                                "example": "curl"
                              },
                              "clientIPv4": {
                                "type": "string",
                                "description": "The IPv4 dotted notation of the client address.",
                                "example": "127.0.0.1"
                              },
                              "clientPort": {
                                "type": "number",
                                "format": "integer",
                                "description": "The client port.",
                                "example": 31234
                              },
                              "serverIPv4": {
                                "type": "string",
                                "description": "The IPv4 dotted notation of the server address.",
                                "example": "127.0.0.1"
                              },
                              "serverPort": {
                                "type": "number",
                                "format": "integer",
                                "description": "The server port.",
                                "example": 80
                              },
                              "tty": {
                                "type": "number",
                                "format": "integer",
                                "description": "TTY number."
                              },
                              "direction": {
                                "type": "string",
                                "description": "The direction of the connection.",
                                "enum": [
                                  "INCOMING",
                                  "OUTGOING"
                                ]
                              },
                              "l4protocol": {
                                "type": "string",
                                "description": "The layer 4 protocol.",
                                "example": "tcp"
                              },
                              "errorCode": {
                                "type": "number",
                                "description": "The error code.",
                                "example": 115
                              },
                              "hostname": {
                                "type": "string",
                                "description": "The Kubernetes hostname.",
                                "example": "ip-127-0-0-1"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the connection.",
                                "enum": [
                                  "ESTABLISHED",
                                  "FAILED"
                                ],
                                "example": "ESTABLISHED"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "customerId",
                              "agentId",
                              "timestamp",
                              "rxTimestamp",
                              "type"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The audit event id.",
                                "example": "15cbf54e34df95404caad1c988cf7c42"
                              },
                              "customerId": {
                                "type": "number",
                                "format": "integer",
                                "description": "The customer id.",
                                "example": 1
                              },
                              "agentId": {
                                "type": "number",
                                "format": "integer",
                                "description": "The agent id.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "format": "long",
                                "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                "example": 1546300800000000000
                              },
                              "rxTimestamp": {
                                "type": "number",
                                "format": "long",
                                "description": "Timestamp the command was received, expressed in nanoseconds.",
                                "example": 1546300800000000000
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "command",
                                  "connection",
                                  "fileaccess",
                                  "kubernetes"
                                ]
                              },
                              "metrics": {
                                "type": "array",
                                "description": "List of metrics associated to the audit event.",
                                "example": [
                                  "ip-127-0-0-1",
                                  "f8d4f71ab80b"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "pid",
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "fileaccess"
                                ]
                              },
                              "containerId": {
                                "type": "string",
                                "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                "example": "f8d4f71ab80b"
                              },
                              "pid": {
                                "type": "number",
                                "format": "integer",
                                "description": "Id of the process owning the connection.",
                                "example": 123
                              },
                              "processName": {
                                "type": "number",
                                "format": "string",
                                "description": "Name of the process owning the connection.",
                                "example": "curl"
                              },
                              "directory": {
                                "type": "string",
                                "description": "The Directory for the file access.",
                                "example": "/home/sysdig/"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The Filename involved in file access.",
                                "example": "malicious_file.txt"
                              },
                              "permissions": {
                                "type": "string",
                                "description": "The Permissions of the file access.",
                                "example": "rw"
                              },
                              "hostname": {
                                "type": "string",
                                "description": "The Kubernetes hostname.",
                                "example": "ip-127-0-0-1"
                              },
                              "tty": {
                                "type": "number",
                                "format": "integer",
                                "description": "TTY number."
                              }
                            }
                          }
                        ]
                      },
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "customerId",
                              "agentId",
                              "timestamp",
                              "rxTimestamp",
                              "type"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The audit event id.",
                                "example": "15cbf54e34df95404caad1c988cf7c42"
                              },
                              "customerId": {
                                "type": "number",
                                "format": "integer",
                                "description": "The customer id.",
                                "example": 1
                              },
                              "agentId": {
                                "type": "number",
                                "format": "integer",
                                "description": "The agent id.",
                                "example": 1
                              },
                              "timestamp": {
                                "type": "number",
                                "format": "long",
                                "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                "example": 1546300800000000000
                              },
                              "rxTimestamp": {
                                "type": "number",
                                "format": "long",
                                "description": "Timestamp the command was received, expressed in nanoseconds.",
                                "example": 1546300800000000000
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "command",
                                  "connection",
                                  "fileaccess",
                                  "kubernetes"
                                ]
                              },
                              "metrics": {
                                "type": "array",
                                "description": "List of metrics associated to the audit event.",
                                "example": [
                                  "ip-127-0-0-1",
                                  "f8d4f71ab80b"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "resource",
                              "stages",
                              "sourceAddresses",
                              "user",
                              "userAgent",
                              "type"
                            ],
                            "properties": {
                              "type": {
                                "enum": [
                                  "kubernetes"
                                ]
                              },
                              "hostname": {
                                "type": "string",
                                "description": "The Kubernetes hostname.",
                                "example": "ip-127-0-0-1"
                              },
                              "containerId": {
                                "type": "string",
                                "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                "example": "f8d4f71ab80b"
                              },
                              "resource": {
                                "type": "string",
                                "description": "The Kubernetes resource.",
                                "example": "pods"
                              },
                              "subResource": {
                                "type": "string",
                                "description": "The Kubernetes subresource.",
                                "example": "exec"
                              },
                              "namespace": {
                                "type": "string",
                                "description": "The Kubernetes namespace.",
                                "example": "sysdigcloud"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the resource.",
                                "example": "sysdigcloud-redis-75675f5897-7ci7o"
                              },
                              "stages": {
                                "type": "object",
                                "properties": {
                                  "started": {
                                    "type": "number",
                                    "format": "long",
                                    "description": "The timestamp of the started stage, expressed in nanoseconds\n",
                                    "example": 1546300800000000000
                                  },
                                  "completed": {
                                    "type": "number",
                                    "format": "long",
                                    "description": "The timestamp of the completed stage, expressed in\nnanoseconds\n",
                                    "example": 1546300800000000000
                                  }
                                }
                              },
                              "sourceAddresses": {
                                "type": "array",
                                "example": [
                                  "127.0.0.1",
                                  "192.168.0.1"
                                ]
                              },
                              "user": {
                                "type": "object",
                                "properties": {
                                  "username": {
                                    "type": "string",
                                    "description": "The username of the",
                                    "example": "kubernetes-admin"
                                  },
                                  "groups": {
                                    "type": "array",
                                    "example": [
                                      "system:masters",
                                      "system:authenticated"
                                    ]
                                  }
                                }
                              },
                              "userAgent": {
                                "type": "string",
                                "description": "The user agent of the client",
                                "example": "kubectl/v1.13.5 (linux/amd64) kubernetes/2166946"
                              },
                              "args": {
                                "type": "object",
                                "description": "Arguments specific for the different types of Kubernetes audit\nevents. In case of `pods:exec`, `args` will contain the fields\n`command` and `container` representing the command called and\nthe name of the container in the pod where the command was\nexecuted respectively.\n",
                                "example": {
                                  "command": "bash",
                                  "container": "redis"
                                }
                              }
                            }
                          }
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "The event could not be found."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D?metrics=%5B%22host.hostName%22%2C%22container.id%22%5D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D?metrics=%5B%22host.hostName%22%2C%22container.id%22%5D'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D',\n  qs: {metrics: '[\"host.hostName\",\"container.id\"]'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D?metrics=%5B%22host.hostName%22%2C%22container.id%22%5D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D?metrics=%5B%22host.hostName%22%2C%22container.id%22%5D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/activityAudit/events/{type}/{eventId}/trace": {
        "get": {
          "summary": "Retrieves the trace of an audit event",
          "description": "Retrieves a trace of all the audit events related to the traceable event\nin case it is a long running task. The audit events returned are all the\ncommands, connections etc collected during the duration of the traceable\nevent.\nIf the event has not completed yet, the time range considered is up\nuntil the current time.\n",
          "tags": [
            "Activity Audit"
          ],
          "parameters": [
            {
              "name": "type",
              "description": "The event type.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string",
                "example": "command",
                "enum": [
                  "commands",
                  "connections",
                  "fileaccesses",
                  "kubernetes"
                ]
              }
            },
            {
              "name": "eventId",
              "description": "The audit event id.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string",
                "example": "15cbf54e34df95404caad1c988cf7c42"
              }
            },
            {
              "name": "limit",
              "description": "Limit the number of results to return.",
              "in": "query",
              "schema": {
                "type": "number",
                "format": "integer",
                "example": 100,
                "minimum": 1,
                "maximum": 9999,
                "default": 100
              }
            }
          ],
          "responses": {
            "200": {
              "description": "All the events associated with this traceable event.\n",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "page": {
                        "type": "object",
                        "properties": {
                          "total": {
                            "type": "number",
                            "format": "integer",
                            "description": "The number of audit events returned. This number is always less or\nequal the limit specified in the request.\n",
                            "example": 10
                          },
                          "prev": {
                            "type": "string",
                            "description": "The continuation token used to fetch a set of audit events before\nthe current one.\n",
                            "example": "LTltNGUybXIwdWkzZThhMjE1bjRn"
                          },
                          "next": {
                            "type": "string",
                            "description": "The continuation token used to fetch a set of audit events after the\ncurrent one.\n",
                            "example": "KzltNGUybXIwdWkzZThhMjE1bjRn"
                          }
                        }
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "anyOf": [
                            {
                              "description": "Represents a command execution.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "customerId",
                                    "agentId",
                                    "timestamp",
                                    "rxTimestamp",
                                    "type"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The audit event id.",
                                      "example": "15cbf54e34df95404caad1c988cf7c42"
                                    },
                                    "customerId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The customer id.",
                                      "example": 1
                                    },
                                    "agentId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The agent id.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "rxTimestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the command was received, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "command",
                                        "connection",
                                        "fileaccess",
                                        "kubernetes"
                                      ]
                                    },
                                    "metrics": {
                                      "type": "array",
                                      "description": "List of metrics associated to the audit event.",
                                      "example": [
                                        "ip-127-0-0-1",
                                        "f8d4f71ab80b"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "count",
                                    "cmdline",
                                    "comm",
                                    "pcomm",
                                    "pid",
                                    "ppid",
                                    "uid",
                                    "loginShellId",
                                    "loginShellDistance",
                                    "tty",
                                    "traceable"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "command"
                                      ]
                                    },
                                    "containerId": {
                                      "type": "string",
                                      "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                      "example": "f8d4f71ab80b"
                                    },
                                    "count": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Count of commands. `command` is ever greater than `1` only when\ncommands are grouped together.\n",
                                      "example": 1,
                                      "default": 1
                                    },
                                    "cmdline": {
                                      "type": "string",
                                      "description": "Full command line",
                                      "example": "pg_isready --host 10.32.0.8"
                                    },
                                    "comm": {
                                      "type": "string",
                                      "description": "The name of the command.",
                                      "example": "pg_isready"
                                    },
                                    "pcomm": {
                                      "type": "string",
                                      "description": "The name of the parent command.",
                                      "example": "sshd"
                                    },
                                    "pid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Process ID.",
                                      "example": 31135
                                    },
                                    "ppid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Parent process ID.",
                                      "example": 31132
                                    },
                                    "uid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "User ID",
                                      "example": 0
                                    },
                                    "cwd": {
                                      "type": "string",
                                      "description": "Command working directory.",
                                      "example": "/"
                                    },
                                    "hostname": {
                                      "type": "string",
                                      "description": "The Kubernetes hostname.",
                                      "example": "ip-127-0-0-1"
                                    },
                                    "loginShellId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Process id of the shell."
                                    },
                                    "loginShellDistance": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Level of nesting from the parent shell."
                                    },
                                    "tty": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "TTY number."
                                    },
                                    "traceable": {
                                      "type": "boolean",
                                      "default": false,
                                      "description": "If command can be traced."
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "customerId",
                                    "agentId",
                                    "timestamp",
                                    "rxTimestamp",
                                    "type"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The audit event id.",
                                      "example": "15cbf54e34df95404caad1c988cf7c42"
                                    },
                                    "customerId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The customer id.",
                                      "example": 1
                                    },
                                    "agentId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The agent id.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "rxTimestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the command was received, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "command",
                                        "connection",
                                        "fileaccess",
                                        "kubernetes"
                                      ]
                                    },
                                    "metrics": {
                                      "type": "array",
                                      "description": "List of metrics associated to the audit event.",
                                      "example": [
                                        "ip-127-0-0-1",
                                        "f8d4f71ab80b"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "pid",
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "connection"
                                      ]
                                    },
                                    "containerId": {
                                      "type": "string",
                                      "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                      "example": "f8d4f71ab80b"
                                    },
                                    "pid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Id of the process owning the connection.",
                                      "example": 123
                                    },
                                    "processName": {
                                      "type": "number",
                                      "format": "string",
                                      "description": "Name of the process owning the connection.",
                                      "example": "curl"
                                    },
                                    "clientIPv4": {
                                      "type": "string",
                                      "description": "The IPv4 dotted notation of the client address.",
                                      "example": "127.0.0.1"
                                    },
                                    "clientPort": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The client port.",
                                      "example": 31234
                                    },
                                    "serverIPv4": {
                                      "type": "string",
                                      "description": "The IPv4 dotted notation of the server address.",
                                      "example": "127.0.0.1"
                                    },
                                    "serverPort": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The server port.",
                                      "example": 80
                                    },
                                    "tty": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "TTY number."
                                    },
                                    "direction": {
                                      "type": "string",
                                      "description": "The direction of the connection.",
                                      "enum": [
                                        "INCOMING",
                                        "OUTGOING"
                                      ]
                                    },
                                    "l4protocol": {
                                      "type": "string",
                                      "description": "The layer 4 protocol.",
                                      "example": "tcp"
                                    },
                                    "errorCode": {
                                      "type": "number",
                                      "description": "The error code.",
                                      "example": 115
                                    },
                                    "hostname": {
                                      "type": "string",
                                      "description": "The Kubernetes hostname.",
                                      "example": "ip-127-0-0-1"
                                    },
                                    "status": {
                                      "type": "string",
                                      "description": "The status of the connection.",
                                      "enum": [
                                        "ESTABLISHED",
                                        "FAILED"
                                      ],
                                      "example": "ESTABLISHED"
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "required": [
                                    "id",
                                    "customerId",
                                    "agentId",
                                    "timestamp",
                                    "rxTimestamp",
                                    "type"
                                  ],
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The audit event id.",
                                      "example": "15cbf54e34df95404caad1c988cf7c42"
                                    },
                                    "customerId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The customer id.",
                                      "example": 1
                                    },
                                    "agentId": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The agent id.",
                                      "example": 1
                                    },
                                    "timestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the audit event occured, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "rxTimestamp": {
                                      "type": "number",
                                      "format": "long",
                                      "description": "Timestamp the command was received, expressed in nanoseconds.",
                                      "example": 1546300800000000000
                                    },
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "command",
                                        "connection",
                                        "fileaccess",
                                        "kubernetes"
                                      ]
                                    },
                                    "metrics": {
                                      "type": "array",
                                      "description": "List of metrics associated to the audit event.",
                                      "example": [
                                        "ip-127-0-0-1",
                                        "f8d4f71ab80b"
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "pid",
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "enum": [
                                        "fileaccess"
                                      ]
                                    },
                                    "containerId": {
                                      "type": "string",
                                      "description": "The container id. `containerId` is present only if the audit event was\ncollected in a container context.\n",
                                      "example": "f8d4f71ab80b"
                                    },
                                    "pid": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "Id of the process owning the connection.",
                                      "example": 123
                                    },
                                    "processName": {
                                      "type": "number",
                                      "format": "string",
                                      "description": "Name of the process owning the connection.",
                                      "example": "curl"
                                    },
                                    "directory": {
                                      "type": "string",
                                      "description": "The Directory for the file access.",
                                      "example": "/home/sysdig/"
                                    },
                                    "filename": {
                                      "type": "string",
                                      "description": "The Filename involved in file access.",
                                      "example": "malicious_file.txt"
                                    },
                                    "permissions": {
                                      "type": "string",
                                      "description": "The Permissions of the file access.",
                                      "example": "rw"
                                    },
                                    "hostname": {
                                      "type": "string",
                                      "description": "The Kubernetes hostname.",
                                      "example": "ip-127-0-0-1"
                                    },
                                    "tty": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "TTY number."
                                    }
                                  }
                                }
                              ]
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The request is invalid."
            },
            "404": {
              "description": "The event could not be found."
            },
            "422": {
              "description": "The audit event requested does not support tracing."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D/trace?limit=100\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D/trace?limit=100'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D/trace',\n  qs: {limit: '100'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D/trace?limit=100\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/activityAudit/events/%7Btype%7D/%7BeventId%7D/trace?limit=100\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/eventsForwarding/supported": {
        "get": {
          "summary": "Retrieve a list of the supported targets.",
          "description": "Retrieves a list of all the supported forwarding targets.\n",
          "tags": [
            "Events Forwarding"
          ],
          "responses": {
            "200": {
              "description": "List of supported forwarding targets.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "syslog",
                      "splunk"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/eventsForwarding/supported\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/eventsForwarding/supported"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/eventsForwarding/supported'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/eventsForwarding/supported\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/eventsForwarding/supported\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/eventsForwarding/channels": {
        "get": {
          "summary": "Retrieve a list of the supported channels.",
          "description": "Retrieves a list of all the supported forwarding channels.\n",
          "tags": [
            "Events Forwarding"
          ],
          "responses": {
            "200": {
              "description": "List of supported forwarding channels.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "POLICY_EVENTS"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/eventsForwarding/channels\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/eventsForwarding/channels"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/eventsForwarding/channels'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/eventsForwarding/channels\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/eventsForwarding/channels\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/eventsForwarding/integrations": {
        "get": {
          "summary": "Retrieve a list of integrations for the customer.",
          "description": "Retrieves a list of forwarding integrations for the customer making the\nrequest.\n",
          "tags": [
            "Events Forwarding"
          ],
          "responses": {
            "200": {
              "description": "The list of integrations.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "description": "Represents a command execution.\n",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "number",
                          "format": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "customerId": {
                          "type": "number",
                          "format": "integer"
                        },
                        "type": {
                          "description": "The integration type.\n",
                          "type": "string",
                          "enum": [
                            "SYSLOG",
                            "SPLUNK",
                            "MCM",
                            "QRADAR"
                          ]
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "channels": {
                          "description": "The channels for which the integration must forward data from.\n",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "POLICY_EVENTS"
                            ]
                          }
                        },
                        "connectionInfo": {
                          "oneOf": [
                            {
                              "required": [
                                "ServiceURL",
                                "ServicePort"
                              ],
                              "properties": {
                                "ServiceURL": {
                                  "type": "string"
                                },
                                "ServicePort": {
                                  "type": "number",
                                  "format": "integer"
                                },
                                "ServiceType": {
                                  "type": "string",
                                  "enum": [
                                    "tcp",
                                    "udp",
                                    "tls"
                                  ]
                                },
                                "insecure": {
                                  "type": "boolean"
                                },
                                "MessageFormat": {
                                  "type": "string",
                                  "enum": [
                                    "RFC_3164",
                                    "RFC_5424",
                                    "RFC_5425"
                                  ]
                                },
                                "formatter": {
                                  "type": "string",
                                  "enum": [
                                    "JSON",
                                    "LEEF",
                                    "CEF"
                                  ]
                                }
                              }
                            },
                            {
                              "required": [
                                "ServiceURL",
                                "ServiceToken"
                              ],
                              "properties": {
                                "ServiceURL": {
                                  "type": "string"
                                },
                                "ServiceToken": {
                                  "type": "string"
                                },
                                "SourceType": {
                                  "type": "string"
                                },
                                "Index": {
                                  "type": "string"
                                },
                                "insecure": {
                                  "type": "boolean"
                                }
                              }
                            },
                            {
                              "required": [
                                "endpoint",
                                "apiKey"
                              ],
                              "properties": {
                                "endpoint": {
                                  "type": "string"
                                },
                                "apiKey": {
                                  "type": "string"
                                },
                                "insecure": {
                                  "type": "boolean"
                                },
                                "accountId": {
                                  "type": "string"
                                },
                                "providerId": {
                                  "type": "string"
                                },
                                "noteName": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "required": [
                                "address",
                                "port"
                              ],
                              "properties": {
                                "address": {
                                  "type": "string"
                                },
                                "port": {
                                  "type": "number",
                                  "format": "integer"
                                },
                                "insecure": {
                                  "type": "boolean"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "example": {
                        "id": 1,
                        "name": "Forward to Syslog",
                        "customerId": 1,
                        "type": "syslog",
                        "enabled": true,
                        "channels": [
                          "POLICY_EVENTS"
                        ],
                        "connectionInfo": {
                          "ServiceURL": "syslog-address",
                          "ServicePort": 514
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/eventsForwarding/integrations\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/eventsForwarding/integrations"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/eventsForwarding/integrations'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/eventsForwarding/integrations\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/eventsForwarding/integrations\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create an integration for the customer.",
          "description": "Creates a forwarding integration for the customer.\n",
          "tags": [
            "Events Forwarding"
          ],
          "requestBody": {
            "description": "The content of the integration to create.\n",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "description": "The payload for creating an integration.\n",
                  "type": "object",
                  "required": [
                    "name",
                    "type",
                    "channels",
                    "connectionInfo"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "description": "The integration type.\n",
                      "type": "string",
                      "enum": [
                        "SYSLOG",
                        "SPLUNK",
                        "MCM",
                        "QRADAR"
                      ]
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    },
                    "channels": {
                      "description": "The channels for which the integration must forward data from.\n",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "POLICY_EVENTS"
                        ]
                      }
                    },
                    "connectionInfo": {
                      "oneOf": [
                        {
                          "required": [
                            "ServiceURL",
                            "ServicePort"
                          ],
                          "properties": {
                            "ServiceURL": {
                              "type": "string"
                            },
                            "ServicePort": {
                              "type": "number",
                              "format": "integer"
                            },
                            "ServiceType": {
                              "type": "string",
                              "enum": [
                                "tcp",
                                "udp",
                                "tls"
                              ]
                            },
                            "insecure": {
                              "type": "boolean"
                            },
                            "MessageFormat": {
                              "type": "string",
                              "enum": [
                                "RFC_3164",
                                "RFC_5424",
                                "RFC_5425"
                              ]
                            },
                            "formatter": {
                              "type": "string",
                              "enum": [
                                "JSON",
                                "LEEF",
                                "CEF"
                              ]
                            }
                          }
                        },
                        {
                          "required": [
                            "ServiceURL",
                            "ServiceToken"
                          ],
                          "properties": {
                            "ServiceURL": {
                              "type": "string"
                            },
                            "ServiceToken": {
                              "type": "string"
                            },
                            "SourceType": {
                              "type": "string"
                            },
                            "Index": {
                              "type": "string"
                            },
                            "insecure": {
                              "type": "boolean"
                            }
                          }
                        },
                        {
                          "required": [
                            "endpoint",
                            "apiKey"
                          ],
                          "properties": {
                            "endpoint": {
                              "type": "string"
                            },
                            "apiKey": {
                              "type": "string"
                            },
                            "insecure": {
                              "type": "boolean"
                            },
                            "accountId": {
                              "type": "string"
                            },
                            "providerId": {
                              "type": "string"
                            },
                            "noteName": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "address",
                            "port"
                          ],
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "port": {
                              "type": "number",
                              "format": "integer"
                            },
                            "insecure": {
                              "type": "boolean"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "example": {
                    "name": "Forward to Syslog",
                    "type": "SYSLOG",
                    "enabled": true,
                    "channels": [
                      "POLICY_EVENTS"
                    ],
                    "connectionInfo": {
                      "ServiceURL": "syslog-address",
                      "ServicePort": 514
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "The creation of the integration was successful.\n",
              "headers": {
                "Location": {
                  "schema": {
                    "type": "string",
                    "example": "/api/v1/eventsForwarding/integrations/1"
                  },
                  "description": "Where to find the integration newly created\n"
                }
              }
            },
            "400": {
              "description": "The request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/eventsForwarding/integrations\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Forward to Syslog\\\",\\\"type\\\":\\\"SYSLOG\\\",\\\"enabled\\\":true,\\\"channels\\\":[\\\"POLICY_EVENTS\\\"],\\\"connectionInfo\\\":{\\\"ServiceURL\\\":\\\"syslog-address\\\",\\\"ServicePort\\\":514}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/eventsForwarding/integrations \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Forward to Syslog\",\"type\":\"SYSLOG\",\"enabled\":true,\"channels\":[\"POLICY_EVENTS\"],\"connectionInfo\":{\"ServiceURL\":\"syslog-address\",\"ServicePort\":514}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/eventsForwarding/integrations',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Forward to Syslog',\n    type: 'SYSLOG',\n    enabled: true,\n    channels: ['POLICY_EVENTS'],\n    connectionInfo: {ServiceURL: 'syslog-address', ServicePort: 514}\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/eventsForwarding/integrations\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Forward to Syslog\\\",\\\"type\\\":\\\"SYSLOG\\\",\\\"enabled\\\":true,\\\"channels\\\":[\\\"POLICY_EVENTS\\\"],\\\"connectionInfo\\\":{\\\"ServiceURL\\\":\\\"syslog-address\\\",\\\"ServicePort\\\":514}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Forward to Syslog\\\",\\\"type\\\":\\\"SYSLOG\\\",\\\"enabled\\\":true,\\\"channels\\\":[\\\"POLICY_EVENTS\\\"],\\\"connectionInfo\\\":{\\\"ServiceURL\\\":\\\"syslog-address\\\",\\\"ServicePort\\\":514}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/v1/eventsForwarding/integrations\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/eventsForwarding/integrations/{integrationId}": {
        "get": {
          "summary": "Retrieve an integration given its id.",
          "description": "Retrieves a forwarding rule given its id.\n",
          "tags": [
            "Events Forwarding"
          ],
          "parameters": [
            {
              "name": "integrationId",
              "description": "The forwarding integration id.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "integer",
                "example": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The forwarding integration with a given id.",
              "content": {
                "application/json": {
                  "schema": {
                    "description": "Represents a command execution.\n",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "number",
                        "format": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "customerId": {
                        "type": "number",
                        "format": "integer"
                      },
                      "type": {
                        "description": "The integration type.\n",
                        "type": "string",
                        "enum": [
                          "SYSLOG",
                          "SPLUNK",
                          "MCM",
                          "QRADAR"
                        ]
                      },
                      "enabled": {
                        "type": "boolean"
                      },
                      "channels": {
                        "description": "The channels for which the integration must forward data from.\n",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "POLICY_EVENTS"
                          ]
                        }
                      },
                      "connectionInfo": {
                        "oneOf": [
                          {
                            "required": [
                              "ServiceURL",
                              "ServicePort"
                            ],
                            "properties": {
                              "ServiceURL": {
                                "type": "string"
                              },
                              "ServicePort": {
                                "type": "number",
                                "format": "integer"
                              },
                              "ServiceType": {
                                "type": "string",
                                "enum": [
                                  "tcp",
                                  "udp",
                                  "tls"
                                ]
                              },
                              "insecure": {
                                "type": "boolean"
                              },
                              "MessageFormat": {
                                "type": "string",
                                "enum": [
                                  "RFC_3164",
                                  "RFC_5424",
                                  "RFC_5425"
                                ]
                              },
                              "formatter": {
                                "type": "string",
                                "enum": [
                                  "JSON",
                                  "LEEF",
                                  "CEF"
                                ]
                              }
                            }
                          },
                          {
                            "required": [
                              "ServiceURL",
                              "ServiceToken"
                            ],
                            "properties": {
                              "ServiceURL": {
                                "type": "string"
                              },
                              "ServiceToken": {
                                "type": "string"
                              },
                              "SourceType": {
                                "type": "string"
                              },
                              "Index": {
                                "type": "string"
                              },
                              "insecure": {
                                "type": "boolean"
                              }
                            }
                          },
                          {
                            "required": [
                              "endpoint",
                              "apiKey"
                            ],
                            "properties": {
                              "endpoint": {
                                "type": "string"
                              },
                              "apiKey": {
                                "type": "string"
                              },
                              "insecure": {
                                "type": "boolean"
                              },
                              "accountId": {
                                "type": "string"
                              },
                              "providerId": {
                                "type": "string"
                              },
                              "noteName": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "required": [
                              "address",
                              "port"
                            ],
                            "properties": {
                              "address": {
                                "type": "string"
                              },
                              "port": {
                                "type": "number",
                                "format": "integer"
                              },
                              "insecure": {
                                "type": "boolean"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "example": {
                      "id": 1,
                      "name": "Forward to Syslog",
                      "customerId": 1,
                      "type": "syslog",
                      "enabled": true,
                      "channels": [
                        "POLICY_EVENTS"
                      ],
                      "connectionInfo": {
                        "ServiceURL": "syslog-address",
                        "ServicePort": 514
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "The integration could not be found."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "patch": {
          "summary": "Update an integration given its id.",
          "description": "Updates an integration given its id. The `PATCH` payload can be any\ncombination of the following fields having the value to change.\nNone of the `connectionInfo` fields are required for patching.\n",
          "tags": [
            "Events Forwarding"
          ],
          "parameters": [
            {
              "name": "integrationId",
              "description": "The forwarding integration id.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "integer",
                "example": 1
              }
            }
          ],
          "requestBody": {
            "description": "The content of the integration to update.\n",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "description": "The payload for updating an integration.\n",
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "Change the name of the integration.",
                      "type": "string"
                    },
                    "enabled": {
                      "description": "Enable/disable the integration.",
                      "type": "boolean"
                    },
                    "channels": {
                      "description": "The channels for which the integration must forward data from.\n",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "POLICY_EVENTS"
                        ]
                      }
                    },
                    "connectionInfo": {
                      "oneOf": [
                        {
                          "required": [
                            "ServiceURL",
                            "ServicePort"
                          ],
                          "properties": {
                            "ServiceURL": {
                              "type": "string"
                            },
                            "ServicePort": {
                              "type": "number",
                              "format": "integer"
                            },
                            "ServiceType": {
                              "type": "string",
                              "enum": [
                                "tcp",
                                "udp",
                                "tls"
                              ]
                            },
                            "insecure": {
                              "type": "boolean"
                            },
                            "MessageFormat": {
                              "type": "string",
                              "enum": [
                                "RFC_3164",
                                "RFC_5424",
                                "RFC_5425"
                              ]
                            },
                            "formatter": {
                              "type": "string",
                              "enum": [
                                "JSON",
                                "LEEF",
                                "CEF"
                              ]
                            }
                          }
                        },
                        {
                          "required": [
                            "ServiceURL",
                            "ServiceToken"
                          ],
                          "properties": {
                            "ServiceURL": {
                              "type": "string"
                            },
                            "ServiceToken": {
                              "type": "string"
                            },
                            "SourceType": {
                              "type": "string"
                            },
                            "Index": {
                              "type": "string"
                            },
                            "insecure": {
                              "type": "boolean"
                            }
                          }
                        },
                        {
                          "required": [
                            "endpoint",
                            "apiKey"
                          ],
                          "properties": {
                            "endpoint": {
                              "type": "string"
                            },
                            "apiKey": {
                              "type": "string"
                            },
                            "insecure": {
                              "type": "boolean"
                            },
                            "accountId": {
                              "type": "string"
                            },
                            "providerId": {
                              "type": "string"
                            },
                            "noteName": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "required": [
                            "address",
                            "port"
                          ],
                          "properties": {
                            "address": {
                              "type": "string"
                            },
                            "port": {
                              "type": "number",
                              "format": "integer"
                            },
                            "insecure": {
                              "type": "boolean"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "example": {
                    "enabled": true
                  }
                }
              }
            }
          },
          "responses": {
            "204": {
              "description": "The integration was successfully updated.\n",
              "headers": {
                "Location": {
                  "schema": {
                    "type": "string",
                    "example": "/api/v1/eventsForwarding/integrations/1"
                  },
                  "description": "Where to find the integration updated\n"
                }
              }
            },
            "404": {
              "description": "The integration could not be found."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"enabled\\\":true}\")\n\n\treq, _ := http.NewRequest(\"PATCH\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PATCH \\\n  --url https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"enabled\":true}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PATCH',\n  url: 'https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D',\n  headers: {'content-type': 'application/json'},\n  body: {enabled: true},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.patch(\"https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"enabled\\\":true}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"enabled\\\":true}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PATCH\", \"/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete an integration given its id.",
          "description": "Delete an integration given its id.\n",
          "tags": [
            "Events Forwarding"
          ],
          "parameters": [
            {
              "name": "integrationId",
              "description": "The forwarding integration id.",
              "required": true,
              "in": "path",
              "schema": {
                "type": "integer",
                "example": 1
              }
            }
          ],
          "responses": {
            "201": {
              "description": "The integration was successfully deleted.\n"
            },
            "404": {
              "description": "The integration could not be found."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/v1/eventsForwarding/integrations/%7BintegrationId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/profiling/profileGroups": {
        "get": {
          "summary": "Get info about profile groups for a customer",
          "description": "This endpoint returns the profile groups for a customer\n",
          "tags": [
            "Profiling"
          ],
          "responses": {
            "200": {
              "description": "An array of profile groups for a customer",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Identifier of this profile group."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specify whether the profile engine aggregates data at the container or host level.",
                          "enum": [
                            "AT_HOSTS",
                            "AT_CONTAINERS"
                          ]
                        },
                        "aggregationKeys": {
                          "type": "array",
                          "description": "List of metrics used to identify the entity to be profiles (e.g. [\"container.image\"].",
                          "items": {
                            "type": "string"
                          }
                        },
                        "uniqueIdKeys": {
                          "type": "array",
                          "description": "List of metrics used to identify a sub-entity inside an entity (e.g. [\"container.id\"].",
                          "items": {
                            "type": "string"
                          }
                        },
                        "profileCount": {
                          "type": "integer",
                          "description": "Number of profiles computed within the profileGroup.",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "lastTimestampUs": {
                          "type": "number",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/profiling/profileGroups\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/profiling/profileGroups"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v1/profiling/profileGroups'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/profiling/profileGroups\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/profiling/profileGroups\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/profiling/profileGroups/{profileGroupId}": {
        "get": {
          "summary": "Get info about a profile group with a specific id for a customer",
          "description": "This endpoint returns the profile group given a id for a customer\n",
          "parameters": [
            {
              "name": "profileGroupId",
              "in": "path",
              "description": "The id of the profile group",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Profiling"
          ],
          "responses": {
            "200": {
              "description": "The profile group for the given profileGroupId",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Identifier of this profile group."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specify whether the profile engine aggregates data at the container or host level.",
                        "enum": [
                          "AT_HOSTS",
                          "AT_CONTAINERS"
                        ]
                      },
                      "aggregationKeys": {
                        "type": "array",
                        "description": "List of metrics used to identify the entity to be profiles (e.g. [\"container.image\"].",
                        "items": {
                          "type": "string"
                        }
                      },
                      "uniqueIdKeys": {
                        "type": "array",
                        "description": "List of metrics used to identify a sub-entity inside an entity (e.g. [\"container.id\"].",
                        "items": {
                          "type": "string"
                        }
                      },
                      "profileCount": {
                        "type": "integer",
                        "description": "Number of profiles computed within the profileGroup.",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "lastTimestampUs": {
                        "type": "number",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/profiling/profileGroups/%7BprofileGroupId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/profiling/profileGroups/%7BprofileGroupId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/profiling/profileGroups/%7BprofileGroupId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/profiling/profileGroups/%7BprofileGroupId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/profiling/profileGroups/%7BprofileGroupId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/profiling/profileGroups/{profileGroupId}/profiles": {
        "get": {
          "summary": "Get all profiles for a given profileGroupId",
          "description": "This endpoint returns the profiles for a given profileGroupId\n",
          "parameters": [
            {
              "name": "profileGroupId",
              "in": "path",
              "description": "The id of the profile group",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "scoreMin",
              "in": "query",
              "description": "If specified, only profiles with a confidence score at least this amount will be retrieved. Defaults to `0`",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "status",
              "in": "query",
              "description": "A comma-separated list of statuses. If specified, only profiles with these statuses will be retrieved. Defaults to `['FINALIZED','LEARNING']`",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "FINALIZED",
                  "LEARNING"
                ]
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "If specified, filter to only include profiles where the profile name or image name (registry/repository:tag@hash) contains this string. Defaults to empty string",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "in": "query",
              "description": "Field used to sort. Defaults to `score`. Profiles with `status:'FINALIZED'` will always appear above `status:'LEARNING'`, for all values of `sortBy` except `sortBy:'status', sortMethod:'asc'`.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "score",
                  "profileName",
                  "status",
                  "createdOn"
                ]
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "If specified, a limit on the number of entries retrieved. If any filters are also specified, the limit will be applied on the filtered list. `limit` must be >= `1` and if it overflows the list all entries will be retrieved. Defaults to length of list",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "offset",
              "in": "query",
              "description": "If specified, a 0-based index on the profiles list. Only entries >= `offset` will be retrieved. Defaults to `0`. If any filters are also specified, this index will be applied on the filtered list. An empty list will be retrieved if this index overflows the list.",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "sortMethod",
              "in": "query",
              "description": "Sorting method. Defaults to `desc`.",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "desc",
                  "asc"
                ]
              }
            }
          ],
          "tags": [
            "Profiling"
          ],
          "responses": {
            "200": {
              "description": "The profiles for a given profileGroupId",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "offset": {
                        "type": "integer",
                        "description": "The start offset used"
                      },
                      "limit": {
                        "type": "integer",
                        "description": "The limit used. 0 for no limit."
                      },
                      "canLoadMore": {
                        "type": "boolean",
                        "description": "True if more results can be fetched."
                      },
                      "profiles": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "profileId",
                                "profileName",
                                "profileVersion",
                                "imageId",
                                "imageName"
                              ],
                              "properties": {
                                "profileId": {
                                  "type": "string",
                                  "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                                },
                                "profileName": {
                                  "type": "string",
                                  "description": "Name of the profile, which includes registry/repository:tag@hash."
                                },
                                "profileVersion": {
                                  "type": "integer",
                                  "description": "Version of the profile, incremented when the model is updated."
                                },
                                "imageId": {
                                  "type": "string",
                                  "description": "UUID of the image, based on a SHA256 of the image content."
                                },
                                "imageName": {
                                  "type": "string",
                                  "description": "Name of the image, as registry/repository:tag."
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "score"
                              ],
                              "properties": {
                                "score": {
                                  "type": "integer",
                                  "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "status",
                                "profileGroupId",
                                "processesProposal",
                                "fileSystemProposal",
                                "syscallProposal",
                                "networkProposal",
                                "containerImagesProposal"
                              ],
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Status of the model (learning or finalized).",
                                  "enum": [
                                    "LEARNING",
                                    "FINALIZED"
                                  ]
                                },
                                "profileGroupId": {
                                  "type": "integer",
                                  "description": "Identifier of the profile group."
                                },
                                "processesProposal": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "subcategories"
                                      ],
                                      "properties": {
                                        "subcategories": {
                                          "type": "array",
                                          "description": "A category has at least one subcategory. Each subcategory refers to one rule and has its own score and status.",
                                          "example": "The category `fileSystemProposal` will have an `items` array with subcategories such as \"files rw\" which refers to a single rule.",
                                          "items": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "ruleName"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Short description of the subcategory.",
                                                    "example": "files rw"
                                                  },
                                                  "ruleName": {
                                                    "type": "string",
                                                    "description": "Name of the rule object.",
                                                    "example": "Unexpected spawned process postgres in image a1b2c3d4e5f6"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "ruleType"
                                                ],
                                                "properties": {
                                                  "ruleType": {
                                                    "type": "string",
                                                    "description": "Indicates the rule type",
                                                    "enum": [
                                                      "PROCESS",
                                                      "CONTAINER",
                                                      "FILESYSTEM",
                                                      "NETWORK",
                                                      "SYSCALL",
                                                      "FALCO"
                                                    ],
                                                    "example": "FALCO"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "score"
                                                ],
                                                "properties": {
                                                  "score": {
                                                    "type": "integer",
                                                    "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "score"
                                      ],
                                      "properties": {
                                        "score": {
                                          "type": "integer",
                                          "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                        }
                                      }
                                    }
                                  ]
                                },
                                "fileSystemProposal": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "subcategories"
                                      ],
                                      "properties": {
                                        "subcategories": {
                                          "type": "array",
                                          "description": "A category has at least one subcategory. Each subcategory refers to one rule and has its own score and status.",
                                          "example": "The category `fileSystemProposal` will have an `items` array with subcategories such as \"files rw\" which refers to a single rule.",
                                          "items": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "ruleName"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Short description of the subcategory.",
                                                    "example": "files rw"
                                                  },
                                                  "ruleName": {
                                                    "type": "string",
                                                    "description": "Name of the rule object.",
                                                    "example": "Unexpected spawned process postgres in image a1b2c3d4e5f6"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "ruleType"
                                                ],
                                                "properties": {
                                                  "ruleType": {
                                                    "type": "string",
                                                    "description": "Indicates the rule type",
                                                    "enum": [
                                                      "PROCESS",
                                                      "CONTAINER",
                                                      "FILESYSTEM",
                                                      "NETWORK",
                                                      "SYSCALL",
                                                      "FALCO"
                                                    ],
                                                    "example": "FALCO"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "score"
                                                ],
                                                "properties": {
                                                  "score": {
                                                    "type": "integer",
                                                    "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "score"
                                      ],
                                      "properties": {
                                        "score": {
                                          "type": "integer",
                                          "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                        }
                                      }
                                    }
                                  ]
                                },
                                "syscallProposal": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "subcategories"
                                      ],
                                      "properties": {
                                        "subcategories": {
                                          "type": "array",
                                          "description": "A category has at least one subcategory. Each subcategory refers to one rule and has its own score and status.",
                                          "example": "The category `fileSystemProposal` will have an `items` array with subcategories such as \"files rw\" which refers to a single rule.",
                                          "items": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "ruleName"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Short description of the subcategory.",
                                                    "example": "files rw"
                                                  },
                                                  "ruleName": {
                                                    "type": "string",
                                                    "description": "Name of the rule object.",
                                                    "example": "Unexpected spawned process postgres in image a1b2c3d4e5f6"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "ruleType"
                                                ],
                                                "properties": {
                                                  "ruleType": {
                                                    "type": "string",
                                                    "description": "Indicates the rule type",
                                                    "enum": [
                                                      "PROCESS",
                                                      "CONTAINER",
                                                      "FILESYSTEM",
                                                      "NETWORK",
                                                      "SYSCALL",
                                                      "FALCO"
                                                    ],
                                                    "example": "FALCO"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "score"
                                                ],
                                                "properties": {
                                                  "score": {
                                                    "type": "integer",
                                                    "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "score"
                                      ],
                                      "properties": {
                                        "score": {
                                          "type": "integer",
                                          "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                        }
                                      }
                                    }
                                  ]
                                },
                                "networkProposal": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "subcategories"
                                      ],
                                      "properties": {
                                        "subcategories": {
                                          "type": "array",
                                          "description": "A category has at least one subcategory. Each subcategory refers to one rule and has its own score and status.",
                                          "example": "The category `fileSystemProposal` will have an `items` array with subcategories such as \"files rw\" which refers to a single rule.",
                                          "items": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "ruleName"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Short description of the subcategory.",
                                                    "example": "files rw"
                                                  },
                                                  "ruleName": {
                                                    "type": "string",
                                                    "description": "Name of the rule object.",
                                                    "example": "Unexpected spawned process postgres in image a1b2c3d4e5f6"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "ruleType"
                                                ],
                                                "properties": {
                                                  "ruleType": {
                                                    "type": "string",
                                                    "description": "Indicates the rule type",
                                                    "enum": [
                                                      "PROCESS",
                                                      "CONTAINER",
                                                      "FILESYSTEM",
                                                      "NETWORK",
                                                      "SYSCALL",
                                                      "FALCO"
                                                    ],
                                                    "example": "FALCO"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "score"
                                                ],
                                                "properties": {
                                                  "score": {
                                                    "type": "integer",
                                                    "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "score"
                                      ],
                                      "properties": {
                                        "score": {
                                          "type": "integer",
                                          "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                        }
                                      }
                                    }
                                  ]
                                },
                                "containerImagesProposal": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "subcategories"
                                      ],
                                      "properties": {
                                        "subcategories": {
                                          "type": "array",
                                          "description": "A category has at least one subcategory. Each subcategory refers to one rule and has its own score and status.",
                                          "example": "The category `fileSystemProposal` will have an `items` array with subcategories such as \"files rw\" which refers to a single rule.",
                                          "items": {
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "required": [
                                                  "name",
                                                  "ruleName"
                                                ],
                                                "properties": {
                                                  "name": {
                                                    "type": "string",
                                                    "description": "Short description of the subcategory.",
                                                    "example": "files rw"
                                                  },
                                                  "ruleName": {
                                                    "type": "string",
                                                    "description": "Name of the rule object.",
                                                    "example": "Unexpected spawned process postgres in image a1b2c3d4e5f6"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "ruleType"
                                                ],
                                                "properties": {
                                                  "ruleType": {
                                                    "type": "string",
                                                    "description": "Indicates the rule type",
                                                    "enum": [
                                                      "PROCESS",
                                                      "CONTAINER",
                                                      "FILESYSTEM",
                                                      "NETWORK",
                                                      "SYSCALL",
                                                      "FALCO"
                                                    ],
                                                    "example": "FALCO"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "score"
                                                ],
                                                "properties": {
                                                  "score": {
                                                    "type": "integer",
                                                    "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "score"
                                      ],
                                      "properties": {
                                        "score": {
                                          "type": "integer",
                                          "description": "Value from 0 to 1000 representing the score of the category or subcategory."
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        },
                        "description": "The profiles retrieved"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/profiling/profileGroups/%7BprofileGroupId%7D/profiles?scoreMin=SOME_INTEGER_VALUE&status=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE&sortMethod=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v1/profiling/profileGroups/%7BprofileGroupId%7D/profiles?scoreMin=SOME_INTEGER_VALUE&status=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE&sortMethod=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/profiling/profileGroups/%7BprofileGroupId%7D/profiles',\n  qs: {\n    scoreMin: 'SOME_INTEGER_VALUE',\n    status: 'SOME_STRING_VALUE',\n    filter: 'SOME_STRING_VALUE',\n    sortBy: 'SOME_STRING_VALUE',\n    limit: 'SOME_INTEGER_VALUE',\n    offset: 'SOME_INTEGER_VALUE',\n    sortMethod: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/profiling/profileGroups/%7BprofileGroupId%7D/profiles?scoreMin=SOME_INTEGER_VALUE&status=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE&sortMethod=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/profiling/profileGroups/%7BprofileGroupId%7D/profiles?scoreMin=SOME_INTEGER_VALUE&status=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE&offset=SOME_INTEGER_VALUE&sortMethod=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/profiling/profiles/{profileId}": {
        "get": {
          "summary": "Get profile matching given profileId",
          "description": "This endpoint returns the profile matching a given profileId\n",
          "parameters": [
            {
              "name": "profileId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Profiling"
          ],
          "responses": {
            "200": {
              "description": "The profile for a given profileId",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "profileGroupId": {
                        "type": "integer",
                        "description": "Identifier of the related profile group."
                      },
                      "id": {
                        "type": "string",
                        "description": "UUID of this profile."
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of the profile inside the profileGroup."
                      },
                      "mainKeyValues": {
                        "type": "array",
                        "description": "Values for the ProfileGroup.aggregationKeys.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "profileLifeTracker": {
                        "type": "object",
                        "description": "keep track of the life of an entity",
                        "properties": {
                          "firstSeenUs": {
                            "type": "integer"
                          },
                          "lastSeenUs": {
                            "type": "integer"
                          },
                          "currentTimeUs": {
                            "type": "integer"
                          },
                          "activeTimeUs": {
                            "type": "integer"
                          }
                        }
                      },
                      "proposedPolicy": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A short name for the policy",
                                "example": "Check filesystem activity"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of policy",
                                "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                              },
                              "severity": {
                                "type": "integer",
                                "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                                "items": {
                                  "type": "string"
                                },
                                "example": 4
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "True if the policy should be considered",
                                "example": true
                              },
                              "scope": {
                                "type": "string",
                                "description": "Where the policy is being applied- Container, Host etc..",
                                "example": "container.image.repository = sysdig/agent"
                              },
                              "ruleNames": {
                                "type": "array",
                                "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Write below binary dir",
                                  "Write below root",
                                  "Write below monitored dir"
                                ]
                              },
                              "actions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "POLICY_ACTION_CAPTURE"
                                          ]
                                        },
                                        "filter": {
                                          "type": "string",
                                          "description": "specifies the subset to match",
                                          "example": "proc.name=cat or proc.name=vi"
                                        },
                                        "isLimitedToContainer": {
                                          "type": "boolean"
                                        },
                                        "beforeEventNs": {
                                          "type": "integer",
                                          "description": "period of time to capture before event in nanoseconds"
                                        },
                                        "afterEventNs": {
                                          "type": "integer",
                                          "description": "period of time to capture after event in nanoseconds"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "the name of the file in which the capture will be saved"
                                        },
                                        "storageType": {
                                          "type": "string",
                                          "description": "specifies which strategy will be taken to store the capture",
                                          "enum": [
                                            "LOCAL",
                                            "S3",
                                            "AGENT",
                                            "PROVIDED",
                                            "CASSANDRA"
                                          ]
                                        },
                                        "bucketName": {
                                          "type": "string",
                                          "description": "identifies an s3 compliant bucket"
                                        },
                                        "folder": {
                                          "type": "string",
                                          "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                        },
                                        "storageId": {
                                          "type": "integer",
                                          "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "POLICY_ACTION_STOP"
                                          ]
                                        },
                                        "msg": {
                                          "type": "string",
                                          "description": "a message to send to the thing being stopped"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "POLICY_ACTION_PAUSE"
                                          ]
                                        },
                                        "msg": {
                                          "type": "string",
                                          "description": "a message to send to the thing being paused"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "POLICY_ACTION_KILL"
                                          ]
                                        },
                                        "msg": {
                                          "type": "string",
                                          "description": "a message to send to the thing being killed"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                                "enum": [
                                  "falco",
                                  "list_matching",
                                  "k8s_audit",
                                  "aws_cloudtrail",
                                  "gcp_auditlog",
                                  "azure_platformlogs"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Unique identifier representing a specific policy.",
                                "example": 1
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of the object. Incremented on each update and used for optimistic locking",
                                "example": 18
                              },
                              "createdOn": {
                                "type": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "notificationChannelIds": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "example": [
                                    3,
                                    5
                                  ]
                                }
                              },
                              "profile": {
                                "type": "object",
                                "required": [
                                  "profileId",
                                  "profileName",
                                  "profileVersion",
                                  "imageId",
                                  "imageName"
                                ],
                                "properties": {
                                  "profileId": {
                                    "type": "string",
                                    "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                                  },
                                  "profileName": {
                                    "type": "string",
                                    "description": "Name of the profile, which includes registry/repository:tag@hash."
                                  },
                                  "profileVersion": {
                                    "type": "integer",
                                    "description": "Version of the profile, incremented when the model is updated."
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "description": "UUID of the image, based on a SHA256 of the image content."
                                  },
                                  "imageName": {
                                    "type": "string",
                                    "description": "Name of the image, as registry/repository:tag."
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "proposedRules": {
                        "type": "array",
                        "description": "Array of rules referred to by the proposed policy in `proposedPolicy`, that have not yet been created. Each of the `ruleNames` in `proposedPolicy` must refer to a rule's `name` of either a proposed rule in this array or a rule that already exists.",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "origin",
                                "versionId",
                                "filename",
                                "version",
                                "modifiedOn",
                                "createdOn"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "A unique identifier representing a specific rule",
                                  "example": 1
                                },
                                "name": {
                                  "type": "string",
                                  "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                  "example": "Write Below Binary Dir"
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                  "enum": [
                                    "Secure UI",
                                    "Sysdig",
                                    "Customer",
                                    "Profiling",
                                    "K8s Policy Advisor"
                                  ],
                                  "example": "Secure UI"
                                },
                                "versionId": {
                                  "type": "string",
                                  "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                  "example": "v1.2.3"
                                },
                                "filename": {
                                  "type": "string",
                                  "description": "Name of the file in which the rule is defined. For Default Falco rules, this should come from the name property of the FalcoRulesFile object that contained this rule. For other falco rules, the filename should be \"falco_rules.local.yaml\". For non-falco rules, the filename should be \"fast_rules.local.yaml\".",
                                  "example": "falco_rules.local.yaml"
                                },
                                "version": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "The version is incremented when the update is successful.",
                                  "example": 5
                                },
                                "createdOn": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                  "example": 1553702727177
                                },
                                "modifiedOn": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                  "example": 1553702738288
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "tags"
                              ],
                              "properties": {
                                "tags": {
                                  "type": "array",
                                  "description": "The set of tags",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "Kubernetes",
                                    "CIS Compliance",
                                    "File Integrity"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "description",
                                "details"
                              ],
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "A description of this rule. No newlines/formatting.",
                                  "example": "an attempt to write to any file below a set of binary directories"
                                },
                                "details": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "append": {
                                              "type": "string",
                                              "enum": [
                                                true,
                                                false
                                              ],
                                              "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                              "example": "true"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "ruleType"
                                          ],
                                          "properties": {
                                            "ruleType": {
                                              "type": "string",
                                              "description": "Indicates the rule type",
                                              "enum": [
                                                "PROCESS",
                                                "CONTAINER",
                                                "FILESYSTEM",
                                                "NETWORK",
                                                "SYSCALL",
                                                "FALCO"
                                              ],
                                              "example": "FALCO"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "condition"
                                          ],
                                          "properties": {
                                            "condition": {
                                              "type": "object",
                                              "required": [
                                                "condition",
                                                "components"
                                              ],
                                              "properties": {
                                                "condition": {
                                                  "type": "string",
                                                  "description": "the full condition text exactly as represented in the yaml file",
                                                  "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                                },
                                                "components": {
                                                  "type": "array",
                                                  "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                                  "items": {
                                                    "type": "object",
                                                    "oneOf": [
                                                      {
                                                        "type": "object",
                                                        "required": [
                                                          "conditionText"
                                                        ],
                                                        "properties": {
                                                          "text": {
                                                            "type": "string",
                                                            "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                            "example": "evt.type in (open, openat) and "
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "required": [
                                                          "falcoMacroReference"
                                                        ],
                                                        "properties": {
                                                          "falcoMacroReference": {
                                                            "type": "string",
                                                            "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                            "example": "bin_dir"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "required": [
                                                          "falcoListReference"
                                                        ],
                                                        "properties": {
                                                          "falcoListReference": {
                                                            "type": "string",
                                                            "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                            "example": "monitored_directories"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "output",
                                            "priority"
                                          ],
                                          "properties": {
                                            "output": {
                                              "type": "string",
                                              "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                              "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                            },
                                            "priority": {
                                              "type": "string",
                                              "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                              "enum": [
                                                "emergency",
                                                "alert",
                                                "critical",
                                                "error",
                                                "warning",
                                                "notice",
                                                "informational",
                                                "debug"
                                              ],
                                              "example": "error"
                                            },
                                            "source": {
                                              "type": "string",
                                              "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                              "enum": [
                                                "syscall",
                                                "k8s_audit",
                                                "aws_cloudtrail",
                                                "gcp_auditlog",
                                                "azure_platformlogs"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "processes",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "processes": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "readWritePaths",
                                        "readPaths",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "readWritePaths": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "readPaths": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "syscalls",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "syscalls": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "containers",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "containers": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "tcpListenPorts",
                                        "udpListenPorts",
                                        "allOutbound",
                                        "allInbound",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "allOutbound": {
                                          "type": "boolean",
                                          "description": "If true, then all outbound connection attempts match this rule",
                                          "example": true
                                        },
                                        "allInbound": {
                                          "type": "boolean",
                                          "description": "If true, then all inbound connection attempts match this rule",
                                          "example": true
                                        },
                                        "tcpListenPorts": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "udpListenPorts": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "The requested resource was not found. More information about 404 can be found at https://httpstatuses.com/404",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Generic error from API",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/profiling/profiles/%7BprofileId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/profiling/profiles/{profileId}/actions/reset": {
        "post": {
          "summary": "Reset a profile given the profileId",
          "description": "This endpoint can be used to reset a profile given a profileId\n",
          "parameters": [
            {
              "name": "profileId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Profiling"
          ],
          "responses": {
            "200": {
              "description": "The ActionsProfileResponse containing time when profile was reset",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Profile reset action response",
                    "properties": {
                      "resetTimeUs": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Generic error from API",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D/actions/reset\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D/actions/reset"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D/actions/reset'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D/actions/reset\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/v1/profiling/profiles/%7BprofileId%7D/actions/reset\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/profiling/profiles/{profileId}/actions/remove": {
        "post": {
          "summary": "Remove a profile given the profileId",
          "description": "This endpoint can be used to remove a profile given a profileId\n",
          "parameters": [
            {
              "name": "profileId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Profiling"
          ],
          "responses": {
            "200": {
              "description": "The ActionsProfileResponse containing time when profile was removed",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Profile reset action response",
                    "properties": {
                      "resetTimeUs": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Indicates a parameter, header or another quality of the request was malformed. More information about 400 can be found at https://httpstatuses.com/400",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "500": {
              "description": "Generic error from API",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D/actions/remove\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D/actions/remove"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D/actions/remove'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/profiling/profiles/%7BprofileId%7D/actions/remove\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/v1/profiling/profiles/%7BprofileId%7D/actions/remove\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/profiling/status": {
        "get": {
          "summary": "Get status of Profiling API",
          "description": "This endpoint can be used to get status of Profiling API\n",
          "tags": [
            "Profiling"
          ],
          "responses": {
            "200": {
              "description": "The ActionsProfileResponse containing time when profile was removed",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "description": "The user failed to authenticate. More information about 401 can be found at https://httpstatuses.com/401",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "403": {
              "description": "API Access Forbidden",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/profiling/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/profiling/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v1/profiling/status'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/profiling/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/profiling/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/accounts": {
        "post": {
          "summary": "Create a new Cloud Account.",
          "description": "Creates a Cloud Account for a customer.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "includeExternalId",
              "in": "query",
              "description": "Fetches the customer's external id. Note: includeExternalID is also honored for backwards compatability",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upsert",
              "in": "query",
              "description": "Upserts the customer's cloud account.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cloud Account is successfully created",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "The cloud account identifier",
                            "example": 237944556329
                          },
                          "provider": {
                            "type": "string",
                            "description": "The cloud provider's name",
                            "example": "aws"
                          },
                          "alias": {
                            "type": "string",
                            "description": "Friendly name to identify",
                            "example": "Sysdig Prod"
                          },
                          "roleAvailable": {
                            "type": "boolean",
                            "description": "Whether the cloud account's provisioned role is enabled",
                            "example": false
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role name associated with the Cloud Account",
                            "example": "Sysdig Cloud Bench"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "externalId": {
                            "description": "The externalId of the Cloud Account",
                            "example": "6152496c47126ba1079afd2a0b63645d"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "409": {
              "description": "Cloud account already exists."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/accounts?includeExternalId=SOME_STRING_VALUE&upsert=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/accounts?includeExternalId=SOME_STRING_VALUE&upsert=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/cloud/v2/accounts',\n  qs: {includeExternalId: 'SOME_STRING_VALUE', upsert: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/cloud/v2/accounts?includeExternalId=SOME_STRING_VALUE&upsert=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/cloud/v2/accounts?includeExternalId=SOME_STRING_VALUE&upsert=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "get": {
          "summary": "List the Cloud Accounts.",
          "description": "Lists all cloud accounts for a customer.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "includeExternalId",
              "in": "query",
              "description": "Fetches the customer's external id. Note: includeExternalID is also honored for backwards compatability",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "accountId": {
                          "type": "string",
                          "description": "The cloud account identifier",
                          "example": 237944556329
                        },
                        "provider": {
                          "type": "string",
                          "description": "The cloud provider's name",
                          "example": "aws"
                        },
                        "alias": {
                          "type": "string",
                          "description": "Friendly name to identify",
                          "example": "Sysdig Prod"
                        },
                        "roleAvailable": {
                          "type": "boolean",
                          "description": "Whether the cloud account's provisioned role is enabled",
                          "example": false
                        },
                        "roleName": {
                          "type": "string",
                          "description": "The role name associated with the Cloud Account",
                          "example": "Sysdig Cloud Bench"
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/accounts?includeExternalId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/accounts?includeExternalId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/accounts',\n  qs: {includeExternalId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/accounts?includeExternalId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/accounts?includeExternalId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/accountIDs": {
        "get": {
          "summary": "List the Cloud Account IDs.",
          "description": "Lists all cloud account IDs for a customer.",
          "tags": [
            "Cloud"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": [
                      "411112345678",
                      "845123456789"
                    ]
                  }
                }
              }
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/accountIDs\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/cloud/v2/accountIDs"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/cloud/v2/accountIDs'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/accountIDs\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/accountIDs\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/accounts/register": {
        "post": {
          "summary": "Register a new Cloud Account.",
          "description": "Registers a Cloud Account upon success will additionally create cloud account metadata.",
          "tags": [
            "Cloud"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Cloud Account register request.",
                  "properties": {
                    "accountId": {
                      "type": "string",
                      "example": 237944556329
                    },
                    "region": {
                      "type": "string",
                      "example": "us-west"
                    },
                    "provider": {
                      "type": "string",
                      "example": "aws"
                    },
                    "component": {
                      "type": "string",
                      "example": "cloud-connector"
                    },
                    "buildVersion": {
                      "type": "string",
                      "example": "v0.14.1-3-gcb3c647 - 2022-01-12T11:12:02Z"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Account is successfully registered",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "The cloud account identifier",
                            "example": 237944556329
                          },
                          "provider": {
                            "type": "string",
                            "description": "The cloud provider's name",
                            "example": "aws"
                          },
                          "alias": {
                            "type": "string",
                            "description": "Friendly name to identify",
                            "example": "Sysdig Prod"
                          },
                          "roleAvailable": {
                            "type": "boolean",
                            "description": "Whether the cloud account's provisioned role is enabled",
                            "example": false
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role name associated with the Cloud Account",
                            "example": "Sysdig Cloud Bench"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "customerTier": {
                            "type": "string",
                            "example": "enterprise"
                          },
                          "status": {
                            "type": "string",
                            "example": "active"
                          },
                          "accountLimit": {
                            "type": "number",
                            "example": 50
                          },
                          "regionLimit": {
                            "type": "number",
                            "example": -1
                          },
                          "customerID": {
                            "type": "number",
                            "example": 683
                          },
                          "expirationDate": {
                            "type": "number",
                            "example": 0
                          },
                          "maxScansLimit": {
                            "type": "number",
                            "example": -1
                          },
                          "segmentToken": {
                            "type": "number",
                            "example": "v0npn8wfSFqZCOfJjDqm8d6t8fiBYE3S"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/accounts/register\"\n\n\tpayload := strings.NewReader(\"{\\\"accountId\\\":237944556329,\\\"region\\\":\\\"us-west\\\",\\\"provider\\\":\\\"aws\\\",\\\"component\\\":\\\"cloud-connector\\\",\\\"buildVersion\\\":\\\"v0.14.1-3-gcb3c647 - 2022-01-12T11:12:02Z\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/cloud/v2/accounts/register \\\n  --header 'content-type: application/json' \\\n  --data '{\"accountId\":237944556329,\"region\":\"us-west\",\"provider\":\"aws\",\"component\":\"cloud-connector\",\"buildVersion\":\"v0.14.1-3-gcb3c647 - 2022-01-12T11:12:02Z\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/cloud/v2/accounts/register',\n  headers: {'content-type': 'application/json'},\n  body: {\n    accountId: 237944556329,\n    region: 'us-west',\n    provider: 'aws',\n    component: 'cloud-connector',\n    buildVersion: 'v0.14.1-3-gcb3c647 - 2022-01-12T11:12:02Z'\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/cloud/v2/accounts/register\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"accountId\\\":237944556329,\\\"region\\\":\\\"us-west\\\",\\\"provider\\\":\\\"aws\\\",\\\"component\\\":\\\"cloud-connector\\\",\\\"buildVersion\\\":\\\"v0.14.1-3-gcb3c647 - 2022-01-12T11:12:02Z\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"accountId\\\":237944556329,\\\"region\\\":\\\"us-west\\\",\\\"provider\\\":\\\"aws\\\",\\\"component\\\":\\\"cloud-connector\\\",\\\"buildVersion\\\":\\\"v0.14.1-3-gcb3c647 - 2022-01-12T11:12:02Z\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/cloud/v2/accounts/register\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/accounts/{accountId}": {
        "get": {
          "summary": "Get the Cloud Account.",
          "description": "Fetches a cloud account for a given customer and accountId.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "accountId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "includeExternalId",
              "in": "query",
              "description": "Fetches the customer's external id. Note: includeExternalID is also honored for backwards compatability",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "The cloud account identifier",
                            "example": 237944556329
                          },
                          "provider": {
                            "type": "string",
                            "description": "The cloud provider's name",
                            "example": "aws"
                          },
                          "alias": {
                            "type": "string",
                            "description": "Friendly name to identify",
                            "example": "Sysdig Prod"
                          },
                          "roleAvailable": {
                            "type": "boolean",
                            "description": "Whether the cloud account's provisioned role is enabled",
                            "example": false
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role name associated with the Cloud Account",
                            "example": "Sysdig Cloud Bench"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "externalId": {
                            "description": "The externalId of the Cloud Account",
                            "example": "6152496c47126ba1079afd2a0b63645d"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D?includeExternalId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D?includeExternalId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D',\n  qs: {includeExternalId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D?includeExternalId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/accounts/%7BaccountId%7D?includeExternalId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the alias or roleAvailable of a Cloud Account.",
          "description": "Edits the alias or roleAvailable field of a given accountId for customer.  The existing provider must be remembered and the alias or the roleAvailable values if intending to keep them as the same. Else, default values will be supplied during update.\n",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "accountID",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Alias update request.",
                  "properties": {
                    "provider": {
                      "type": "string",
                      "description": "The cloud provider's name",
                      "example": "aws"
                    },
                    "alias": {
                      "type": "string",
                      "description": "The friendly name of the cloud account.",
                      "example": "Sysdig Dev"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "accountId": {
                            "type": "string",
                            "description": "The cloud account identifier",
                            "example": 237944556329
                          },
                          "provider": {
                            "type": "string",
                            "description": "The cloud provider's name",
                            "example": "aws"
                          },
                          "alias": {
                            "type": "string",
                            "description": "Friendly name to identify",
                            "example": "Sysdig Prod"
                          },
                          "roleAvailable": {
                            "type": "boolean",
                            "description": "Whether the cloud account's provisioned role is enabled",
                            "example": false
                          },
                          "roleName": {
                            "type": "string",
                            "description": "The role name associated with the Cloud Account",
                            "example": "Sysdig Cloud Bench"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "externalId": {
                            "description": "The externalId of the Cloud Account",
                            "example": "6152496c47126ba1079afd2a0b63645d"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"provider\\\":\\\"aws\\\",\\\"alias\\\":\\\"Sysdig Dev\\\"}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"provider\":\"aws\",\"alias\":\"Sysdig Dev\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D',\n  headers: {'content-type': 'application/json'},\n  body: {provider: 'aws', alias: 'Sysdig Dev'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"provider\\\":\\\"aws\\\",\\\"alias\\\":\\\"Sysdig Dev\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"provider\\\":\\\"aws\\\",\\\"alias\\\":\\\"Sysdig Dev\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/cloud/v2/accounts/%7BaccountId%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete a Cloud Account.",
          "description": "Deletes a cloud account for a given customer and accountId.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "accountID",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/cloud/v2/accounts/%7BaccountId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/accounts/{accountId}/validateRole": {
        "get": {
          "summary": "Determine whether a valid role exists.",
          "description": "Uses the role name set upon cloud account creation and attempts to assume that role to determine if the role is valid. Enables the role if not explicitly specified by the customer.\n",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "accountID",
              "in": "path",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "enableOnSuccess",
              "in": "query",
              "description": "Whether to enable the role if it is valid.",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Role is successfully validated",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "example": true
                      },
                      "reason": {
                        "type": "string",
                        "example": "Invalid roleName"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D/validateRole?enableOnSuccess=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D/validateRole?enableOnSuccess=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D/validateRole',\n  qs: {enableOnSuccess: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/accounts/%7BaccountId%7D/validateRole?enableOnSuccess=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/accounts/%7BaccountId%7D/validateRole?enableOnSuccess=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/dataSources/accounts": {
        "get": {
          "summary": "List the Cloud Account's Datasources.",
          "description": "Lists the Cloud Account information with regions and clusters.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "Free text filter. Searches on the following fields: `accountId`, `region`",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "in": "query",
              "description": "Sort by column. Options: `accountId`, `alias`, `clustersConnected`, `platform`. Default is `accountId`",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sort order. Options: `asc`, `desc`",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Datasources Cloud Accounts get request.",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "description": "The cloud provider's name",
                          "example": "aws",
                          "enum": [
                            "aws",
                            "gcp",
                            "azure"
                          ]
                        },
                        "accountId": {
                          "type": "string",
                          "description": "The cloud account identifier",
                          "example": 237944556329
                        },
                        "connectedClusters": {
                          "type": "number",
                          "example": 25
                        },
                        "unconnectedClusters": {
                          "type": "number",
                          "example": 5
                        },
                        "regions": {
                          "type": "array",
                          "description": "A list of cloud regions where the cloud account is active.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The cloud region identifier",
                                "example": "us-west-2"
                              },
                              "state": {
                                "type": "string",
                                "description": "Whether the region is active",
                                "example": "active",
                                "enum": [
                                  "active",
                                  "inactive"
                                ]
                              },
                              "createdAt": {
                                "type": "string",
                                "example": "2020-11-15T01:16:02.469729Z"
                              },
                              "lastSeenAt": {
                                "type": "string",
                                "example": "2020-11-15T01:16:02.469729Z"
                              },
                              "connectedClusters": {
                                "type": "number",
                                "example": 10
                              },
                              "unconnectedClusters": {
                                "type": "number",
                                "example": 2
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/dataSources/accounts?provider=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&sort=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/dataSources/accounts?provider=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&sort=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/dataSources/accounts',\n  qs: {\n    provider: 'SOME_STRING_VALUE',\n    filter: 'SOME_STRING_VALUE',\n    sortBy: 'SOME_STRING_VALUE',\n    sort: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/dataSources/accounts?provider=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&sort=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/dataSources/accounts?provider=SOME_STRING_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&sort=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/dataSources/clusters": {
        "get": {
          "summary": "List the Cloud Account's Clusters.",
          "description": "Lists all clusters across a customer's accounts.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "accountId",
              "in": "query",
              "description": "Filter by account ID",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "connected",
              "in": "query",
              "description": "Filter by connected status",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "filter",
              "in": "query",
              "description": "Free text filter. Searches on the following fields: `name`, `region`",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sortBy",
              "in": "query",
              "description": "Sort by column. Options: `accountId`, `status`, `clusterName`, `region`, `platform`, `nodeCount`, `version`, `createdAt`. Default is `accountId`",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Sort order. Options: `asc`, `desc`",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Datasources Clusters get request.",
                      "properties": {
                        "provider": {
                          "type": "string",
                          "description": "The cloud provider's name",
                          "example": "aws",
                          "enum": [
                            "aws",
                            "gcp",
                            "azure"
                          ]
                        },
                        "agentConnected": {
                          "type": "boolean",
                          "description": "Whether the cluster has the agent installed",
                          "example": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The cluster name",
                          "example": "us-west-2-cluster"
                        },
                        "accountId": {
                          "type": "string",
                          "description": "The cloud account identifier",
                          "example": 237944556329
                        },
                        "region": {
                          "type": "string",
                          "description": "The cluster region",
                          "example": "us-west-2"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2020-04-21T16:08:08.845336507Z"
                        },
                        "nodeCount": {
                          "type": "number",
                          "example": 3
                        },
                        "nodeResourceGroup": {
                          "type": "string",
                          "description": "node resource group for azure",
                          "example": "node-group"
                        },
                        "agentConnectString": {
                          "type": "string",
                          "description": "string with credentials used for connecting agent",
                          "example": "aws eks update-kubeconfig"
                        }
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/dataSources/clusters?provider=SOME_STRING_VALUE&accountId=SOME_STRING_VALUE&connected=SOME_BOOLEAN_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&sort=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/dataSources/clusters?provider=SOME_STRING_VALUE&accountId=SOME_STRING_VALUE&connected=SOME_BOOLEAN_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&sort=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/dataSources/clusters',\n  qs: {\n    provider: 'SOME_STRING_VALUE',\n    accountId: 'SOME_STRING_VALUE',\n    connected: 'SOME_BOOLEAN_VALUE',\n    filter: 'SOME_STRING_VALUE',\n    sortBy: 'SOME_STRING_VALUE',\n    sort: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/dataSources/clusters?provider=SOME_STRING_VALUE&accountId=SOME_STRING_VALUE&connected=SOME_BOOLEAN_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&sort=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/dataSources/clusters?provider=SOME_STRING_VALUE&accountId=SOME_STRING_VALUE&connected=SOME_BOOLEAN_VALUE&filter=SOME_STRING_VALUE&sortBy=SOME_STRING_VALUE&sort=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/dataSources/status": {
        "get": {
          "summary": "Get the DataSources status.",
          "description": "Get the DataSources endpoint status.",
          "tags": [
            "Cloud"
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            },
            "503": {
              "description": "The service is currently unavailable"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/dataSources/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/cloud/v2/dataSources/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/dataSources/status'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/dataSources/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/dataSources/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/users": {
        "get": {
          "summary": "Get the list of users.",
          "description": "Fetches the list of users.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "kind",
              "in": "query",
              "description": "Filter by kind",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "user",
                  "role"
                ]
              }
            },
            {
              "name": "actorName",
              "in": "query",
              "description": "Filter by actor name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "actorID",
              "in": "query",
              "description": "Filter by actor id",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Limit the amount of results to be fetched",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "Cursor is used for API pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "riskLabels",
              "in": "query",
              "description": "Filter by risk labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "No MFA",
                  "Admin",
                  "Root User",
                  "Inactive",
                  "Multiple Access Keys Active",
                  "Access Key 1 Not Rotated",
                  "Access Key 2 Not Rotated",
                  "Public",
                  "Default SSE Not Enabled"
                ]
              }
            },
            {
              "name": "profilingLabels",
              "in": "query",
              "description": "Filter by profiling labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Learning"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "object",
                            "properties": {
                              "limit": {
                                "type": "number",
                                "example": 100
                              },
                              "next": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Users paginated response.",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "customerID": {
                                  "type": "number",
                                  "example": 1
                                },
                                "accountID": {
                                  "type": "string",
                                  "example": 411112345678
                                },
                                "provider": {
                                  "type": "string",
                                  "example": "aws"
                                },
                                "actorName": {
                                  "type": "string",
                                  "example": "sysdig-integration"
                                },
                                "actorID": {
                                  "type": "string",
                                  "example": "arn:aws:iam::411112345678:user/sysdig-integration"
                                },
                                "actorKind": {
                                  "type": "string",
                                  "example": "user"
                                },
                                "policies": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "arn:aws:iam::411112345678:policy/AdminAccess"
                                  }
                                },
                                "groups": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "sysdig-integration"
                                  }
                                },
                                "numPermissionsGiven": {
                                  "type": "number",
                                  "example": 1
                                },
                                "numPermissionsUsed": {
                                  "type": "number",
                                  "example": 0
                                },
                                "numPermissionsUnused": {
                                  "type": "number",
                                  "example": 10471
                                },
                                "effectivePermissionsCount": {
                                  "type": "number",
                                  "example": 10471
                                },
                                "lastActiveDate": {
                                  "type": "string",
                                  "example": "2022-01-24T07:30:16Z"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {
                                    "risk": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "No MFA"
                                      }
                                    },
                                    "profiling": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "Learning"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/users?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/users?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/users',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    provider: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    actorName: 'SOME_STRING_VALUE',\n    actorID: 'SOME_STRING_VALUE',\n    limit: 'SOME_STRING_VALUE',\n    cursor: 'SOME_STRING_VALUE',\n    riskLabels: 'SOME_STRING_VALUE',\n    profilingLabels: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/users?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/users?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/users/unused": {
        "get": {
          "summary": "Get the list of unused users.",
          "description": "Fetches the list of unused users based on Excessive Permissions.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "kind",
              "in": "query",
              "description": "Filter by kind",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "user",
                  "role"
                ]
              }
            },
            {
              "name": "actorName",
              "in": "query",
              "description": "Filter by actor name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "actorID",
              "in": "query",
              "description": "Filter by actor id",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Limit the amount of results to be fetched",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "Cursor is used for API pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "riskLabels",
              "in": "query",
              "description": "Filter by risk labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "No MFA",
                  "Admin",
                  "Root User",
                  "Inactive",
                  "Multiple Access Keys Active",
                  "Access Key 1 Not Rotated",
                  "Access Key 2 Not Rotated",
                  "Public",
                  "Default SSE Not Enabled"
                ]
              }
            },
            {
              "name": "profilingLabels",
              "in": "query",
              "description": "Filter by profiling labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Learning"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "object",
                            "properties": {
                              "limit": {
                                "type": "number",
                                "example": 100
                              },
                              "next": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Users paginated response.",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "customerID": {
                                  "type": "number",
                                  "example": 1
                                },
                                "accountID": {
                                  "type": "string",
                                  "example": 411112345678
                                },
                                "provider": {
                                  "type": "string",
                                  "example": "aws"
                                },
                                "actorName": {
                                  "type": "string",
                                  "example": "sysdig-integration"
                                },
                                "actorID": {
                                  "type": "string",
                                  "example": "arn:aws:iam::411112345678:user/sysdig-integration"
                                },
                                "actorKind": {
                                  "type": "string",
                                  "example": "user"
                                },
                                "policies": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "arn:aws:iam::411112345678:policy/AdminAccess"
                                  }
                                },
                                "groups": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "sysdig-integration"
                                  }
                                },
                                "numPermissionsGiven": {
                                  "type": "number",
                                  "example": 1
                                },
                                "numPermissionsUsed": {
                                  "type": "number",
                                  "example": 0
                                },
                                "numPermissionsUnused": {
                                  "type": "number",
                                  "example": 10471
                                },
                                "effectivePermissionsCount": {
                                  "type": "number",
                                  "example": 10471
                                },
                                "lastActiveDate": {
                                  "type": "string",
                                  "example": "2022-01-24T07:30:16Z"
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {
                                    "risk": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "No MFA"
                                      }
                                    },
                                    "profiling": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "Learning"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/users/unused?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/users/unused?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/users/unused',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    provider: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    actorName: 'SOME_STRING_VALUE',\n    actorID: 'SOME_STRING_VALUE',\n    limit: 'SOME_STRING_VALUE',\n    cursor: 'SOME_STRING_VALUE',\n    riskLabels: 'SOME_STRING_VALUE',\n    profilingLabels: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/users/unused?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/users/unused?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/users/policyInfo": {
        "get": {
          "summary": "Get the policy information.",
          "description": "Fetches the policy information for a given user.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "actorName",
              "in": "query",
              "description": "Filter by actor name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "actorID",
              "in": "query",
              "description": "Filter by actor id",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "customerID": {
                          "type": "number",
                          "example": 1
                        },
                        "accountID": {
                          "type": "string",
                          "example": 411112345678
                        },
                        "provider": {
                          "type": "string",
                          "example": "aws"
                        },
                        "actorName": {
                          "type": "string",
                          "example": "sysdig-integration"
                        },
                        "actorID": {
                          "type": "string",
                          "example": "arn:aws:iam::411112345678:user/sysdig-integration"
                        },
                        "actorKind": {
                          "type": "string",
                          "example": "user"
                        },
                        "policyName": {
                          "type": "string",
                          "example": "AdministratorAccess"
                        },
                        "policyID": {
                          "type": "string",
                          "example": "arn:aws:iam::aws:policy/AdministratorAccess"
                        },
                        "permissionsCount": {
                          "type": "number",
                          "example": 10471
                        },
                        "effectivePermissionsCount": {
                          "type": "number",
                          "example": 10471
                        },
                        "permissionsUnusedFromPolicy": {
                          "type": "number",
                          "example": 10471
                        },
                        "permissionsUnusedByUser": {
                          "type": "number",
                          "example": 10471
                        },
                        "resourceWildCard": {
                          "type": "boolean",
                          "example": false
                        },
                        "actionWildCard": {
                          "type": "boolean",
                          "example": false
                        },
                        "permissionBoundary": {
                          "type": "boolean",
                          "example": false
                        },
                        "policyType": {
                          "type": "string",
                          "example": "AWS"
                        },
                        "resource": {
                          "type": "string",
                          "example": "rohit.sriram"
                        },
                        "resourceType": {
                          "type": "string",
                          "example": "User"
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/users/policyInfo?account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/users/policyInfo?account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/users/policyInfo',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    actorName: 'SOME_STRING_VALUE',\n    actorID: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/users/policyInfo?account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/users/policyInfo?account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/users/policySuggestion": {
        "get": {
          "summary": "Get a policy suggestion by user.",
          "description": "Fetches the policy suggestion. Policy is based only on the action of the user.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "provider",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "account",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "actorName",
              "in": "query",
              "description": "Filter by actor name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "actorID",
              "in": "query",
              "description": "Filter by actor id",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "format",
              "in": "query",
              "description": "Specify the format. By default json is the format",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "terraform",
                  "json"
                ]
              }
            },
            {
              "name": "includeResource",
              "in": "query",
              "description": "Specify whether to fill out the resource section of the policy suggestion or leave it as '*' ",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  true,
                  false
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "policySuggestion": {
                        "type": "object",
                        "properties": {
                          "Version": {
                            "type": "string",
                            "example": "2012-10-17T00:00:00.000Z"
                          },
                          "Statment": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "Effect": {
                                  "type": "string",
                                  "example": "Allow"
                                },
                                "Action": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "*"
                                  }
                                },
                                "Resource": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "*"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "lastComputedTime": {
                        "type": "string",
                        "example": "2022-01-24T07:30:16Z"
                      },
                      "permissionsFromPolicy": {
                        "type": "number",
                        "example": 10471
                      },
                      "permissionsFromPolicySuggestion": {
                        "type": "number",
                        "example": 10471
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/users/policySuggestion?provider=SOME_STRING_VALUE&account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&format=SOME_STRING_VALUE&includeResource=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/users/policySuggestion?provider=SOME_STRING_VALUE&account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&format=SOME_STRING_VALUE&includeResource=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/users/policySuggestion',\n  qs: {\n    provider: 'SOME_STRING_VALUE',\n    account: 'SOME_NUMBER_VALUE',\n    actorName: 'SOME_STRING_VALUE',\n    actorID: 'SOME_STRING_VALUE',\n    format: 'SOME_STRING_VALUE',\n    includeResource: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/users/policySuggestion?provider=SOME_STRING_VALUE&account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&format=SOME_STRING_VALUE&includeResource=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/users/policySuggestion?provider=SOME_STRING_VALUE&account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&actorID=SOME_STRING_VALUE&format=SOME_STRING_VALUE&includeResource=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/policies": {
        "get": {
          "summary": "Get the list of policies.",
          "description": "Fetches the list of policies based on Excessive Permissions.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "policyID",
              "in": "query",
              "description": "Filter by policy id",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "resourceWildcard",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "actionWildcard",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Limit the amount of results to be fetched",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "Cursor is used for API pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "riskLabels",
              "in": "query",
              "description": "Filter by risk labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "No MFA",
                  "Admin",
                  "Root User",
                  "Inactive",
                  "Multiple Access Keys Active",
                  "Access Key 1 Not Rotated",
                  "Access Key 2 Not Rotated",
                  "Public",
                  "Default SSE Not Enabled"
                ]
              }
            },
            {
              "name": "profilingLabels",
              "in": "query",
              "description": "Filter by profiling labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Learning"
                ]
              }
            },
            {
              "name": "policyType",
              "in": "query",
              "description": "Filter by type of policy",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "AWS",
                  "Customer",
                  "Inline"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "object",
                            "properties": {
                              "limit": {
                                "type": "number",
                                "example": 100
                              },
                              "next": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Policies paginated response.",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ID": {
                                  "type": "string",
                                  "example": "b5d949b9-a4bc-43fb-a518-93d8affed428"
                                },
                                "customerID": {
                                  "type": "number",
                                  "example": 1
                                },
                                "accountID": {
                                  "type": "string",
                                  "example": 411112345678
                                },
                                "provider": {
                                  "type": "string",
                                  "example": "aws"
                                },
                                "policyName": {
                                  "type": "string",
                                  "example": "AdministratorAccess"
                                },
                                "policyID": {
                                  "type": "string",
                                  "example": "arn:aws:iam::aws:policy/AdministratorAccess"
                                },
                                "policyDoc": {
                                  "type": "string"
                                },
                                "actors": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "arn:aws:iam::411112345678:role/administrator",
                                      "arn:aws:iam::411112345678:role/testqa"
                                    ]
                                  }
                                },
                                "numPermissionsGiven": {
                                  "type": "number",
                                  "example": 1
                                },
                                "numPermissionsUnused": {
                                  "type": "number",
                                  "example": 10471
                                },
                                "resourceWildCard": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "actionWildCard": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {
                                    "risk": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "No MFA"
                                      }
                                    },
                                    "profiling": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "Learning"
                                      }
                                    }
                                  }
                                },
                                "policyType": {
                                  "type": "string",
                                  "example": "AWS"
                                },
                                "resource": {
                                  "type": "string",
                                  "example": "rohit.sriram"
                                },
                                "resourceType": {
                                  "type": "string",
                                  "example": "User"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/policies?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&policyID=SOME_STRING_VALUE&resourceWildcard=SOME_BOOLEAN_VALUE&actionWildcard=SOME_BOOLEAN_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE&policyType=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/policies?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&policyID=SOME_STRING_VALUE&resourceWildcard=SOME_BOOLEAN_VALUE&actionWildcard=SOME_BOOLEAN_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE&policyType=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/policies',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    provider: 'SOME_STRING_VALUE',\n    policyID: 'SOME_STRING_VALUE',\n    resourceWildcard: 'SOME_BOOLEAN_VALUE',\n    actionWildcard: 'SOME_BOOLEAN_VALUE',\n    limit: 'SOME_STRING_VALUE',\n    cursor: 'SOME_STRING_VALUE',\n    riskLabels: 'SOME_STRING_VALUE',\n    profilingLabels: 'SOME_STRING_VALUE',\n    policyType: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/policies?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&policyID=SOME_STRING_VALUE&resourceWildcard=SOME_BOOLEAN_VALUE&actionWildcard=SOME_BOOLEAN_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE&policyType=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/policies?account=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&policyID=SOME_STRING_VALUE&resourceWildcard=SOME_BOOLEAN_VALUE&actionWildcard=SOME_BOOLEAN_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE&policyType=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/policies/policyDoc": {
        "get": {
          "summary": "Get the policy document.",
          "description": "Fetches a single policy document.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "policyID",
              "in": "query",
              "description": "Filter by actor name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Version": {
                        "type": "string",
                        "example": "2012-10-17T00:00:00.000Z"
                      },
                      "Statment": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "Effect": {
                              "type": "string",
                              "example": "Allow"
                            },
                            "Action": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "*"
                              }
                            },
                            "Resource": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "*"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/policies/policyDoc?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/policies/policyDoc?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/policies/policyDoc',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    policyID: 'SOME_STRING_VALUE',\n    provider: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/policies/policyDoc?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/policies/policyDoc?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/policies/users": {
        "get": {
          "summary": "Get the policy users.",
          "description": "Fetches the list of users for a given policy.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "policyID",
              "in": "query",
              "description": "Filter by actor name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "kind",
              "in": "query",
              "description": "Filter by kind",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "user",
                  "role"
                ]
              }
            },
            {
              "name": "policyType",
              "in": "query",
              "description": "Filter by type of policy",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "AWS",
                  "Customer",
                  "Inline"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "customerID": {
                        "type": "number",
                        "example": 1
                      },
                      "accountID": {
                        "type": "string",
                        "example": 411112345678
                      },
                      "provider": {
                        "type": "string",
                        "example": "aws"
                      },
                      "actorName": {
                        "type": "string",
                        "example": "sysdig-integration"
                      },
                      "actorID": {
                        "type": "string",
                        "example": "arn:aws:iam::411112345678:user/sysdig-integration"
                      },
                      "actorKind": {
                        "type": "string",
                        "example": "user"
                      },
                      "policyName": {
                        "type": "string",
                        "example": "AdministratorAccess"
                      },
                      "policyID": {
                        "type": "string",
                        "example": "arn:aws:iam::aws:policy/AdministratorAccess"
                      },
                      "permissionsCount": {
                        "type": "number",
                        "example": 10471
                      },
                      "effectivePermissionsCount": {
                        "type": "number",
                        "example": 10471
                      },
                      "permissionsUnusedFromPolicy": {
                        "type": "number",
                        "example": 10471
                      },
                      "permissionsUnusedByUser": {
                        "type": "number",
                        "example": 10471
                      },
                      "resourceWildCard": {
                        "type": "boolean",
                        "example": false
                      },
                      "actionWildCard": {
                        "type": "boolean",
                        "example": false
                      },
                      "permissionBoundary": {
                        "type": "boolean",
                        "example": false
                      },
                      "policyType": {
                        "type": "string",
                        "example": "AWS"
                      },
                      "resource": {
                        "type": "string",
                        "example": "rohit.sriram"
                      },
                      "resourceType": {
                        "type": "string",
                        "example": "User"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/policies/users?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&policyType=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/policies/users?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&policyType=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/policies/users',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    policyID: 'SOME_STRING_VALUE',\n    provider: 'SOME_STRING_VALUE',\n    kind: 'SOME_STRING_VALUE',\n    policyType: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/policies/users?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&policyType=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/policies/users?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&kind=SOME_STRING_VALUE&policyType=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/policies/policySuggestion": {
        "get": {
          "summary": "Get the policy suggestion by policy.",
          "description": "Fetches the policy suggestion. Policy is based only on the action of the user.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "policyID",
              "in": "query",
              "description": "Filter by actor name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "format",
              "in": "query",
              "description": "Specify the format. By default json is the format",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "terraform",
                  "json"
                ]
              }
            },
            {
              "name": "includeResource",
              "in": "query",
              "description": "Specify whether to fill out the resource section of the policy suggestion or leave it as '*' ",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  true,
                  false
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "customerID": {
                        "type": "number",
                        "example": 1
                      },
                      "accountID": {
                        "type": "string",
                        "example": 411112345678
                      },
                      "provider": {
                        "type": "string",
                        "example": "aws"
                      },
                      "actorName": {
                        "type": "string",
                        "example": "sysdig-integration"
                      },
                      "actorID": {
                        "type": "string",
                        "example": "arn:aws:iam::411112345678:user/sysdig-integration"
                      },
                      "actorKind": {
                        "type": "string",
                        "example": "user"
                      },
                      "policyName": {
                        "type": "string",
                        "example": "AdministratorAccess"
                      },
                      "policyID": {
                        "type": "string",
                        "example": "arn:aws:iam::aws:policy/AdministratorAccess"
                      },
                      "permissionsCount": {
                        "type": "number",
                        "example": 10471
                      },
                      "effectivePermissionsCount": {
                        "type": "number",
                        "example": 10471
                      },
                      "permissionsUnusedFromPolicy": {
                        "type": "number",
                        "example": 10471
                      },
                      "permissionsUnusedByUser": {
                        "type": "number",
                        "example": 10471
                      },
                      "resourceWildCard": {
                        "type": "boolean",
                        "example": false
                      },
                      "actionWildCard": {
                        "type": "boolean",
                        "example": false
                      },
                      "permissionBoundary": {
                        "type": "boolean",
                        "example": false
                      },
                      "policyType": {
                        "type": "string",
                        "example": "AWS"
                      },
                      "resource": {
                        "type": "string",
                        "example": "rohit.sriram"
                      },
                      "resourceType": {
                        "type": "string",
                        "example": "User"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/policies/policySuggestion?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&format=SOME_STRING_VALUE&includeResource=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/policies/policySuggestion?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&format=SOME_STRING_VALUE&includeResource=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/policies/policySuggestion',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    policyID: 'SOME_STRING_VALUE',\n    provider: 'SOME_STRING_VALUE',\n    format: 'SOME_STRING_VALUE',\n    includeResource: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/policies/policySuggestion?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&format=SOME_STRING_VALUE&includeResource=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/policies/policySuggestion?account=SOME_NUMBER_VALUE&policyID=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&format=SOME_STRING_VALUE&includeResource=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/aws/policies/scp": {
        "get": {
          "summary": "Get the list of AWS SCP.",
          "description": "Fetches the list of policies based on Excessive Permissions.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "description": "Limit the amount of results to be fetched",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "Cursor is used for API pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "object",
                            "properties": {
                              "limit": {
                                "type": "number",
                                "example": 100
                              },
                              "next": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "SCP paginated response.",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "customerID": {
                                  "type": "number",
                                  "example": 1
                                },
                                "accountID": {
                                  "type": "string",
                                  "example": 411112345678
                                },
                                "provider": {
                                  "type": "string",
                                  "example": "aws"
                                },
                                "policyID": {
                                  "type": "string",
                                  "example": "arn:aws:iam::aws:policy/AdministratorAccess"
                                },
                                "policyName": {
                                  "type": "string",
                                  "example": "AdministratorAccess"
                                },
                                "policyDoc": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/aws/policies/scp?limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/aws/policies/scp?limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/aws/policies/scp',\n  qs: {limit: 'SOME_STRING_VALUE', cursor: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/aws/policies/scp?limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/aws/policies/scp?limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/resources/aws/s3": {
        "get": {
          "summary": "Get the list of AWS S3 Buckets.",
          "description": "Fetches the list of AWS S3 Buckets.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "bucketName",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "public",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "defaultSSE",
              "in": "query",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Limit the amount of results to be fetched",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "Cursor is used for API pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "riskLabels",
              "in": "query",
              "description": "Filter by risk labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "No MFA",
                  "Admin",
                  "Root User",
                  "Inactive",
                  "Multiple Access Keys Active",
                  "Access Key 1 Not Rotated",
                  "Access Key 2 Not Rotated",
                  "Public",
                  "Default SSE Not Enabled"
                ]
              }
            },
            {
              "name": "profilingLabels",
              "in": "query",
              "description": "Filter by profiling labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Learning"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "object",
                            "properties": {
                              "limit": {
                                "type": "number",
                                "example": 100
                              },
                              "next": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "S3 paginated response.",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "customerID": {
                                  "type": "number",
                                  "example": 1
                                },
                                "accountID": {
                                  "type": "string",
                                  "example": 411112345678
                                },
                                "provider": {
                                  "type": "string",
                                  "example": "aws"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "s3-logging-us-east-1-411112345678"
                                },
                                "region": {
                                  "type": "string",
                                  "example": "us-east-1"
                                },
                                "isPublic": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "defaultSSE": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "permissionCategory": {
                                  "type": "string"
                                },
                                "acls": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "Everyone:WRITE",
                                      "Everyone:READ_ACP"
                                    ]
                                  }
                                },
                                "labels": {
                                  "type": "object",
                                  "properties": {
                                    "risk": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "No MFA"
                                      }
                                    },
                                    "profiling": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "example": "Learning"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/resources/aws/s3?account=SOME_NUMBER_VALUE&bucketName=SOME_STRING_VALUE&public=SOME_BOOLEAN_VALUE&defaultSSE=SOME_BOOLEAN_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/resources/aws/s3?account=SOME_NUMBER_VALUE&bucketName=SOME_STRING_VALUE&public=SOME_BOOLEAN_VALUE&defaultSSE=SOME_BOOLEAN_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/resources/aws/s3',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    bucketName: 'SOME_STRING_VALUE',\n    public: 'SOME_BOOLEAN_VALUE',\n    defaultSSE: 'SOME_BOOLEAN_VALUE',\n    limit: 'SOME_STRING_VALUE',\n    cursor: 'SOME_STRING_VALUE',\n    riskLabels: 'SOME_STRING_VALUE',\n    profilingLabels: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/resources/aws/s3?account=SOME_NUMBER_VALUE&bucketName=SOME_STRING_VALUE&public=SOME_BOOLEAN_VALUE&defaultSSE=SOME_BOOLEAN_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/resources/aws/s3?account=SOME_NUMBER_VALUE&bucketName=SOME_STRING_VALUE&public=SOME_BOOLEAN_VALUE&defaultSSE=SOME_BOOLEAN_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/resources/aws/lambda": {
        "get": {
          "summary": "Get the list of AWS Lambdas.",
          "description": "Fetches the list of AWS Lambda Functions.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "lambdaID",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Limit the amount of results to be fetched",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "Cursor is used for API pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "object",
                            "properties": {
                              "limit": {
                                "type": "number",
                                "example": 100
                              },
                              "next": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Lambda paginated response.",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "customerID": {
                                  "type": "number",
                                  "example": 1
                                },
                                "provider": {
                                  "type": "string",
                                  "example": "aws"
                                },
                                "accountID": {
                                  "type": "string",
                                  "example": 411112345678
                                },
                                "functionName": {
                                  "type": "string",
                                  "example": "createCloudAccount"
                                },
                                "functionARN": {
                                  "type": "string",
                                  "example": "arn:aws:lambda:us-east-1:411112345678:function:createCloudAccount"
                                },
                                "executionRoleName": {
                                  "type": "string",
                                  "example": "createCloudAccount-role-8nbzzpgn"
                                },
                                "executionRoleARN": {
                                  "type": "string",
                                  "example": "arn:aws:iam::411112345678:role/service-role/createCloudAccount-role-8nbzzpgn"
                                },
                                "resources": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": [
                                      "principals:\"sns.amazonaws.com\" conditions:\"arn=arn:aws:sns:us-east-1:411112345678:cis-alarms\""
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/resources/aws/lambda?account=SOME_NUMBER_VALUE&lambdaID=SOME_NUMBER_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/resources/aws/lambda?account=SOME_NUMBER_VALUE&lambdaID=SOME_NUMBER_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/resources/aws/lambda',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    lambdaID: 'SOME_NUMBER_VALUE',\n    limit: 'SOME_STRING_VALUE',\n    cursor: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/resources/aws/lambda?account=SOME_NUMBER_VALUE&lambdaID=SOME_NUMBER_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/resources/aws/lambda?account=SOME_NUMBER_VALUE&lambdaID=SOME_NUMBER_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/resources/aws/credentialReport": {
        "get": {
          "summary": "Get the AWS Credential Report.",
          "description": "Fetches the AWS Credential Report.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "actorName",
              "in": "query",
              "description": "Filter by actor name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Limit the amount of results to be fetched",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "cursor",
              "in": "query",
              "description": "Cursor is used for API pagination",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "options": {
                            "type": "object",
                            "properties": {
                              "limit": {
                                "type": "number",
                                "example": 100
                              },
                              "next": {
                                "type": "string",
                                "example": ""
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "description": "Credential Report paginated response.",
                        "properties": {
                          "data": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "actorName": {
                                  "type": "string",
                                  "example": "test_user"
                                },
                                "actorID": {
                                  "type": "string",
                                  "example": "arn:aws:iam::411112345678:user/test_user"
                                },
                                "userCreationTime": {
                                  "type": "string",
                                  "example": "2021-12-17T18:16:36.000Z"
                                },
                                "passwordEnabled": {
                                  "type": "string",
                                  "example": true
                                },
                                "passwordLastChanged": {
                                  "type": "string",
                                  "example": "2021-12-17T18:16:37.000Z"
                                },
                                "passwordNextRotation": {
                                  "type": "string",
                                  "example": "N/A"
                                },
                                "mfaActive": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "accessKey1Active": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "accessKey2Active": {
                                  "type": "boolean",
                                  "example": false
                                },
                                "accessKey1LastRotated": {
                                  "type": "string",
                                  "example": "2021-06-09T10:39:58.000Z"
                                },
                                "accessKey2LastRotated": {
                                  "type": "string",
                                  "example": "2021-07-09T10:39:58.000Z"
                                },
                                "cert1LastRotated": {
                                  "type": "string",
                                  "example": "N/A"
                                },
                                "cert2LastRotated": {
                                  "type": "string",
                                  "example": "N/A"
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/resources/aws/credentialReport?account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/resources/aws/credentialReport?account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/resources/aws/credentialReport',\n  qs: {\n    account: 'SOME_NUMBER_VALUE',\n    actorName: 'SOME_STRING_VALUE',\n    limit: 'SOME_STRING_VALUE',\n    cursor: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/resources/aws/credentialReport?account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/resources/aws/credentialReport?account=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE&limit=SOME_STRING_VALUE&cursor=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/reports/users/csv": {
        "get": {
          "summary": "Get the Users CSV Report.",
          "description": "Fetches the Users Report in CSV format.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "kind",
              "in": "query",
              "description": "Filter by kind",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "user",
                  "role"
                ]
              }
            },
            {
              "name": "accountId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "actorName",
              "in": "query",
              "description": "Filter by actor name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "riskLabels",
              "in": "query",
              "description": "Filter by risk labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "No MFA",
                  "Admin",
                  "Root User",
                  "Inactive",
                  "Multiple Access Keys Active",
                  "Access Key 1 Not Rotated",
                  "Access Key 2 Not Rotated",
                  "Public",
                  "Default SSE Not Enabled"
                ]
              }
            },
            {
              "name": "profilingLabels",
              "in": "query",
              "description": "Filter by profiling labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Learning"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "string",
                    "example": "Customer ID,Account ID,Provider,User Name,User ID,Number of Permissions Given,Number of Permissions Unused,Number of Permissions Used,Last Active Date,Policies,Groups 1,411571310278,aws,rohit_test,arn:aws:iam::411571310278:user/rohit_test,11,11,0,2020-12-24 17:19:14.081992 +0000 UTC,'arn:aws:iam::aws:policy/IAMUserChangePassword,arn:aws:iam::411571310278:policy/test_deny_permissions_policy',"
                  }
                }
              },
              "headers": {
                "Content-Type": {
                  "description": "CSV Content header.",
                  "schema": {
                    "type": "string",
                    "example": "text/csv"
                  }
                },
                "Content-Disposition": {
                  "schema": {
                    "type": "string",
                    "example": "attachment;filename=2022128-ciem-users-report.csv"
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/reports/users/csv?kind=SOME_STRING_VALUE&accountId=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/reports/users/csv?kind=SOME_STRING_VALUE&accountId=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/reports/users/csv',\n  qs: {\n    kind: 'SOME_STRING_VALUE',\n    accountId: 'SOME_NUMBER_VALUE',\n    provider: 'SOME_STRING_VALUE',\n    actorName: 'SOME_STRING_VALUE',\n    riskLabels: 'SOME_STRING_VALUE',\n    profilingLabels: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/reports/users/csv?kind=SOME_STRING_VALUE&accountId=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/reports/users/csv?kind=SOME_STRING_VALUE&accountId=SOME_NUMBER_VALUE&provider=SOME_STRING_VALUE&actorName=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/reports/policies/csv": {
        "get": {
          "summary": "Get the Policies CSV Report.",
          "description": "Fetches the Policies Report in CSV format.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "accountId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "policyId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "provider",
              "in": "query",
              "description": "Filter by provider",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "aws",
                  "gcp",
                  "azure"
                ]
              }
            },
            {
              "name": "riskLabels",
              "in": "query",
              "description": "Filter by risk labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "No MFA",
                  "Admin",
                  "Root User",
                  "Inactive",
                  "Multiple Access Keys Active",
                  "Access Key 1 Not Rotated",
                  "Access Key 2 Not Rotated",
                  "Public",
                  "Default SSE Not Enabled"
                ]
              }
            },
            {
              "name": "profilingLabels",
              "in": "query",
              "description": "Filter by profiling labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Learning"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "string",
                    "example": "Customer ID,Account ID,Provider,Policy Name,Policy ID,Users,Number of Permissions Given,Number of Permissions Unused 1,411571310278,aws,,arn:aws:iam::aws:policy/AWSCloudFormationFullAccess,'arn:aws:iam::411571310278:user/afuentes,arn:aws:iam::411571310278:user/noah.kraemer@sysdig.com,arn:aws:iam::411571310278:user/sysdig-integration',58,58,"
                  }
                }
              },
              "headers": {
                "Content-Type": {
                  "description": "CSV Content header.",
                  "schema": {
                    "type": "string",
                    "example": "text/csv"
                  }
                },
                "Content-Disposition": {
                  "schema": {
                    "type": "string",
                    "example": "attachment;filename=2022119-ciem-policies-report.csv"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/reports/policies/csv?accountId=SOME_NUMBER_VALUE&policyId=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/reports/policies/csv?accountId=SOME_NUMBER_VALUE&policyId=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/reports/policies/csv',\n  qs: {\n    accountId: 'SOME_NUMBER_VALUE',\n    policyId: 'SOME_STRING_VALUE',\n    provider: 'SOME_STRING_VALUE',\n    riskLabels: 'SOME_STRING_VALUE',\n    profilingLabels: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/reports/policies/csv?accountId=SOME_NUMBER_VALUE&policyId=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/reports/policies/csv?accountId=SOME_NUMBER_VALUE&policyId=SOME_STRING_VALUE&provider=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/reports/resources/aws/s3/csv": {
        "get": {
          "summary": "Get the AWS S3 CSV Report.",
          "description": "Fetches the AWS S3 Report in CSV format.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "accountId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "bucketName",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "public",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "defaultSSE",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "riskLabels",
              "in": "query",
              "description": "Filter by risk labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "No MFA",
                  "Admin",
                  "Root User",
                  "Inactive",
                  "Multiple Access Keys Active",
                  "Access Key 1 Not Rotated",
                  "Access Key 2 Not Rotated",
                  "Public",
                  "Default SSE Not Enabled"
                ]
              }
            },
            {
              "name": "profilingLabels",
              "in": "query",
              "description": "Filter by profiling labels",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "Learning"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "string",
                    "example": "Customer ID,Account ID,Provider,Name,Region,Public,Default SSE,Permission Category,Acls 1,411571310278,aws,aws-cloudtrail-logs-411571310278-3e46dfc6,us-east-1,Disabled,Disabled,,opsadmin+sysdig-qa1:FULL_CONTROL 1,411571310278"
                  }
                }
              },
              "headers": {
                "Content-Type": {
                  "description": "CSV Content header.",
                  "schema": {
                    "type": "string",
                    "example": "text/csv"
                  }
                },
                "Content-Disposition": {
                  "schema": {
                    "type": "string",
                    "example": "attachment;filename=2022119-ciem-s3-report.csv"
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/s3/csv?accountId=SOME_NUMBER_VALUE&bucketName=SOME_STRING_VALUE&public=SOME_STRING_VALUE&defaultSSE=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/s3/csv?accountId=SOME_NUMBER_VALUE&bucketName=SOME_STRING_VALUE&public=SOME_STRING_VALUE&defaultSSE=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/s3/csv',\n  qs: {\n    accountId: 'SOME_NUMBER_VALUE',\n    bucketName: 'SOME_STRING_VALUE',\n    public: 'SOME_STRING_VALUE',\n    defaultSSE: 'SOME_STRING_VALUE',\n    riskLabels: 'SOME_STRING_VALUE',\n    profilingLabels: 'SOME_STRING_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/s3/csv?accountId=SOME_NUMBER_VALUE&bucketName=SOME_STRING_VALUE&public=SOME_STRING_VALUE&defaultSSE=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/reports/resources/aws/s3/csv?accountId=SOME_NUMBER_VALUE&bucketName=SOME_STRING_VALUE&public=SOME_STRING_VALUE&defaultSSE=SOME_STRING_VALUE&riskLabels=SOME_STRING_VALUE&profilingLabels=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/reports/resources/aws/lambda/csv": {
        "get": {
          "summary": "Get the AWS Lamda CSV Report.",
          "description": "Fetches the AWS Lamda Report in CSV format.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "accountId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "lambdaId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "string",
                    "example": "Customer ID,Account ID,Provider,Function Name,Function ARN,Execution Role Name,Execution Role ARN,Resources 1,411571310278,aws,sns_to_slack,arn:aws:lambda:us-east-1:411571310278:function:sns_to_slack,lambda-us-east-1-sns_to_slack-role,arn:aws:iam::411571310278:role/lambda-us-east-1-sns_to_slack-role,"
                  }
                }
              },
              "headers": {
                "Content-Type": {
                  "description": "CSV Content header.",
                  "schema": {
                    "type": "string",
                    "example": "text/csv"
                  }
                },
                "Content-Disposition": {
                  "schema": {
                    "type": "string",
                    "example": "attachment;filename=2022120-ciem-lambdas-report.csv"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/lambda/csv?accountId=SOME_NUMBER_VALUE&lambdaId=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/lambda/csv?accountId=SOME_NUMBER_VALUE&lambdaId=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/lambda/csv',\n  qs: {accountId: 'SOME_NUMBER_VALUE', lambdaId: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/lambda/csv?accountId=SOME_NUMBER_VALUE&lambdaId=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/reports/resources/aws/lambda/csv?accountId=SOME_NUMBER_VALUE&lambdaId=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/reports/resources/aws/credentialReport/csv": {
        "get": {
          "summary": "Get the AWS Credential Report in CSV.",
          "description": "Fetches the AWS Credential Report in CSV format.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "accountId",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "actorName",
              "in": "query",
              "description": "Filter by actor name",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "text/csv": {
                  "schema": {
                    "type": "string",
                    "example": "User Nme,User ID,User Creation Time,Password Status,Password Last Changed,Password Last Used,Password Next Rotation,MFA Active,Access Key 1 Active,Access Key 1 Last Rotated,Access Key 1 Last Used Date,Access Key 1 Last Used Service,Access Key 2 Active,Access Key 2 Last Rotated,Access Key 2 Last Used Date,Access Key 2 Last Used Service,Cert 1 Active,Cert 1 Last Rotated,Cert 2 Active,Cert 2 Last Rotated haresh.suresh@sysdig.com,arn:aws:iam::411571310278:user/haresh.suresh@sysdig.com,2022-01-14 00:22:24 +0000 UTC,Enabled,2022-01-14T00:26:35+00:00,2022-01-20T18:10:50+00:00,N/A,Disabled,Enabled,2022-01-14T00:22:28+00:00,2022-01-20T05:45:00+00:00,sts,Disabled,2022-01-19T20:19:54+00:00,2022-01-20T05:45:00+00:00,sts,Disabled,N/A,Disabled,N/A alex.qiu@sysdig.com,arn:aws:iam::411571310278:user/alex.qiu@sysdig.com,2021-12-17 18:16:36 +0000 UTC,Enabled,2021-12-17T18:16:37+00:00,N/A,N/A,Disabled,Enabled,2021-12-17T18:16:37+00:00,N/A,N/A,Disabled,N/A,N/A,N/A,Disabled,N/A,Disabled,N/A,"
                  }
                }
              },
              "headers": {
                "Content-Type": {
                  "description": "CSV Content header.",
                  "schema": {
                    "type": "string",
                    "example": "text/csv"
                  }
                },
                "Content-Disposition": {
                  "schema": {
                    "type": "string",
                    "example": "attachment;filename=2022127-ciem-credentials-report.csv"
                  }
                }
              }
            },
            "401": {
              "description": "Invalid or missing auth token."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/credentialReport/csv?accountId=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/credentialReport/csv?accountId=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/credentialReport/csv',\n  qs: {accountId: 'SOME_NUMBER_VALUE', actorName: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/reports/resources/aws/credentialReport/csv?accountId=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/reports/resources/aws/credentialReport/csv?accountId=SOME_NUMBER_VALUE&actorName=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/labels": {
        "get": {
          "summary": "List the supported labels.",
          "description": "Lists all of the supported labels.",
          "tags": [
            "Cloud"
          ],
          "parameters": [
            {
              "name": "resource",
              "in": "query",
              "description": "Filter by resource: user, role, s3, lambda, learning",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "risk": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "weight": {
                              "type": "integer"
                            }
                          },
                          "example": {
                            "name": "No MFA",
                            "weight": 6
                          }
                        }
                      },
                      "profiling": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "weight": {
                              "type": "integer"
                            }
                          },
                          "example": {
                            "name": "Learning",
                            "weight": 0
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/labels?resource=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/cloud/v2/labels?resource=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/cloud/v2/labels',\n  qs: {resource: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/labels?resource=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/labels?resource=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/riskCategory": {
        "get": {
          "summary": "List the risk category thresholds.",
          "description": "Lists all of the risk category thresholds.",
          "tags": [
            "Cloud"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "Critical": {
                        "type": "number",
                        "example": 90
                      },
                      "High": {
                        "type": "number",
                        "example": 70
                      },
                      "Low": {
                        "type": "number",
                        "example": 0
                      },
                      "Medium": {
                        "type": "number",
                        "example": 40
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/riskCategory\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/cloud/v2/riskCategory"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/cloud/v2/riskCategory'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/riskCategory\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/riskCategory\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/cloud/v2/riskLabelScores": {
        "get": {
          "summary": "List the risk label scores.",
          "description": "Lists all of the risk label scores.",
          "tags": [
            "Cloud"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "AccessKeyNotRotated": {
                        "type": "number",
                        "example": 2
                      },
                      "Admin": {
                        "type": "number",
                        "example": 5
                      },
                      "Inactive": {
                        "type": "number",
                        "example": 4
                      },
                      "MultipleAccessKeyActive": {
                        "type": "number",
                        "example": 2
                      },
                      "NoMFA": {
                        "type": "number",
                        "example": 3
                      },
                      "RootUser": {
                        "type": "number",
                        "example": 6
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/cloud/v2/riskLabelScores\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/cloud/v2/riskLabelScores"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/cloud/v2/riskLabelScores'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/cloud/v2/riskLabelScores\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/cloud/v2/riskLabelScores\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/status": {
        "get": {
          "summary": "Check the onboarding status",
          "description": "Checks if this is the first user ever in the account to login/ if it is this user's first login.",
          "tags": [
            "Onboarding v2"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "primaryEnvConnnected": {
                        "type": "boolean",
                        "example": true,
                        "description": "If any user of the customer has connected a primary environment"
                      },
                      "onboardingCompleted": {
                        "type": "boolean",
                        "example": "If the user has finished the onboarding process"
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/status'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/environments": {
        "get": {
          "summary": "Get the list of available environments.",
          "description": "Gets the list of available environments that customers can connect.",
          "tags": [
            "Onboarding v2"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "primary": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "secondary": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "displayName": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/environments\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/environments"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/environments'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/environments\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/environments\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/environments/selection": {
        "get": {
          "summary": "Get the selected environments.",
          "description": "Gets the list of selected environments that the customer wishes to connect.",
          "tags": [
            "Onboarding v2"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "primaryEnvironment": {
                        "type": "string"
                      },
                      "additionalEnvironments": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "AWS",
                            "GCP",
                            "Azure",
                            "Kubernetes",
                            "Linux",
                            "Docker"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/environments/selection\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/environments/selection"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/environments/selection'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/environments/selection\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/environments/selection\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Register the selected environment.",
          "description": "Registers the selected environment that the customer wishes to connect.",
          "tags": [
            "Onboarding v2"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "environment": {
                      "type": "string",
                      "enum": [
                        "AWS",
                        "GCP",
                        "Azure",
                        "Kubernetes",
                        "Linux",
                        "Docker"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Environment has been successfully selected"
            },
            "400": {
              "description": "The given request is invalid."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/environments/selection\"\n\n\tpayload := strings.NewReader(\"{\\\"environment\\\":\\\"AWS\\\"}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/environments/selection \\\n  --header 'content-type: application/json' \\\n  --data '{\"environment\":\"AWS\"}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/environments/selection',\n  headers: {'content-type': 'application/json'},\n  body: {environment: 'AWS'},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/secure/onboarding/v2/environments/selection\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"environment\\\":\\\"AWS\\\"}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"environment\\\":\\\"AWS\\\"}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/secure/onboarding/v2/environments/selection\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/installActions/{installType}": {
        "get": {
          "summary": "Get the install action.",
          "description": "Gets the appropriate install action for the specified installation type.",
          "tags": [
            "Onboarding v2"
          ],
          "parameters": [
            {
              "name": "installType",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "AWS",
                  "GCP",
                  "Azure",
                  "Kubernetes",
                  "Linux",
                  "Docker",
                  "AdmissionController"
                ]
              }
            },
            {
              "name": "accountType",
              "in": "query",
              "required": false,
              "description": "Cloud provider account type. Only applies to AWS, GCP, or Azure.",
              "schema": {
                "type": "string",
                "default": "single",
                "enum": [
                  "single",
                  "org",
                  "multi"
                ]
              }
            },
            {
              "name": "installOption",
              "in": "query",
              "required": false,
              "description": "Install option for agent. Only applies to Kubernetes, Linux, or Docker.",
              "schema": {
                "type": "string",
                "default": "helm",
                "enum": [
                  "helm",
                  "values"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "installAction": {
                        "type": "string"
                      },
                      "tokens": {
                        "type": "object",
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "option": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "INPUT",
                              "TAG"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/installActions/%7BinstallType%7D?accountType=SOME_STRING_VALUE&installOption=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/secure/onboarding/v2/installActions/%7BinstallType%7D?accountType=SOME_STRING_VALUE&installOption=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/installActions/%7BinstallType%7D',\n  qs: {accountType: 'SOME_STRING_VALUE', installOption: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/installActions/%7BinstallType%7D?accountType=SOME_STRING_VALUE&installOption=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/installActions/%7BinstallType%7D?accountType=SOME_STRING_VALUE&installOption=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/installActions/{installType}/values": {
        "get": {
          "summary": "Get values.yaml content",
          "description": "Gets the values.yaml content to install the agent on Kubernetes",
          "tags": [
            "Onboarding v2"
          ],
          "parameters": [
            {
              "name": "installType",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "Kubernetes"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "The string literal to copy and paste into a values.yaml file"
            },
            "400": {
              "description": "The given request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/installActions/%7BinstallType%7D/values\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/installActions/%7BinstallType%7D/values"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/installActions/%7BinstallType%7D/values'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/installActions/%7BinstallType%7D/values\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/installActions/%7BinstallType%7D/values\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/frameworks": {
        "get": {
          "summary": "Get all compliance frameworks.",
          "description": "Gets all compliance frameworks across all supported environments.",
          "tags": [
            "Onboarding v2"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "framework": {
                          "type": "string",
                          "description": "Represents a grouping of standards",
                          "example": "kube_bench"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Represents the readable name of a framework",
                          "example": "CIS Kubernetes Benchmark"
                        },
                        "isDefaultSelected": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/frameworks\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/frameworks"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/frameworks'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/frameworks\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/frameworks\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/frameworks/{environment}": {
        "get": {
          "summary": "Get the list of compliance frameworks.",
          "description": "Gets the compliance frameworks for the specified environment.",
          "tags": [
            "Onboarding v2"
          ],
          "parameters": [
            {
              "name": "environment",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "AWS",
                  "GCP",
                  "Azure",
                  "Kubernetes",
                  "Linux",
                  "Docker"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "industryBestPractice": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "framework": {
                              "type": "string",
                              "description": "Represents a grouping of standards",
                              "example": "kube_bench"
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Represents the readable name of a framework",
                              "example": "CIS Kubernetes Benchmark"
                            },
                            "isDefaultSelected": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      },
                      "commonComplianceFrameworks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "framework": {
                              "type": "string",
                              "description": "Represents a grouping of standards",
                              "example": "kube_bench"
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Represents the readable name of a framework",
                              "example": "CIS Kubernetes Benchmark"
                            },
                            "isDefaultSelected": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      },
                      "requiredFrameworks": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "framework": {
                              "type": "string",
                              "description": "Represents a grouping of standards",
                              "example": "kube_bench"
                            },
                            "displayName": {
                              "type": "string",
                              "description": "Represents the readable name of a framework",
                              "example": "CIS Kubernetes Benchmark"
                            },
                            "isDefaultSelected": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/frameworks/%7Benvironment%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/frameworks/%7Benvironment%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/frameworks/%7Benvironment%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/frameworks/%7Benvironment%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/frameworks/%7Benvironment%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Create compliance tasks",
          "description": "Creates the set of compliance tasks for the specified environment.",
          "tags": [
            "Onboarding v2"
          ],
          "parameters": [
            {
              "name": "environment",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "framework": {
                        "type": "string",
                        "description": "Represents a grouping of standards",
                        "example": "kube_bench"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Represents the readable name of a framework",
                        "example": "CIS Kubernetes Benchmark"
                      },
                      "isDefaultSelected": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/frameworks/%7Benvironment%7D\"\n\n\tpayload := strings.NewReader(\"[{\\\"framework\\\":\\\"kube_bench\\\",\\\"displayName\\\":\\\"CIS Kubernetes Benchmark\\\",\\\"isDefaultSelected\\\":true}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/frameworks/%7Benvironment%7D \\\n  --header 'content-type: application/json' \\\n  --data '[{\"framework\":\"kube_bench\",\"displayName\":\"CIS Kubernetes Benchmark\",\"isDefaultSelected\":true}]'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/frameworks/%7Benvironment%7D',\n  headers: {'content-type': 'application/json'},\n  body: [\n    {\n      framework: 'kube_bench',\n      displayName: 'CIS Kubernetes Benchmark',\n      isDefaultSelected: true\n    }\n  ],\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/secure/onboarding/v2/frameworks/%7Benvironment%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"[{\\\"framework\\\":\\\"kube_bench\\\",\\\"displayName\\\":\\\"CIS Kubernetes Benchmark\\\",\\\"isDefaultSelected\\\":true}]\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"[{\\\"framework\\\":\\\"kube_bench\\\",\\\"displayName\\\":\\\"CIS Kubernetes Benchmark\\\",\\\"isDefaultSelected\\\":true}]\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/secure/onboarding/v2/frameworks/%7Benvironment%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/connectionStatus/{environment}": {
        "get": {
          "summary": "Get the connection status",
          "description": "Gets the connection status (cloud account or agent installation) based on the user's primary environment selection.",
          "tags": [
            "Onboarding v2"
          ],
          "parameters": [
            {
              "name": "environment",
              "in": "path",
              "required": true,
              "description": "Environment to check connection status.",
              "schema": {
                "type": "string",
                "default": "single",
                "enum": [
                  "AWS",
                  "GCP",
                  "Azure",
                  "Kubernetes",
                  "Linux",
                  "Docker"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "isConnected": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The given request is invalid."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/connectionStatus/%7Benvironment%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/connectionStatus/%7Benvironment%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/connectionStatus/%7Benvironment%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/connectionStatus/%7Benvironment%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/connectionStatus/%7Benvironment%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/userProfile": {
        "get": {
          "summary": "Get a user profile",
          "description": "Gets a user's profile.",
          "tags": [
            "Onboarding v2"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "integer",
                        "example": 100
                      },
                      "primaryEnvironment": {
                        "type": "string",
                        "example": "AWS"
                      },
                      "complianceFrameworks": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "agentConnected": {
                        "type": "boolean",
                        "example": false
                      },
                      "additionalEnvironments": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "AWS",
                            "GCP",
                            "Azure",
                            "Kubernetes",
                            "Linux",
                            "Docker"
                          ]
                        }
                      },
                      "iacManifestStore": {
                        "type": "string",
                        "enum": [
                          "GitHub",
                          "GitLab",
                          "Bitbucket",
                          "Azure DevOps",
                          "I don't use IAC"
                        ]
                      },
                      "cicdTool": {
                        "type": "string",
                        "enum": [
                          "Jenkins",
                          "Gitlab",
                          "AWS CodePipeline",
                          "Azure Pipeline",
                          "Circle CI",
                          "Tekton Pipelines"
                        ]
                      },
                      "notificationChannels": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "Email",
                            "Slack",
                            "Amazon SNS Topic",
                            "Microsoft Teams",
                            "Pager Duty",
                            "Other"
                          ]
                        }
                      },
                      "scanningOnly": {
                        "type": "boolean",
                        "example": false
                      },
                      "onboardingCompleted": {
                        "type": "boolean",
                        "example": true
                      }
                    }
                  }
                }
              }
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/userProfile\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/userProfile"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/userProfile'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/userProfile\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/userProfile\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/onboarding/v2/userProfile/questionnaire": {
        "get": {
          "summary": "Get the user profile questionnaire",
          "description": "Gets the user profile questionnaire.",
          "tags": [
            "Onboarding v2"
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "envQuestion"
                        },
                        "displayQuestion": {
                          "type": "string",
                          "example": "What environments does your company have?"
                        },
                        "choices": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "displayQuestion": {
                                "type": "string"
                              },
                              "choices": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/userProfile/questionnaire\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/userProfile/questionnaire"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/userProfile/questionnaire'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/onboarding/v2/userProfile/questionnaire\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/onboarding/v2/userProfile/questionnaire\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "post": {
          "summary": "Submit the user profile questionnaire",
          "description": "Submits the user profile questionnaire.",
          "tags": [
            "Onboarding v2"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "displayQuestion": {
                        "type": "string"
                      },
                      "choices": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "The given request is invalid."
            },
            "403": {
              "description": "Account is forbidden (inactive/expired customer)."
            },
            "404": {
              "description": "The cloud info could not be found."
            },
            "500": {
              "description": "The server encountered an unexpected condition."
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/onboarding/v2/userProfile/questionnaire\"\n\n\tpayload := strings.NewReader(\"[{\\\"id\\\":\\\"string\\\",\\\"displayQuestion\\\":\\\"string\\\",\\\"choices\\\":[\\\"string\\\"]}]\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/secure/onboarding/v2/userProfile/questionnaire \\\n  --header 'content-type: application/json' \\\n  --data '[{\"id\":\"string\",\"displayQuestion\":\"string\",\"choices\":[\"string\"]}]'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/secure/onboarding/v2/userProfile/questionnaire',\n  headers: {'content-type': 'application/json'},\n  body: [{id: 'string', displayQuestion: 'string', choices: ['string']}],\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/secure/onboarding/v2/userProfile/questionnaire\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"[{\\\"id\\\":\\\"string\\\",\\\"displayQuestion\\\":\\\"string\\\",\\\"choices\\\":[\\\"string\\\"]}]\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"[{\\\"id\\\":\\\"string\\\",\\\"displayQuestion\\\":\\\"string\\\",\\\"choices\\\":[\\\"string\\\"]}]\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/secure/onboarding/v2/userProfile/questionnaire\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/settings/falco/lists/{listId}": {
        "put": {
          "summary": "Update a default Falco list",
          "description": "Updates a default falco list",
          "tags": [
            "Falco Lists"
          ],
          "parameters": [
            {
              "name": "listId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "items"
                  ],
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "append": {
                      "type": "string",
                      "enum": [
                        true,
                        false
                      ],
                      "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present."
                    }
                  },
                  "example": {
                    "items": [
                      "/bin/bash",
                      "/bin/ksh"
                    ],
                    "append": true
                  }
                },
                "example": {
                  "items": [
                    "/bin/bash",
                    "/bin/ksh"
                  ],
                  "append": true
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The saved falco list",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "items"
                        ],
                        "properties": {
                          "items": {
                            "type": "object",
                            "required": [
                              "items",
                              "components"
                            ],
                            "properties": {
                              "items": {
                                "type": "array",
                                "description": "the array of items as represented in the yaml List",
                                "example": [
                                  "bash",
                                  "\"sh -c node -e \\\"require('nan')\\\"\"",
                                  "monitored_directories"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "the item text or list name",
                                  "example": "monitored_directories"
                                }
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco list\\'s items field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "listText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "Any sort of text that might make sense to put in a list",
                                          "example": "item 1"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The provided falco list is not valid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/lists/%7BlistId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"items\\\":[\\\"/bin/bash\\\",\\\"/bin/ksh\\\"],\\\"append\\\":true}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/settings/falco/lists/%7BlistId%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"items\":[\"/bin/bash\",\"/bin/ksh\"],\"append\":true}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/settings/falco/lists/%7BlistId%7D',\n  headers: {'content-type': 'application/json'},\n  body: {items: ['/bin/bash', '/bin/ksh'], append: true},\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/settings/falco/lists/%7BlistId%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"items\\\":[\\\"/bin/bash\\\",\\\"/bin/ksh\\\"],\\\"append\\\":true}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"items\\\":[\\\"/bin/bash\\\",\\\"/bin/ksh\\\"],\\\"append\\\":true}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/settings/falco/lists/%7BlistId%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/settings/falco/defaultRulesFiles": {
        "get": {
          "summary": "Get the default falco rules files",
          "description": "Get the default falco rules files e.g. the set of falco rules managed by sysdig.\n",
          "tags": [
            "Falco Rules Files"
          ],
          "responses": {
            "200": {
              "description": "The default falco rules files.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "defaultFalcoRulesFiles": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "version",
                              "tag",
                              "files"
                            ],
                            "properties": {
                              "version": {
                                "type": "integer",
                                "description": "Version of the object. Incremented on each update and used for optimistic locking"
                              },
                              "tag": {
                                "type": "string",
                                "description": "An externally provided version identifier (e.g. git tag) that can be used to uniquely identify this set of files.",
                                "example": "v0.1.2"
                              },
                              "files": {
                                "type": "array",
                                "description": "A list of files that comprise the set of rules files",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "variants"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "A name for this file. Should be used in UI to distinguish between files.",
                                      "example": "falco_rules.yaml"
                                    },
                                    "variants": {
                                      "type": "array",
                                      "description": "An array of alternate versions for the given file. An agent should choose the highest version that is compatible with its included falco engine.",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "requiredEngineVersion",
                                          "content"
                                        ],
                                        "properties": {
                                          "required_engine_version": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "The minimum falco engine version that can read this rules file variant."
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "A string containing the yaml contents of a falco rules file variant.",
                                            "example": "- macro: open_write\n  condition: something"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "defaultPolicies": {
                                "type": "array",
                                "description": "A list of reference policies that can be created from the provided falco rules. Used by the /v2/policies/default endpoint.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "A short name for the policy",
                                      "example": "Check filesystem activity"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Description of policy",
                                      "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                                    },
                                    "severity": {
                                      "type": "integer",
                                      "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                                      "example": 4
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "True if the policy should be considered",
                                      "example": true
                                    },
                                    "scope": {
                                      "type": "string",
                                      "description": "Where the policy is being applied- Container, Host etc..",
                                      "example": "container.image.repository = sysdig/agent"
                                    },
                                    "ruleNames": {
                                      "type": "array",
                                      "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": [
                                        "Write below binary dir",
                                        "Write below root",
                                        "Write below monitored dir"
                                      ]
                                    },
                                    "actions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_CAPTURE"
                                                ]
                                              },
                                              "filter": {
                                                "type": "string",
                                                "description": "specifies the subset to match",
                                                "example": "proc.name=cat or proc.name=vi"
                                              },
                                              "isLimitedToContainer": {
                                                "type": "boolean"
                                              },
                                              "beforeEventNs": {
                                                "type": "integer",
                                                "description": "period of time to capture before event in nanoseconds"
                                              },
                                              "afterEventNs": {
                                                "type": "integer",
                                                "description": "period of time to capture after event in nanoseconds"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the file in which the capture will be saved"
                                              },
                                              "storageType": {
                                                "type": "string",
                                                "description": "specifies which strategy will be taken to store the capture",
                                                "enum": [
                                                  "LOCAL",
                                                  "S3",
                                                  "AGENT",
                                                  "PROVIDED",
                                                  "CASSANDRA"
                                                ]
                                              },
                                              "bucketName": {
                                                "type": "string",
                                                "description": "identifies an s3 compliant bucket"
                                              },
                                              "folder": {
                                                "type": "string",
                                                "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                              },
                                              "storageId": {
                                                "type": "integer",
                                                "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_STOP"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being stopped"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_PAUSE"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being paused"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_KILL"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being killed"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                                      "enum": [
                                        "falco",
                                        "list_matching",
                                        "k8s_audit",
                                        "aws_cloudtrail",
                                        "gcp_auditlog",
                                        "azure_platformlogs"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/defaultRulesFiles\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/settings/falco/defaultRulesFiles"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/settings/falco/defaultRulesFiles'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/settings/falco/defaultRulesFiles\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/settings/falco/defaultRulesFiles\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/settings/falco/newestDefaultRulesFiles": {
        "get": {
          "summary": "Get the newest default falco rules files",
          "description": "Get the newest default falco rules files e.g. the set of falco rules managed by sysdig.\n",
          "tags": [
            "Falco Rules Files"
          ],
          "responses": {
            "200": {
              "description": "The newest falco rules files.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "newestDefaultFalcoRulesFiles": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "version",
                              "tag",
                              "files"
                            ],
                            "properties": {
                              "version": {
                                "type": "integer",
                                "description": "Version of the object. Incremented on each update and used for optimistic locking"
                              },
                              "tag": {
                                "type": "string",
                                "description": "An externally provided version identifier (e.g. git tag) that can be used to uniquely identify this set of files.",
                                "example": "v0.1.2"
                              },
                              "files": {
                                "type": "array",
                                "description": "A list of files that comprise the set of rules files",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "requiredEngineVersion",
                                    "content"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "A name for this file. Should be used in UI to distinguish between files.",
                                      "example": "falco_rules.yaml"
                                    },
                                    "required_engine_version": {
                                      "type": "number",
                                      "format": "integer",
                                      "description": "The minimum falco engine version that can read this rules file variant."
                                    },
                                    "content": {
                                      "type": "string",
                                      "description": "A string containing the yaml contents of a falco rules file variant.",
                                      "example": "- macro: open_write\n  condition: something"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/newestDefaultRulesFiles\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/settings/falco/newestDefaultRulesFiles"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/settings/falco/newestDefaultRulesFiles'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/settings/falco/newestDefaultRulesFiles\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/settings/falco/newestDefaultRulesFiles\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/settings/falco/customRulesFiles": {
        "get": {
          "summary": "Get the custom falco rules files",
          "description": "Get the custom falco rules files e.g. the set of falco rules managed by a customer.\n",
          "tags": [
            "Falco Rules Files"
          ],
          "responses": {
            "200": {
              "description": "The custom falco rules files.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "customFalcoRulesFiles": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "version",
                              "tag",
                              "files"
                            ],
                            "properties": {
                              "version": {
                                "type": "integer",
                                "description": "Version of the object. Incremented on each update and used for optimistic locking"
                              },
                              "tag": {
                                "type": "string",
                                "description": "An externally provided version identifier (e.g. git tag) that can be used to uniquely identify this set of files.",
                                "example": "v0.1.2"
                              },
                              "files": {
                                "type": "array",
                                "description": "A list of files that comprise the set of rules files",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "variants"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "A name for this file. Should be used in UI to distinguish between files.",
                                      "example": "falco_rules.yaml"
                                    },
                                    "variants": {
                                      "type": "array",
                                      "description": "An array of alternate versions for the given file. An agent should choose the highest version that is compatible with its included falco engine.",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "requiredEngineVersion",
                                          "content"
                                        ],
                                        "properties": {
                                          "required_engine_version": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "The minimum falco engine version that can read this rules file variant."
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "A string containing the yaml contents of a falco rules file variant.",
                                            "example": "- macro: open_write\n  condition: something"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "defaultPolicies": {
                                "type": "array",
                                "description": "A list of reference policies that can be created from the provided falco rules. Used by the /v2/policies/default endpoint.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "A short name for the policy",
                                      "example": "Check filesystem activity"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Description of policy",
                                      "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                                    },
                                    "severity": {
                                      "type": "integer",
                                      "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                                      "example": 4
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "True if the policy should be considered",
                                      "example": true
                                    },
                                    "scope": {
                                      "type": "string",
                                      "description": "Where the policy is being applied- Container, Host etc..",
                                      "example": "container.image.repository = sysdig/agent"
                                    },
                                    "ruleNames": {
                                      "type": "array",
                                      "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": [
                                        "Write below binary dir",
                                        "Write below root",
                                        "Write below monitored dir"
                                      ]
                                    },
                                    "actions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_CAPTURE"
                                                ]
                                              },
                                              "filter": {
                                                "type": "string",
                                                "description": "specifies the subset to match",
                                                "example": "proc.name=cat or proc.name=vi"
                                              },
                                              "isLimitedToContainer": {
                                                "type": "boolean"
                                              },
                                              "beforeEventNs": {
                                                "type": "integer",
                                                "description": "period of time to capture before event in nanoseconds"
                                              },
                                              "afterEventNs": {
                                                "type": "integer",
                                                "description": "period of time to capture after event in nanoseconds"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the file in which the capture will be saved"
                                              },
                                              "storageType": {
                                                "type": "string",
                                                "description": "specifies which strategy will be taken to store the capture",
                                                "enum": [
                                                  "LOCAL",
                                                  "S3",
                                                  "AGENT",
                                                  "PROVIDED",
                                                  "CASSANDRA"
                                                ]
                                              },
                                              "bucketName": {
                                                "type": "string",
                                                "description": "identifies an s3 compliant bucket"
                                              },
                                              "folder": {
                                                "type": "string",
                                                "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                              },
                                              "storageId": {
                                                "type": "integer",
                                                "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_STOP"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being stopped"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_PAUSE"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being paused"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_KILL"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being killed"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                                      "enum": [
                                        "falco",
                                        "list_matching",
                                        "k8s_audit",
                                        "aws_cloudtrail",
                                        "gcp_auditlog",
                                        "azure_platformlogs"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/customRulesFiles\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/settings/falco/customRulesFiles"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/settings/falco/customRulesFiles'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/settings/falco/customRulesFiles\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/settings/falco/customRulesFiles\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Set the custom rules files e.g. the set of falco rules managed by a customer.",
          "description": "Set the current custom falco rules files. This content is always validated by passing the current default rules files plus the submitted customer rules files and any Secure UI generated rules to the open source falco executable to verify that falco can read the combination of files. The backend should choose the variant that has the greatest required_engine_version for each file, and then run open source falco with the -d option to verify the files. As knowing the current value of the `version` field is required to successfully update the rules file, in order to update the rules content you must first do a GET and update the `content` property. The `version` property in the response will be incremented on success.",
          "tags": [
            "Falco Rules Files"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customFalcoRulesFiles": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "version",
                            "tag",
                            "files"
                          ],
                          "properties": {
                            "version": {
                              "type": "integer",
                              "description": "Version of the object. Incremented on each update and used for optimistic locking"
                            },
                            "tag": {
                              "type": "string",
                              "description": "An externally provided version identifier (e.g. git tag) that can be used to uniquely identify this set of files.",
                              "example": "v0.1.2"
                            },
                            "files": {
                              "type": "array",
                              "description": "A list of files that comprise the set of rules files",
                              "items": {
                                "type": "object",
                                "required": [
                                  "name",
                                  "variants"
                                ],
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "A name for this file. Should be used in UI to distinguish between files.",
                                    "example": "falco_rules.yaml"
                                  },
                                  "variants": {
                                    "type": "array",
                                    "description": "An array of alternate versions for the given file. An agent should choose the highest version that is compatible with its included falco engine.",
                                    "items": {
                                      "type": "object",
                                      "required": [
                                        "requiredEngineVersion",
                                        "content"
                                      ],
                                      "properties": {
                                        "required_engine_version": {
                                          "type": "number",
                                          "format": "integer",
                                          "description": "The minimum falco engine version that can read this rules file variant."
                                        },
                                        "content": {
                                          "type": "string",
                                          "description": "A string containing the yaml contents of a falco rules file variant.",
                                          "example": "- macro: open_write\n  condition: something"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "defaultPolicies": {
                              "type": "array",
                              "description": "A list of reference policies that can be created from the provided falco rules. Used by the /v2/policies/default endpoint.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "A short name for the policy",
                                    "example": "Check filesystem activity"
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "Description of policy",
                                    "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                                  },
                                  "severity": {
                                    "type": "integer",
                                    "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                                    "example": 4
                                  },
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "True if the policy should be considered",
                                    "example": true
                                  },
                                  "scope": {
                                    "type": "string",
                                    "description": "Where the policy is being applied- Container, Host etc..",
                                    "example": "container.image.repository = sysdig/agent"
                                  },
                                  "ruleNames": {
                                    "type": "array",
                                    "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                                    "items": {
                                      "type": "string"
                                    },
                                    "example": [
                                      "Write below binary dir",
                                      "Write below root",
                                      "Write below monitored dir"
                                    ]
                                  },
                                  "actions": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "POLICY_ACTION_CAPTURE"
                                              ]
                                            },
                                            "filter": {
                                              "type": "string",
                                              "description": "specifies the subset to match",
                                              "example": "proc.name=cat or proc.name=vi"
                                            },
                                            "isLimitedToContainer": {
                                              "type": "boolean"
                                            },
                                            "beforeEventNs": {
                                              "type": "integer",
                                              "description": "period of time to capture before event in nanoseconds"
                                            },
                                            "afterEventNs": {
                                              "type": "integer",
                                              "description": "period of time to capture after event in nanoseconds"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "the name of the file in which the capture will be saved"
                                            },
                                            "storageType": {
                                              "type": "string",
                                              "description": "specifies which strategy will be taken to store the capture",
                                              "enum": [
                                                "LOCAL",
                                                "S3",
                                                "AGENT",
                                                "PROVIDED",
                                                "CASSANDRA"
                                              ]
                                            },
                                            "bucketName": {
                                              "type": "string",
                                              "description": "identifies an s3 compliant bucket"
                                            },
                                            "folder": {
                                              "type": "string",
                                              "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                            },
                                            "storageId": {
                                              "type": "integer",
                                              "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "type"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "POLICY_ACTION_STOP"
                                              ]
                                            },
                                            "msg": {
                                              "type": "string",
                                              "description": "a message to send to the thing being stopped"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "type"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "POLICY_ACTION_PAUSE"
                                              ]
                                            },
                                            "msg": {
                                              "type": "string",
                                              "description": "a message to send to the thing being paused"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "type"
                                          ],
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "POLICY_ACTION_KILL"
                                              ]
                                            },
                                            "msg": {
                                              "type": "string",
                                              "description": "a message to send to the thing being killed"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                                    "enum": [
                                      "falco",
                                      "list_matching",
                                      "k8s_audit",
                                      "aws_cloudtrail",
                                      "gcp_auditlog",
                                      "azure_platformlogs"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "The custom falco rules files",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "customFalcoRulesFiles": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "version",
                              "tag",
                              "files"
                            ],
                            "properties": {
                              "version": {
                                "type": "integer",
                                "description": "Version of the object. Incremented on each update and used for optimistic locking"
                              },
                              "tag": {
                                "type": "string",
                                "description": "An externally provided version identifier (e.g. git tag) that can be used to uniquely identify this set of files.",
                                "example": "v0.1.2"
                              },
                              "files": {
                                "type": "array",
                                "description": "A list of files that comprise the set of rules files",
                                "items": {
                                  "type": "object",
                                  "required": [
                                    "name",
                                    "variants"
                                  ],
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "A name for this file. Should be used in UI to distinguish between files.",
                                      "example": "falco_rules.yaml"
                                    },
                                    "variants": {
                                      "type": "array",
                                      "description": "An array of alternate versions for the given file. An agent should choose the highest version that is compatible with its included falco engine.",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "requiredEngineVersion",
                                          "content"
                                        ],
                                        "properties": {
                                          "required_engine_version": {
                                            "type": "number",
                                            "format": "integer",
                                            "description": "The minimum falco engine version that can read this rules file variant."
                                          },
                                          "content": {
                                            "type": "string",
                                            "description": "A string containing the yaml contents of a falco rules file variant.",
                                            "example": "- macro: open_write\n  condition: something"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "defaultPolicies": {
                                "type": "array",
                                "description": "A list of reference policies that can be created from the provided falco rules. Used by the /v2/policies/default endpoint.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "A short name for the policy",
                                      "example": "Check filesystem activity"
                                    },
                                    "description": {
                                      "type": "string",
                                      "description": "Description of policy",
                                      "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                                    },
                                    "severity": {
                                      "type": "integer",
                                      "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                                      "example": 4
                                    },
                                    "enabled": {
                                      "type": "boolean",
                                      "description": "True if the policy should be considered",
                                      "example": true
                                    },
                                    "scope": {
                                      "type": "string",
                                      "description": "Where the policy is being applied- Container, Host etc..",
                                      "example": "container.image.repository = sysdig/agent"
                                    },
                                    "ruleNames": {
                                      "type": "array",
                                      "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                                      "items": {
                                        "type": "string"
                                      },
                                      "example": [
                                        "Write below binary dir",
                                        "Write below root",
                                        "Write below monitored dir"
                                      ]
                                    },
                                    "actions": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_CAPTURE"
                                                ]
                                              },
                                              "filter": {
                                                "type": "string",
                                                "description": "specifies the subset to match",
                                                "example": "proc.name=cat or proc.name=vi"
                                              },
                                              "isLimitedToContainer": {
                                                "type": "boolean"
                                              },
                                              "beforeEventNs": {
                                                "type": "integer",
                                                "description": "period of time to capture before event in nanoseconds"
                                              },
                                              "afterEventNs": {
                                                "type": "integer",
                                                "description": "period of time to capture after event in nanoseconds"
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "the name of the file in which the capture will be saved"
                                              },
                                              "storageType": {
                                                "type": "string",
                                                "description": "specifies which strategy will be taken to store the capture",
                                                "enum": [
                                                  "LOCAL",
                                                  "S3",
                                                  "AGENT",
                                                  "PROVIDED",
                                                  "CASSANDRA"
                                                ]
                                              },
                                              "bucketName": {
                                                "type": "string",
                                                "description": "identifies an s3 compliant bucket"
                                              },
                                              "folder": {
                                                "type": "string",
                                                "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                              },
                                              "storageId": {
                                                "type": "integer",
                                                "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_STOP"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being stopped"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_PAUSE"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being paused"
                                              }
                                            }
                                          },
                                          {
                                            "type": "object",
                                            "required": [
                                              "type"
                                            ],
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "POLICY_ACTION_KILL"
                                                ]
                                              },
                                              "msg": {
                                                "type": "string",
                                                "description": "a message to send to the thing being killed"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                                      "enum": [
                                        "falco",
                                        "list_matching",
                                        "k8s_audit",
                                        "aws_cloudtrail",
                                        "gcp_auditlog",
                                        "azure_platformlogs"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The provided falco rules content was either not falco compliant, causes a rule to be deleted that is still used by a policy, or has non null default policies",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Details on why a falco rules file could not be saved.",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "description": "a list of errors",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "a longer human-readable description of the error",
                              "example": "Error loading rules: [string \"-- Copyright (C) 2016-2018 Draios Inc dba Sys...\"]:357: Unknown rule object: {condition=\"(e\"..."
                            },
                            "reason": {
                              "description": "A short string identifying the error. Reasons may include:\n  * `Invalid YAML syntax`: invalid yaml (this is already used in many places, so no \"ID\")\n  * `FALCO_RULES_INVALID`: valid yaml, but invalid falco rules file\n  * `FALCO_RULES_ERROR`: some errors on the backend side while trying to validate the rules.\nThis list may not be complete.\n",
                              "type": "string",
                              "enum": [
                                "Invalid YAML syntax",
                                "FALCO_RULES_INVALID",
                                "FALCO_RULES_ERROR"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "409": {
              "description": "The user must first perform a GET request to get the current version of the resource. The user must then compare the remote version with the local expected version and merge any updates from remote if needed and then update the local version to match the remote version. More information about 409 can be found at https://httpstatuses.com/409"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/customRulesFiles\"\n\n\tpayload := strings.NewReader(\"{\\\"customFalcoRulesFiles\\\":{\\\"version\\\":0,\\\"tag\\\":\\\"v0.1.2\\\",\\\"files\\\":[{\\\"name\\\":\\\"falco_rules.yaml\\\",\\\"variants\\\":[{\\\"required_engine_version\\\":0,\\\"content\\\":\\\"- macro: open_write\\\\n  condition: something\\\"}]}],\\\"defaultPolicies\\\":[{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\"}]}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/settings/falco/customRulesFiles \\\n  --header 'content-type: application/json' \\\n  --data '{\"customFalcoRulesFiles\":{\"version\":0,\"tag\":\"v0.1.2\",\"files\":[{\"name\":\"falco_rules.yaml\",\"variants\":[{\"required_engine_version\":0,\"content\":\"- macro: open_write\\n  condition: something\"}]}],\"defaultPolicies\":[{\"name\":\"Check filesystem activity\",\"description\":\"Monitor all filesystem operations and look for suspicious or notable behavior\",\"severity\":4,\"enabled\":true,\"scope\":\"container.image.repository = sysdig/agent\",\"ruleNames\":[\"Write below binary dir\",\"Write below root\",\"Write below monitored dir\"],\"actions\":[{\"type\":\"POLICY_ACTION_CAPTURE\",\"filter\":\"proc.name=cat or proc.name=vi\",\"isLimitedToContainer\":true,\"beforeEventNs\":0,\"afterEventNs\":0,\"name\":\"string\",\"storageType\":\"LOCAL\",\"bucketName\":\"string\",\"folder\":\"string\",\"storageId\":0}],\"type\":\"falco\"}]}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/settings/falco/customRulesFiles',\n  headers: {'content-type': 'application/json'},\n  body: {\n    customFalcoRulesFiles: {\n      version: 0,\n      tag: 'v0.1.2',\n      files: [\n        {\n          name: 'falco_rules.yaml',\n          variants: [\n            {\n              required_engine_version: 0,\n              content: '- macro: open_write\\n  condition: something'\n            }\n          ]\n        }\n      ],\n      defaultPolicies: [\n        {\n          name: 'Check filesystem activity',\n          description: 'Monitor all filesystem operations and look for suspicious or notable behavior',\n          severity: 4,\n          enabled: true,\n          scope: 'container.image.repository = sysdig/agent',\n          ruleNames: ['Write below binary dir', 'Write below root', 'Write below monitored dir'],\n          actions: [\n            {\n              type: 'POLICY_ACTION_CAPTURE',\n              filter: 'proc.name=cat or proc.name=vi',\n              isLimitedToContainer: true,\n              beforeEventNs: 0,\n              afterEventNs: 0,\n              name: 'string',\n              storageType: 'LOCAL',\n              bucketName: 'string',\n              folder: 'string',\n              storageId: 0\n            }\n          ],\n          type: 'falco'\n        }\n      ]\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/settings/falco/customRulesFiles\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"customFalcoRulesFiles\\\":{\\\"version\\\":0,\\\"tag\\\":\\\"v0.1.2\\\",\\\"files\\\":[{\\\"name\\\":\\\"falco_rules.yaml\\\",\\\"variants\\\":[{\\\"required_engine_version\\\":0,\\\"content\\\":\\\"- macro: open_write\\\\n  condition: something\\\"}]}],\\\"defaultPolicies\\\":[{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\"}]}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"customFalcoRulesFiles\\\":{\\\"version\\\":0,\\\"tag\\\":\\\"v0.1.2\\\",\\\"files\\\":[{\\\"name\\\":\\\"falco_rules.yaml\\\",\\\"variants\\\":[{\\\"required_engine_version\\\":0,\\\"content\\\":\\\"- macro: open_write\\\\n  condition: something\\\"}]}],\\\"defaultPolicies\\\":[{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\"}]}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/settings/falco/customRulesFiles\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/settings/falco/customRulesFiles/{filename}": {
        "get": {
          "summary": "Get the custom falco rules file matching the filename",
          "description": "Get the custom falco rules file matching the filename",
          "parameters": [
            {
              "name": "filename",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a Falco rules file",
              "example": "falco_rules_local.yaml"
            }
          ],
          "tags": [
            "Falco Rules Files"
          ],
          "responses": {
            "200": {
              "description": "The custom falco rules file",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "filename",
                      "content"
                    ],
                    "properties": {
                      "filename": {
                        "type": "string",
                        "description": "The name of a Falco rules file",
                        "example": "falco_rules_local.yaml"
                      },
                      "content": {
                        "type": "string",
                        "description": "A string containing the yaml contents of a falco rules file variant.",
                        "example": "- macro: open_write\n  condition: something"
                      },
                      "version": {
                        "type": "integer",
                        "description": "Version of the corresponding CustomRulesFiles object to which the specific file belongs"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Resource with the specified ID could not be found. More information about 404 can be found at https://httpstatuses.com/404"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/settings/falco/customRulesFiles/falco_rules_local.yaml\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the custom falco rules file matching the filename",
          "description": "Update the custom falco rules file matching the filename",
          "parameters": [
            {
              "name": "filename",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a Falco rules file",
              "example": "falco_rules_local.yaml"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "filename",
                    "content"
                  ],
                  "properties": {
                    "filename": {
                      "type": "string",
                      "description": "The name of a Falco rules file",
                      "example": "falco_rules_local.yaml"
                    },
                    "content": {
                      "type": "string",
                      "description": "A string containing the yaml contents of a falco rules file variant.",
                      "example": "- macro: open_write\n  condition: something"
                    },
                    "version": {
                      "type": "integer",
                      "description": "Version of the corresponding CustomRulesFiles object to which the specific file belongs"
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Falco Rules Files"
          ],
          "responses": {
            "200": {
              "description": "The custom falco rules file",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "filename",
                      "content"
                    ],
                    "properties": {
                      "filename": {
                        "type": "string",
                        "description": "The name of a Falco rules file",
                        "example": "falco_rules_local.yaml"
                      },
                      "content": {
                        "type": "string",
                        "description": "A string containing the yaml contents of a falco rules file variant.",
                        "example": "- macro: open_write\n  condition: something"
                      },
                      "version": {
                        "type": "integer",
                        "description": "Version of the corresponding CustomRulesFiles object to which the specific file belongs"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "The provided falco rules content was either not falco compliant, causes a rule to be deleted that is still used by a policy, or has non null default policies",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "description": "Details on why a falco rules file could not be saved.",
                    "properties": {
                      "errors": {
                        "type": "array",
                        "description": "a list of errors",
                        "items": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string",
                              "description": "a longer human-readable description of the error",
                              "example": "Error loading rules: [string \"-- Copyright (C) 2016-2018 Draios Inc dba Sys...\"]:357: Unknown rule object: {condition=\"(e\"..."
                            },
                            "reason": {
                              "description": "A short string identifying the error. Reasons may include:\n  * `Invalid YAML syntax`: invalid yaml (this is already used in many places, so no \"ID\")\n  * `FALCO_RULES_INVALID`: valid yaml, but invalid falco rules file\n  * `FALCO_RULES_ERROR`: some errors on the backend side while trying to validate the rules.\nThis list may not be complete.\n",
                              "type": "string",
                              "enum": [
                                "Invalid YAML syntax",
                                "FALCO_RULES_INVALID",
                                "FALCO_RULES_ERROR"
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "409": {
              "description": "The user must first perform a GET request to get the current version of the resource. The user must then compare the remote version with the local expected version and merge any updates from remote if needed and then update the local version to match the remote version. More information about 409 can be found at https://httpstatuses.com/409"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml\"\n\n\tpayload := strings.NewReader(\"{\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"content\\\":\\\"- macro: open_write\\\\n  condition: something\\\",\\\"version\\\":0}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml \\\n  --header 'content-type: application/json' \\\n  --data '{\"filename\":\"falco_rules_local.yaml\",\"content\":\"- macro: open_write\\n  condition: something\",\"version\":0}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml',\n  headers: {'content-type': 'application/json'},\n  body: {\n    filename: 'falco_rules_local.yaml',\n    content: '- macro: open_write\\n  condition: something',\n    version: 0\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"content\\\":\\\"- macro: open_write\\\\n  condition: something\\\",\\\"version\\\":0}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"content\\\":\\\"- macro: open_write\\\\n  condition: something\\\",\\\"version\\\":0}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/settings/falco/customRulesFiles/falco_rules_local.yaml\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete the specified falco rules file",
          "description": "Delete the specified falco rules file",
          "parameters": [
            {
              "name": "filename",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "The name of a Falco rules file",
              "example": "falco_rules_local.yaml"
            }
          ],
          "tags": [
            "Falco Rules Files"
          ],
          "responses": {
            "200": {
              "description": "The deleted policy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "filename",
                      "content"
                    ],
                    "properties": {
                      "filename": {
                        "type": "string",
                        "description": "The name of a Falco rules file",
                        "example": "falco_rules_local.yaml"
                      },
                      "content": {
                        "type": "string",
                        "description": "A string containing the yaml contents of a falco rules file variant.",
                        "example": "- macro: open_write\n  condition: something"
                      },
                      "version": {
                        "type": "integer",
                        "description": "Version of the corresponding CustomRulesFiles object to which the specific file belongs"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Resource with the specified ID could not be found. More information about 404 can be found at https://httpstatuses.com/404"
            },
            "409": {
              "description": "The user must first perform a GET request to get the current version of the resource. The user must then compare the remote version with the local expected version and merge any updates from remote if needed and then update the local version to match the remote version. More information about 409 can be found at https://httpstatuses.com/409"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/settings/falco/customRulesFiles/falco_rules_local.yaml\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/settings/falco/customRulesFiles/falco_rules_local.yaml\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v2/policies": {
        "post": {
          "summary": "Create a new security policy",
          "description": "Save a new security policy.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "A short name for the policy",
                          "example": "Check filesystem activity"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of policy",
                          "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                        },
                        "severity": {
                          "type": "integer",
                          "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                          "example": 4
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "True if the policy should be considered",
                          "example": true
                        },
                        "scope": {
                          "type": "string",
                          "description": "Where the policy is being applied- Container, Host etc..",
                          "example": "container.image.repository = sysdig/agent"
                        },
                        "ruleNames": {
                          "type": "array",
                          "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Write below binary dir",
                            "Write below root",
                            "Write below monitored dir"
                          ]
                        },
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_ACTION_CAPTURE"
                                    ]
                                  },
                                  "filter": {
                                    "type": "string",
                                    "description": "specifies the subset to match",
                                    "example": "proc.name=cat or proc.name=vi"
                                  },
                                  "isLimitedToContainer": {
                                    "type": "boolean"
                                  },
                                  "beforeEventNs": {
                                    "type": "integer",
                                    "description": "period of time to capture before event in nanoseconds"
                                  },
                                  "afterEventNs": {
                                    "type": "integer",
                                    "description": "period of time to capture after event in nanoseconds"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the file in which the capture will be saved"
                                  },
                                  "storageType": {
                                    "type": "string",
                                    "description": "specifies which strategy will be taken to store the capture",
                                    "enum": [
                                      "LOCAL",
                                      "S3",
                                      "AGENT",
                                      "PROVIDED",
                                      "CASSANDRA"
                                    ]
                                  },
                                  "bucketName": {
                                    "type": "string",
                                    "description": "identifies an s3 compliant bucket"
                                  },
                                  "folder": {
                                    "type": "string",
                                    "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                  },
                                  "storageId": {
                                    "type": "integer",
                                    "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_ACTION_STOP"
                                    ]
                                  },
                                  "msg": {
                                    "type": "string",
                                    "description": "a message to send to the thing being stopped"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_ACTION_PAUSE"
                                    ]
                                  },
                                  "msg": {
                                    "type": "string",
                                    "description": "a message to send to the thing being paused"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_ACTION_KILL"
                                    ]
                                  },
                                  "msg": {
                                    "type": "string",
                                    "description": "a message to send to the thing being killed"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                          "enum": [
                            "falco",
                            "list_matching",
                            "k8s_audit",
                            "aws_cloudtrail",
                            "gcp_auditlog",
                            "azure_platformlogs"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Unique identifier representing a specific policy.",
                          "example": 1
                        },
                        "version": {
                          "type": "integer",
                          "description": "Version of the object. Incremented on each update and used for optimistic locking",
                          "example": 18
                        },
                        "templateId": {
                          "type": "integer",
                          "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                          "example": 2
                        },
                        "templateVersion": {
                          "type": "integer",
                          "description": "version of the template this policy was most recently updated from.",
                          "example": 4
                        },
                        "isDefault": {
                          "type": "boolean",
                          "description": "is this a default policy",
                          "example": true
                        },
                        "createdOn": {
                          "type": "integer",
                          "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                          "example": 1553702727177
                        },
                        "modifiedOn": {
                          "type": "integer",
                          "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                          "example": 1553702738288
                        },
                        "origin": {
                          "type": "string",
                          "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                          "enum": [
                            "Secure UI",
                            "Sysdig",
                            "Customer",
                            "Profiling",
                            "K8s Policy Advisor",
                            "Compliance",
                            "Tuner"
                          ],
                          "example": "Secure UI"
                        },
                        "versionId": {
                          "type": "string",
                          "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                          "example": "v1.2.3"
                        },
                        "notificationChannelIds": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "example": [
                              3,
                              5
                            ]
                          }
                        },
                        "profile": {
                          "type": "object",
                          "required": [
                            "profileId",
                            "profileName",
                            "profileVersion",
                            "imageId",
                            "imageName"
                          ],
                          "properties": {
                            "profileId": {
                              "type": "string",
                              "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                            },
                            "profileName": {
                              "type": "string",
                              "description": "Name of the profile, which includes registry/repository:tag@hash."
                            },
                            "profileVersion": {
                              "type": "integer",
                              "description": "Version of the profile, incremented when the model is updated."
                            },
                            "imageId": {
                              "type": "string",
                              "description": "UUID of the image, based on a SHA256 of the image content."
                            },
                            "imageName": {
                              "type": "string",
                              "description": "Name of the image, as registry/repository:tag."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Policies"
          ],
          "responses": {
            "200": {
              "description": "The newly created policy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "A short name for the policy",
                            "example": "Check filesystem activity"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of policy",
                            "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                          },
                          "severity": {
                            "type": "integer",
                            "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                            "example": 4
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "True if the policy should be considered",
                            "example": true
                          },
                          "scope": {
                            "type": "string",
                            "description": "Where the policy is being applied- Container, Host etc..",
                            "example": "container.image.repository = sysdig/agent"
                          },
                          "ruleNames": {
                            "type": "array",
                            "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Write below binary dir",
                              "Write below root",
                              "Write below monitored dir"
                            ]
                          },
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_CAPTURE"
                                      ]
                                    },
                                    "filter": {
                                      "type": "string",
                                      "description": "specifies the subset to match",
                                      "example": "proc.name=cat or proc.name=vi"
                                    },
                                    "isLimitedToContainer": {
                                      "type": "boolean"
                                    },
                                    "beforeEventNs": {
                                      "type": "integer",
                                      "description": "period of time to capture before event in nanoseconds"
                                    },
                                    "afterEventNs": {
                                      "type": "integer",
                                      "description": "period of time to capture after event in nanoseconds"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the name of the file in which the capture will be saved"
                                    },
                                    "storageType": {
                                      "type": "string",
                                      "description": "specifies which strategy will be taken to store the capture",
                                      "enum": [
                                        "LOCAL",
                                        "S3",
                                        "AGENT",
                                        "PROVIDED",
                                        "CASSANDRA"
                                      ]
                                    },
                                    "bucketName": {
                                      "type": "string",
                                      "description": "identifies an s3 compliant bucket"
                                    },
                                    "folder": {
                                      "type": "string",
                                      "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                    },
                                    "storageId": {
                                      "type": "integer",
                                      "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_STOP"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being stopped"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_PAUSE"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being paused"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_KILL"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being killed"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                            "enum": [
                              "falco",
                              "list_matching",
                              "k8s_audit",
                              "aws_cloudtrail",
                              "gcp_auditlog",
                              "azure_platformlogs"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Unique identifier representing a specific policy.",
                            "example": 1
                          },
                          "version": {
                            "type": "integer",
                            "description": "Version of the object. Incremented on each update and used for optimistic locking",
                            "example": 18
                          },
                          "templateId": {
                            "type": "integer",
                            "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                            "example": 2
                          },
                          "templateVersion": {
                            "type": "integer",
                            "description": "version of the template this policy was most recently updated from.",
                            "example": 4
                          },
                          "isDefault": {
                            "type": "boolean",
                            "description": "is this a default policy",
                            "example": true
                          },
                          "createdOn": {
                            "type": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                            "example": 1553702727177
                          },
                          "modifiedOn": {
                            "type": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                            "example": 1553702738288
                          },
                          "origin": {
                            "type": "string",
                            "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                            "enum": [
                              "Secure UI",
                              "Sysdig",
                              "Customer",
                              "Profiling",
                              "K8s Policy Advisor",
                              "Compliance",
                              "Tuner"
                            ],
                            "example": "Secure UI"
                          },
                          "versionId": {
                            "type": "string",
                            "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                            "example": "v1.2.3"
                          },
                          "notificationChannelIds": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "example": [
                                3,
                                5
                              ]
                            }
                          },
                          "profile": {
                            "type": "object",
                            "required": [
                              "profileId",
                              "profileName",
                              "profileVersion",
                              "imageId",
                              "imageName"
                            ],
                            "properties": {
                              "profileId": {
                                "type": "string",
                                "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                              },
                              "profileName": {
                                "type": "string",
                                "description": "Name of the profile, which includes registry/repository:tag@hash."
                              },
                              "profileVersion": {
                                "type": "integer",
                                "description": "Version of the profile, incremented when the model is updated."
                              },
                              "imageId": {
                                "type": "string",
                                "description": "UUID of the image, based on a SHA256 of the image content."
                              },
                              "imageName": {
                                "type": "string",
                                "description": "Name of the image, as registry/repository:tag."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The submitted policy was invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v2/policies\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v2/policies \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Check filesystem activity\",\"description\":\"Monitor all filesystem operations and look for suspicious or notable behavior\",\"severity\":4,\"enabled\":true,\"scope\":\"container.image.repository = sysdig/agent\",\"ruleNames\":[\"Write below binary dir\",\"Write below root\",\"Write below monitored dir\"],\"actions\":[{\"type\":\"POLICY_ACTION_CAPTURE\",\"filter\":\"proc.name=cat or proc.name=vi\",\"isLimitedToContainer\":true,\"beforeEventNs\":0,\"afterEventNs\":0,\"name\":\"string\",\"storageType\":\"LOCAL\",\"bucketName\":\"string\",\"folder\":\"string\",\"storageId\":0}],\"type\":\"falco\",\"id\":1,\"version\":18,\"templateId\":2,\"templateVersion\":4,\"isDefault\":true,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"notificationChannelIds\":[[3,5]],\"profile\":{\"profileId\":\"string\",\"profileName\":\"string\",\"profileVersion\":0,\"imageId\":\"string\",\"imageName\":\"string\"}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v2/policies',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Check filesystem activity',\n    description: 'Monitor all filesystem operations and look for suspicious or notable behavior',\n    severity: 4,\n    enabled: true,\n    scope: 'container.image.repository = sysdig/agent',\n    ruleNames: ['Write below binary dir', 'Write below root', 'Write below monitored dir'],\n    actions: [\n      {\n        type: 'POLICY_ACTION_CAPTURE',\n        filter: 'proc.name=cat or proc.name=vi',\n        isLimitedToContainer: true,\n        beforeEventNs: 0,\n        afterEventNs: 0,\n        name: 'string',\n        storageType: 'LOCAL',\n        bucketName: 'string',\n        folder: 'string',\n        storageId: 0\n      }\n    ],\n    type: 'falco',\n    id: 1,\n    version: 18,\n    templateId: 2,\n    templateVersion: 4,\n    isDefault: true,\n    createdOn: 1553702727177,\n    modifiedOn: 1553702738288,\n    origin: 'Secure UI',\n    versionId: 'v1.2.3',\n    notificationChannelIds: [[3, 5]],\n    profile: {\n      profileId: 'string',\n      profileName: 'string',\n      profileVersion: 0,\n      imageId: 'string',\n      imageName: 'string'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v2/policies\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/v2/policies\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "get": {
          "summary": "Retrieve security policies",
          "description": "Returns information about policies configured by the current customer. Policies can be filtered by priority and scope.",
          "parameters": [
            {
              "name": "offset",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "integer"
              },
              "example": 0
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "number",
                "format": "integer"
              },
              "example": 10
            },
            {
              "name": "filter",
              "in": "query",
              "description": "string to look for in policy names/descriptions",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "Write below"
            },
            {
              "name": "severity",
              "in": "query",
              "description": "finds policies that correspond to a numeric value representing a severity. The query param can be repeated to look for multiple severities",
              "required": false,
              "schema": {
                "type": "number"
              },
              "example": 3
            },
            {
              "name": "policyType",
              "in": "query",
              "description": "finds policies of a certain type",
              "required": false,
              "schema": {
                "type": "string"
              },
              "example": "list_matching"
            },
            {
              "name": "managed",
              "in": "query",
              "description": "finds policies that are managed by sysdig",
              "schema": {
                "type": "boolean"
              },
              "allowEmptyValue": true
            }
          ],
          "tags": [
            "Policies"
          ],
          "responses": {
            "200": {
              "description": "An array of policies",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "A short name for the policy",
                              "example": "Check filesystem activity"
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of policy",
                              "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                            },
                            "severity": {
                              "type": "integer",
                              "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                              "example": 4
                            },
                            "enabled": {
                              "type": "boolean",
                              "description": "True if the policy should be considered",
                              "example": true
                            },
                            "scope": {
                              "type": "string",
                              "description": "Where the policy is being applied- Container, Host etc..",
                              "example": "container.image.repository = sysdig/agent"
                            },
                            "ruleNames": {
                              "type": "array",
                              "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Write below binary dir",
                                "Write below root",
                                "Write below monitored dir"
                              ]
                            },
                            "actions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "POLICY_ACTION_CAPTURE"
                                        ]
                                      },
                                      "filter": {
                                        "type": "string",
                                        "description": "specifies the subset to match",
                                        "example": "proc.name=cat or proc.name=vi"
                                      },
                                      "isLimitedToContainer": {
                                        "type": "boolean"
                                      },
                                      "beforeEventNs": {
                                        "type": "integer",
                                        "description": "period of time to capture before event in nanoseconds"
                                      },
                                      "afterEventNs": {
                                        "type": "integer",
                                        "description": "period of time to capture after event in nanoseconds"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "the name of the file in which the capture will be saved"
                                      },
                                      "storageType": {
                                        "type": "string",
                                        "description": "specifies which strategy will be taken to store the capture",
                                        "enum": [
                                          "LOCAL",
                                          "S3",
                                          "AGENT",
                                          "PROVIDED",
                                          "CASSANDRA"
                                        ]
                                      },
                                      "bucketName": {
                                        "type": "string",
                                        "description": "identifies an s3 compliant bucket"
                                      },
                                      "folder": {
                                        "type": "string",
                                        "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                      },
                                      "storageId": {
                                        "type": "integer",
                                        "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "POLICY_ACTION_STOP"
                                        ]
                                      },
                                      "msg": {
                                        "type": "string",
                                        "description": "a message to send to the thing being stopped"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "POLICY_ACTION_PAUSE"
                                        ]
                                      },
                                      "msg": {
                                        "type": "string",
                                        "description": "a message to send to the thing being paused"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "POLICY_ACTION_KILL"
                                        ]
                                      },
                                      "msg": {
                                        "type": "string",
                                        "description": "a message to send to the thing being killed"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                              "enum": [
                                "falco",
                                "list_matching",
                                "k8s_audit",
                                "aws_cloudtrail",
                                "gcp_auditlog",
                                "azure_platformlogs"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Unique identifier representing a specific policy.",
                              "example": 1
                            },
                            "version": {
                              "type": "integer",
                              "description": "Version of the object. Incremented on each update and used for optimistic locking",
                              "example": 18
                            },
                            "templateId": {
                              "type": "integer",
                              "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                              "example": 2
                            },
                            "templateVersion": {
                              "type": "integer",
                              "description": "version of the template this policy was most recently updated from.",
                              "example": 4
                            },
                            "isDefault": {
                              "type": "boolean",
                              "description": "is this a default policy",
                              "example": true
                            },
                            "createdOn": {
                              "type": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                              "example": 1553702727177
                            },
                            "modifiedOn": {
                              "type": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            },
                            "origin": {
                              "type": "string",
                              "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                              "enum": [
                                "Secure UI",
                                "Sysdig",
                                "Customer",
                                "Profiling",
                                "K8s Policy Advisor",
                                "Compliance",
                                "Tuner"
                              ],
                              "example": "Secure UI"
                            },
                            "versionId": {
                              "type": "string",
                              "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                              "example": "v1.2.3"
                            },
                            "notificationChannelIds": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "example": [
                                  3,
                                  5
                                ]
                              }
                            },
                            "profile": {
                              "type": "object",
                              "required": [
                                "profileId",
                                "profileName",
                                "profileVersion",
                                "imageId",
                                "imageName"
                              ],
                              "properties": {
                                "profileId": {
                                  "type": "string",
                                  "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                                },
                                "profileName": {
                                  "type": "string",
                                  "description": "Name of the profile, which includes registry/repository:tag@hash."
                                },
                                "profileVersion": {
                                  "type": "integer",
                                  "description": "Version of the profile, incremented when the model is updated."
                                },
                                "imageId": {
                                  "type": "string",
                                  "description": "UUID of the image, based on a SHA256 of the image content."
                                },
                                "imageName": {
                                  "type": "string",
                                  "description": "Name of the image, as registry/repository:tag."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v2/policies?offset=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE&severity=SOME_NUMBER_VALUE&policyType=SOME_STRING_VALUE&managed=SOME_BOOLEAN_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/v2/policies?offset=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE&severity=SOME_NUMBER_VALUE&policyType=SOME_STRING_VALUE&managed=SOME_BOOLEAN_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v2/policies',\n  qs: {\n    offset: 'SOME_NUMBER_VALUE',\n    limit: 'SOME_NUMBER_VALUE',\n    filter: 'SOME_STRING_VALUE',\n    severity: 'SOME_NUMBER_VALUE',\n    policyType: 'SOME_STRING_VALUE',\n    managed: 'SOME_BOOLEAN_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v2/policies?offset=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE&severity=SOME_NUMBER_VALUE&policyType=SOME_STRING_VALUE&managed=SOME_BOOLEAN_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v2/policies?offset=SOME_NUMBER_VALUE&limit=SOME_NUMBER_VALUE&filter=SOME_STRING_VALUE&severity=SOME_NUMBER_VALUE&policyType=SOME_STRING_VALUE&managed=SOME_BOOLEAN_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v2/policies/{id}": {
        "get": {
          "summary": "Retrieve the security policy",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Policies"
          ],
          "responses": {
            "200": {
              "description": "The requested policy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "A short name for the policy",
                            "example": "Check filesystem activity"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of policy",
                            "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                          },
                          "severity": {
                            "type": "integer",
                            "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                            "example": 4
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "True if the policy should be considered",
                            "example": true
                          },
                          "scope": {
                            "type": "string",
                            "description": "Where the policy is being applied- Container, Host etc..",
                            "example": "container.image.repository = sysdig/agent"
                          },
                          "ruleNames": {
                            "type": "array",
                            "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Write below binary dir",
                              "Write below root",
                              "Write below monitored dir"
                            ]
                          },
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_CAPTURE"
                                      ]
                                    },
                                    "filter": {
                                      "type": "string",
                                      "description": "specifies the subset to match",
                                      "example": "proc.name=cat or proc.name=vi"
                                    },
                                    "isLimitedToContainer": {
                                      "type": "boolean"
                                    },
                                    "beforeEventNs": {
                                      "type": "integer",
                                      "description": "period of time to capture before event in nanoseconds"
                                    },
                                    "afterEventNs": {
                                      "type": "integer",
                                      "description": "period of time to capture after event in nanoseconds"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the name of the file in which the capture will be saved"
                                    },
                                    "storageType": {
                                      "type": "string",
                                      "description": "specifies which strategy will be taken to store the capture",
                                      "enum": [
                                        "LOCAL",
                                        "S3",
                                        "AGENT",
                                        "PROVIDED",
                                        "CASSANDRA"
                                      ]
                                    },
                                    "bucketName": {
                                      "type": "string",
                                      "description": "identifies an s3 compliant bucket"
                                    },
                                    "folder": {
                                      "type": "string",
                                      "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                    },
                                    "storageId": {
                                      "type": "integer",
                                      "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_STOP"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being stopped"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_PAUSE"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being paused"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_KILL"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being killed"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                            "enum": [
                              "falco",
                              "list_matching",
                              "k8s_audit",
                              "aws_cloudtrail",
                              "gcp_auditlog",
                              "azure_platformlogs"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Unique identifier representing a specific policy.",
                            "example": 1
                          },
                          "version": {
                            "type": "integer",
                            "description": "Version of the object. Incremented on each update and used for optimistic locking",
                            "example": 18
                          },
                          "templateId": {
                            "type": "integer",
                            "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                            "example": 2
                          },
                          "templateVersion": {
                            "type": "integer",
                            "description": "version of the template this policy was most recently updated from.",
                            "example": 4
                          },
                          "isDefault": {
                            "type": "boolean",
                            "description": "is this a default policy",
                            "example": true
                          },
                          "createdOn": {
                            "type": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                            "example": 1553702727177
                          },
                          "modifiedOn": {
                            "type": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                            "example": 1553702738288
                          },
                          "origin": {
                            "type": "string",
                            "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                            "enum": [
                              "Secure UI",
                              "Sysdig",
                              "Customer",
                              "Profiling",
                              "K8s Policy Advisor",
                              "Compliance",
                              "Tuner"
                            ],
                            "example": "Secure UI"
                          },
                          "versionId": {
                            "type": "string",
                            "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                            "example": "v1.2.3"
                          },
                          "notificationChannelIds": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "example": [
                                3,
                                5
                              ]
                            }
                          },
                          "profile": {
                            "type": "object",
                            "required": [
                              "profileId",
                              "profileName",
                              "profileVersion",
                              "imageId",
                              "imageName"
                            ],
                            "properties": {
                              "profileId": {
                                "type": "string",
                                "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                              },
                              "profileName": {
                                "type": "string",
                                "description": "Name of the profile, which includes registry/repository:tag@hash."
                              },
                              "profileVersion": {
                                "type": "integer",
                                "description": "Version of the profile, incremented when the model is updated."
                              },
                              "imageId": {
                                "type": "string",
                                "description": "UUID of the image, based on a SHA256 of the image content."
                              },
                              "imageName": {
                                "type": "string",
                                "description": "Name of the image, as registry/repository:tag."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v2/policies/%7Bid%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v2/policies/%7Bid%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/v2/policies/%7Bid%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v2/policies/%7Bid%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v2/policies/%7Bid%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update the security policy",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "A short name for the policy",
                          "example": "Check filesystem activity"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of policy",
                          "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                        },
                        "severity": {
                          "type": "integer",
                          "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                          "example": 4
                        },
                        "enabled": {
                          "type": "boolean",
                          "description": "True if the policy should be considered",
                          "example": true
                        },
                        "scope": {
                          "type": "string",
                          "description": "Where the policy is being applied- Container, Host etc..",
                          "example": "container.image.repository = sysdig/agent"
                        },
                        "ruleNames": {
                          "type": "array",
                          "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Write below binary dir",
                            "Write below root",
                            "Write below monitored dir"
                          ]
                        },
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_ACTION_CAPTURE"
                                    ]
                                  },
                                  "filter": {
                                    "type": "string",
                                    "description": "specifies the subset to match",
                                    "example": "proc.name=cat or proc.name=vi"
                                  },
                                  "isLimitedToContainer": {
                                    "type": "boolean"
                                  },
                                  "beforeEventNs": {
                                    "type": "integer",
                                    "description": "period of time to capture before event in nanoseconds"
                                  },
                                  "afterEventNs": {
                                    "type": "integer",
                                    "description": "period of time to capture after event in nanoseconds"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "the name of the file in which the capture will be saved"
                                  },
                                  "storageType": {
                                    "type": "string",
                                    "description": "specifies which strategy will be taken to store the capture",
                                    "enum": [
                                      "LOCAL",
                                      "S3",
                                      "AGENT",
                                      "PROVIDED",
                                      "CASSANDRA"
                                    ]
                                  },
                                  "bucketName": {
                                    "type": "string",
                                    "description": "identifies an s3 compliant bucket"
                                  },
                                  "folder": {
                                    "type": "string",
                                    "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                  },
                                  "storageId": {
                                    "type": "integer",
                                    "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_ACTION_STOP"
                                    ]
                                  },
                                  "msg": {
                                    "type": "string",
                                    "description": "a message to send to the thing being stopped"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_ACTION_PAUSE"
                                    ]
                                  },
                                  "msg": {
                                    "type": "string",
                                    "description": "a message to send to the thing being paused"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "type"
                                ],
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "POLICY_ACTION_KILL"
                                    ]
                                  },
                                  "msg": {
                                    "type": "string",
                                    "description": "a message to send to the thing being killed"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                          "enum": [
                            "falco",
                            "list_matching",
                            "k8s_audit",
                            "aws_cloudtrail",
                            "gcp_auditlog",
                            "azure_platformlogs"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "Unique identifier representing a specific policy.",
                          "example": 1
                        },
                        "version": {
                          "type": "integer",
                          "description": "Version of the object. Incremented on each update and used for optimistic locking",
                          "example": 18
                        },
                        "templateId": {
                          "type": "integer",
                          "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                          "example": 2
                        },
                        "templateVersion": {
                          "type": "integer",
                          "description": "version of the template this policy was most recently updated from.",
                          "example": 4
                        },
                        "isDefault": {
                          "type": "boolean",
                          "description": "is this a default policy",
                          "example": true
                        },
                        "createdOn": {
                          "type": "integer",
                          "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                          "example": 1553702727177
                        },
                        "modifiedOn": {
                          "type": "integer",
                          "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                          "example": 1553702738288
                        },
                        "origin": {
                          "type": "string",
                          "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                          "enum": [
                            "Secure UI",
                            "Sysdig",
                            "Customer",
                            "Profiling",
                            "K8s Policy Advisor",
                            "Compliance",
                            "Tuner"
                          ],
                          "example": "Secure UI"
                        },
                        "versionId": {
                          "type": "string",
                          "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                          "example": "v1.2.3"
                        },
                        "notificationChannelIds": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "example": [
                              3,
                              5
                            ]
                          }
                        },
                        "profile": {
                          "type": "object",
                          "required": [
                            "profileId",
                            "profileName",
                            "profileVersion",
                            "imageId",
                            "imageName"
                          ],
                          "properties": {
                            "profileId": {
                              "type": "string",
                              "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                            },
                            "profileName": {
                              "type": "string",
                              "description": "Name of the profile, which includes registry/repository:tag@hash."
                            },
                            "profileVersion": {
                              "type": "integer",
                              "description": "Version of the profile, incremented when the model is updated."
                            },
                            "imageId": {
                              "type": "string",
                              "description": "UUID of the image, based on a SHA256 of the image content."
                            },
                            "imageName": {
                              "type": "string",
                              "description": "Name of the image, as registry/repository:tag."
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Policies"
          ],
          "responses": {
            "200": {
              "description": "The requested policy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "A short name for the policy",
                            "example": "Check filesystem activity"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of policy",
                            "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                          },
                          "severity": {
                            "type": "integer",
                            "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                            "example": 4
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "True if the policy should be considered",
                            "example": true
                          },
                          "scope": {
                            "type": "string",
                            "description": "Where the policy is being applied- Container, Host etc..",
                            "example": "container.image.repository = sysdig/agent"
                          },
                          "ruleNames": {
                            "type": "array",
                            "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Write below binary dir",
                              "Write below root",
                              "Write below monitored dir"
                            ]
                          },
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_CAPTURE"
                                      ]
                                    },
                                    "filter": {
                                      "type": "string",
                                      "description": "specifies the subset to match",
                                      "example": "proc.name=cat or proc.name=vi"
                                    },
                                    "isLimitedToContainer": {
                                      "type": "boolean"
                                    },
                                    "beforeEventNs": {
                                      "type": "integer",
                                      "description": "period of time to capture before event in nanoseconds"
                                    },
                                    "afterEventNs": {
                                      "type": "integer",
                                      "description": "period of time to capture after event in nanoseconds"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the name of the file in which the capture will be saved"
                                    },
                                    "storageType": {
                                      "type": "string",
                                      "description": "specifies which strategy will be taken to store the capture",
                                      "enum": [
                                        "LOCAL",
                                        "S3",
                                        "AGENT",
                                        "PROVIDED",
                                        "CASSANDRA"
                                      ]
                                    },
                                    "bucketName": {
                                      "type": "string",
                                      "description": "identifies an s3 compliant bucket"
                                    },
                                    "folder": {
                                      "type": "string",
                                      "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                    },
                                    "storageId": {
                                      "type": "integer",
                                      "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_STOP"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being stopped"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_PAUSE"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being paused"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_KILL"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being killed"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                            "enum": [
                              "falco",
                              "list_matching",
                              "k8s_audit",
                              "aws_cloudtrail",
                              "gcp_auditlog",
                              "azure_platformlogs"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Unique identifier representing a specific policy.",
                            "example": 1
                          },
                          "version": {
                            "type": "integer",
                            "description": "Version of the object. Incremented on each update and used for optimistic locking",
                            "example": 18
                          },
                          "templateId": {
                            "type": "integer",
                            "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                            "example": 2
                          },
                          "templateVersion": {
                            "type": "integer",
                            "description": "version of the template this policy was most recently updated from.",
                            "example": 4
                          },
                          "isDefault": {
                            "type": "boolean",
                            "description": "is this a default policy",
                            "example": true
                          },
                          "createdOn": {
                            "type": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                            "example": 1553702727177
                          },
                          "modifiedOn": {
                            "type": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                            "example": 1553702738288
                          },
                          "origin": {
                            "type": "string",
                            "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                            "enum": [
                              "Secure UI",
                              "Sysdig",
                              "Customer",
                              "Profiling",
                              "K8s Policy Advisor",
                              "Compliance",
                              "Tuner"
                            ],
                            "example": "Secure UI"
                          },
                          "versionId": {
                            "type": "string",
                            "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                            "example": "v1.2.3"
                          },
                          "notificationChannelIds": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "example": [
                                3,
                                5
                              ]
                            }
                          },
                          "profile": {
                            "type": "object",
                            "required": [
                              "profileId",
                              "profileName",
                              "profileVersion",
                              "imageId",
                              "imageName"
                            ],
                            "properties": {
                              "profileId": {
                                "type": "string",
                                "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                              },
                              "profileName": {
                                "type": "string",
                                "description": "Name of the profile, which includes registry/repository:tag@hash."
                              },
                              "profileVersion": {
                                "type": "integer",
                                "description": "Version of the profile, incremented when the model is updated."
                              },
                              "imageId": {
                                "type": "string",
                                "description": "UUID of the image, based on a SHA256 of the image content."
                              },
                              "imageName": {
                                "type": "string",
                                "description": "Name of the image, as registry/repository:tag."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The updated policy was invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Resource with the specified ID could not be found. More information about 404 can be found at https://httpstatuses.com/404"
            },
            "409": {
              "description": "The user must first perform a GET request to get the current version of the resource. The user must then compare the remote version with the local expected version and merge any updates from remote if needed and then update the local version to match the remote version. More information about 409 can be found at https://httpstatuses.com/409"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v2/policies/%7Bid%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/v2/policies/%7Bid%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"name\":\"Check filesystem activity\",\"description\":\"Monitor all filesystem operations and look for suspicious or notable behavior\",\"severity\":4,\"enabled\":true,\"scope\":\"container.image.repository = sysdig/agent\",\"ruleNames\":[\"Write below binary dir\",\"Write below root\",\"Write below monitored dir\"],\"actions\":[{\"type\":\"POLICY_ACTION_CAPTURE\",\"filter\":\"proc.name=cat or proc.name=vi\",\"isLimitedToContainer\":true,\"beforeEventNs\":0,\"afterEventNs\":0,\"name\":\"string\",\"storageType\":\"LOCAL\",\"bucketName\":\"string\",\"folder\":\"string\",\"storageId\":0}],\"type\":\"falco\",\"id\":1,\"version\":18,\"templateId\":2,\"templateVersion\":4,\"isDefault\":true,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"notificationChannelIds\":[[3,5]],\"profile\":{\"profileId\":\"string\",\"profileName\":\"string\",\"profileVersion\":0,\"imageId\":\"string\",\"imageName\":\"string\"}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/v2/policies/%7Bid%7D',\n  headers: {'content-type': 'application/json'},\n  body: {\n    name: 'Check filesystem activity',\n    description: 'Monitor all filesystem operations and look for suspicious or notable behavior',\n    severity: 4,\n    enabled: true,\n    scope: 'container.image.repository = sysdig/agent',\n    ruleNames: ['Write below binary dir', 'Write below root', 'Write below monitored dir'],\n    actions: [\n      {\n        type: 'POLICY_ACTION_CAPTURE',\n        filter: 'proc.name=cat or proc.name=vi',\n        isLimitedToContainer: true,\n        beforeEventNs: 0,\n        afterEventNs: 0,\n        name: 'string',\n        storageType: 'LOCAL',\n        bucketName: 'string',\n        folder: 'string',\n        storageId: 0\n      }\n    ],\n    type: 'falco',\n    id: 1,\n    version: 18,\n    templateId: 2,\n    templateVersion: 4,\n    isDefault: true,\n    createdOn: 1553702727177,\n    modifiedOn: 1553702738288,\n    origin: 'Secure UI',\n    versionId: 'v1.2.3',\n    notificationChannelIds: [[3, 5]],\n    profile: {\n      profileId: 'string',\n      profileName: 'string',\n      profileVersion: 0,\n      imageId: 'string',\n      imageName: 'string'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/v2/policies/%7Bid%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/v2/policies/%7Bid%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete the security policy.",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "tags": [
            "Policies"
          ],
          "responses": {
            "200": {
              "description": "The deleted policy",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "A short name for the policy",
                            "example": "Check filesystem activity"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of policy",
                            "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                          },
                          "severity": {
                            "type": "integer",
                            "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                            "example": 4
                          },
                          "enabled": {
                            "type": "boolean",
                            "description": "True if the policy should be considered",
                            "example": true
                          },
                          "scope": {
                            "type": "string",
                            "description": "Where the policy is being applied- Container, Host etc..",
                            "example": "container.image.repository = sysdig/agent"
                          },
                          "ruleNames": {
                            "type": "array",
                            "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Write below binary dir",
                              "Write below root",
                              "Write below monitored dir"
                            ]
                          },
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_CAPTURE"
                                      ]
                                    },
                                    "filter": {
                                      "type": "string",
                                      "description": "specifies the subset to match",
                                      "example": "proc.name=cat or proc.name=vi"
                                    },
                                    "isLimitedToContainer": {
                                      "type": "boolean"
                                    },
                                    "beforeEventNs": {
                                      "type": "integer",
                                      "description": "period of time to capture before event in nanoseconds"
                                    },
                                    "afterEventNs": {
                                      "type": "integer",
                                      "description": "period of time to capture after event in nanoseconds"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "the name of the file in which the capture will be saved"
                                    },
                                    "storageType": {
                                      "type": "string",
                                      "description": "specifies which strategy will be taken to store the capture",
                                      "enum": [
                                        "LOCAL",
                                        "S3",
                                        "AGENT",
                                        "PROVIDED",
                                        "CASSANDRA"
                                      ]
                                    },
                                    "bucketName": {
                                      "type": "string",
                                      "description": "identifies an s3 compliant bucket"
                                    },
                                    "folder": {
                                      "type": "string",
                                      "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                    },
                                    "storageId": {
                                      "type": "integer",
                                      "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_STOP"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being stopped"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_PAUSE"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being paused"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "type"
                                  ],
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "POLICY_ACTION_KILL"
                                      ]
                                    },
                                    "msg": {
                                      "type": "string",
                                      "description": "a message to send to the thing being killed"
                                    }
                                  }
                                }
                              ]
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                            "enum": [
                              "falco",
                              "list_matching",
                              "k8s_audit",
                              "aws_cloudtrail",
                              "gcp_auditlog",
                              "azure_platformlogs"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Unique identifier representing a specific policy.",
                            "example": 1
                          },
                          "version": {
                            "type": "integer",
                            "description": "Version of the object. Incremented on each update and used for optimistic locking",
                            "example": 18
                          },
                          "templateId": {
                            "type": "integer",
                            "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                            "example": 2
                          },
                          "templateVersion": {
                            "type": "integer",
                            "description": "version of the template this policy was most recently updated from.",
                            "example": 4
                          },
                          "isDefault": {
                            "type": "boolean",
                            "description": "is this a default policy",
                            "example": true
                          },
                          "createdOn": {
                            "type": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                            "example": 1553702727177
                          },
                          "modifiedOn": {
                            "type": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                            "example": 1553702738288
                          },
                          "origin": {
                            "type": "string",
                            "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                            "enum": [
                              "Secure UI",
                              "Sysdig",
                              "Customer",
                              "Profiling",
                              "K8s Policy Advisor",
                              "Compliance",
                              "Tuner"
                            ],
                            "example": "Secure UI"
                          },
                          "versionId": {
                            "type": "string",
                            "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                            "example": "v1.2.3"
                          },
                          "notificationChannelIds": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "example": [
                                3,
                                5
                              ]
                            }
                          },
                          "profile": {
                            "type": "object",
                            "required": [
                              "profileId",
                              "profileName",
                              "profileVersion",
                              "imageId",
                              "imageName"
                            ],
                            "properties": {
                              "profileId": {
                                "type": "string",
                                "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                              },
                              "profileName": {
                                "type": "string",
                                "description": "Name of the profile, which includes registry/repository:tag@hash."
                              },
                              "profileVersion": {
                                "type": "integer",
                                "description": "Version of the profile, incremented when the model is updated."
                              },
                              "imageId": {
                                "type": "string",
                                "description": "UUID of the image, based on a SHA256 of the image content."
                              },
                              "imageName": {
                                "type": "string",
                                "description": "Name of the image, as registry/repository:tag."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v2/policies/%7Bid%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/v2/policies/%7Bid%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'DELETE', url: 'https://secure.sysdig.com/api/v2/policies/%7Bid%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/v2/policies/%7Bid%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/v2/policies/%7Bid%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v2/policies/batch": {
        "post": {
          "summary": "Create a new security policy and rules in a transaction",
          "description": "Save a new security policy and rules in a transaction. If the policy or any of the rules fail validation, the operation is canceled (no policy or rule is created) and an error response is returned.",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "policy",
                    "rules"
                  ],
                  "properties": {
                    "policy": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "A short name for the policy",
                              "example": "Check filesystem activity"
                            },
                            "description": {
                              "type": "string",
                              "description": "Description of policy",
                              "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                            },
                            "severity": {
                              "type": "integer",
                              "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                              "example": 4
                            },
                            "enabled": {
                              "type": "boolean",
                              "description": "True if the policy should be considered",
                              "example": true
                            },
                            "scope": {
                              "type": "string",
                              "description": "Where the policy is being applied- Container, Host etc..",
                              "example": "container.image.repository = sysdig/agent"
                            },
                            "ruleNames": {
                              "type": "array",
                              "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Write below binary dir",
                                "Write below root",
                                "Write below monitored dir"
                              ]
                            },
                            "actions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "POLICY_ACTION_CAPTURE"
                                        ]
                                      },
                                      "filter": {
                                        "type": "string",
                                        "description": "specifies the subset to match",
                                        "example": "proc.name=cat or proc.name=vi"
                                      },
                                      "isLimitedToContainer": {
                                        "type": "boolean"
                                      },
                                      "beforeEventNs": {
                                        "type": "integer",
                                        "description": "period of time to capture before event in nanoseconds"
                                      },
                                      "afterEventNs": {
                                        "type": "integer",
                                        "description": "period of time to capture after event in nanoseconds"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "the name of the file in which the capture will be saved"
                                      },
                                      "storageType": {
                                        "type": "string",
                                        "description": "specifies which strategy will be taken to store the capture",
                                        "enum": [
                                          "LOCAL",
                                          "S3",
                                          "AGENT",
                                          "PROVIDED",
                                          "CASSANDRA"
                                        ]
                                      },
                                      "bucketName": {
                                        "type": "string",
                                        "description": "identifies an s3 compliant bucket"
                                      },
                                      "folder": {
                                        "type": "string",
                                        "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                      },
                                      "storageId": {
                                        "type": "integer",
                                        "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "POLICY_ACTION_STOP"
                                        ]
                                      },
                                      "msg": {
                                        "type": "string",
                                        "description": "a message to send to the thing being stopped"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "POLICY_ACTION_PAUSE"
                                        ]
                                      },
                                      "msg": {
                                        "type": "string",
                                        "description": "a message to send to the thing being paused"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "type"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "POLICY_ACTION_KILL"
                                        ]
                                      },
                                      "msg": {
                                        "type": "string",
                                        "description": "a message to send to the thing being killed"
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "type": {
                              "type": "string",
                              "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                              "enum": [
                                "falco",
                                "list_matching",
                                "k8s_audit",
                                "aws_cloudtrail",
                                "gcp_auditlog",
                                "azure_platformlogs"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Unique identifier representing a specific policy.",
                              "example": 1
                            },
                            "version": {
                              "type": "integer",
                              "description": "Version of the object. Incremented on each update and used for optimistic locking",
                              "example": 18
                            },
                            "templateId": {
                              "type": "integer",
                              "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                              "example": 2
                            },
                            "templateVersion": {
                              "type": "integer",
                              "description": "version of the template this policy was most recently updated from.",
                              "example": 4
                            },
                            "isDefault": {
                              "type": "boolean",
                              "description": "is this a default policy",
                              "example": true
                            },
                            "createdOn": {
                              "type": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                              "example": 1553702727177
                            },
                            "modifiedOn": {
                              "type": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            },
                            "origin": {
                              "type": "string",
                              "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                              "enum": [
                                "Secure UI",
                                "Sysdig",
                                "Customer",
                                "Profiling",
                                "K8s Policy Advisor",
                                "Compliance",
                                "Tuner"
                              ],
                              "example": "Secure UI"
                            },
                            "versionId": {
                              "type": "string",
                              "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                              "example": "v1.2.3"
                            },
                            "notificationChannelIds": {
                              "type": "array",
                              "items": {
                                "type": "integer",
                                "example": [
                                  3,
                                  5
                                ]
                              }
                            },
                            "profile": {
                              "type": "object",
                              "required": [
                                "profileId",
                                "profileName",
                                "profileVersion",
                                "imageId",
                                "imageName"
                              ],
                              "properties": {
                                "profileId": {
                                  "type": "string",
                                  "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                                },
                                "profileName": {
                                  "type": "string",
                                  "description": "Name of the profile, which includes registry/repository:tag@hash."
                                },
                                "profileVersion": {
                                  "type": "integer",
                                  "description": "Version of the profile, incremented when the model is updated."
                                },
                                "imageId": {
                                  "type": "string",
                                  "description": "UUID of the image, based on a SHA256 of the image content."
                                },
                                "imageName": {
                                  "type": "string",
                                  "description": "Name of the image, as registry/repository:tag."
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "rules": {
                      "type": "array",
                      "description": "Array of rules to create. If no rules need to be created, this will be an empty array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "tags"
                            ],
                            "properties": {
                              "tags": {
                                "type": "array",
                                "description": "The set of tags",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Kubernetes",
                                  "CIS Compliance",
                                  "File Integrity"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "required": [
                              "description",
                              "details"
                            ],
                            "properties": {
                              "description": {
                                "type": "string",
                                "description": "A description of this rule. No newlines/formatting.",
                                "example": "an attempt to write to any file below a set of binary directories"
                              },
                              "details": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "append": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false
                                            ],
                                            "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                            "example": "true"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "condition"
                                        ],
                                        "properties": {
                                          "condition": {
                                            "type": "object",
                                            "required": [
                                              "condition",
                                              "components"
                                            ],
                                            "properties": {
                                              "condition": {
                                                "type": "string",
                                                "description": "the full condition text exactly as represented in the yaml file",
                                                "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                              },
                                              "components": {
                                                "type": "array",
                                                "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                                "items": {
                                                  "type": "object",
                                                  "oneOf": [
                                                    {
                                                      "type": "object",
                                                      "required": [
                                                        "conditionText"
                                                      ],
                                                      "properties": {
                                                        "text": {
                                                          "type": "string",
                                                          "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                          "example": "evt.type in (open, openat) and "
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "required": [
                                                        "falcoMacroReference"
                                                      ],
                                                      "properties": {
                                                        "falcoMacroReference": {
                                                          "type": "string",
                                                          "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                          "example": "bin_dir"
                                                        }
                                                      }
                                                    },
                                                    {
                                                      "type": "object",
                                                      "required": [
                                                        "falcoListReference"
                                                      ],
                                                      "properties": {
                                                        "falcoListReference": {
                                                          "type": "string",
                                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                          "example": "monitored_directories"
                                                        }
                                                      }
                                                    }
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "output",
                                          "priority"
                                        ],
                                        "properties": {
                                          "output": {
                                            "type": "string",
                                            "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                            "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                          },
                                          "priority": {
                                            "type": "string",
                                            "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                            "enum": [
                                              "emergency",
                                              "alert",
                                              "critical",
                                              "error",
                                              "warning",
                                              "notice",
                                              "informational",
                                              "debug"
                                            ],
                                            "example": "error"
                                          },
                                          "source": {
                                            "type": "string",
                                            "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                            "enum": [
                                              "syscall",
                                              "k8s_audit",
                                              "aws_cloudtrail",
                                              "gcp_auditlog",
                                              "azure_platformlogs"
                                            ]
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "processes",
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "processes": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                            "required": [
                                              "items",
                                              "matchItems"
                                            ],
                                            "properties": {
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "description": "the set of paths/syscalls/ports/etc.",
                                                  "example": [
                                                    "/bin",
                                                    "usr/bin"
                                                  ]
                                                }
                                              },
                                              "matchItems": {
                                                "type": "boolean",
                                                "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                "example": true
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "ruleType": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "required": [
                                              "ruleType"
                                            ],
                                            "properties": {
                                              "ruleType": {
                                                "type": "string",
                                                "description": "Indicates the rule type",
                                                "enum": [
                                                  "PROCESS",
                                                  "CONTAINER",
                                                  "FILESYSTEM",
                                                  "NETWORK",
                                                  "SYSCALL",
                                                  "FALCO"
                                                ],
                                                "example": "FALCO"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "readWritePaths",
                                      "readPaths",
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "readWritePaths": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                            "required": [
                                              "items",
                                              "matchItems"
                                            ],
                                            "properties": {
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "description": "the set of paths/syscalls/ports/etc.",
                                                  "example": [
                                                    "/bin",
                                                    "usr/bin"
                                                  ]
                                                }
                                              },
                                              "matchItems": {
                                                "type": "boolean",
                                                "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                "example": true
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "readPaths": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                            "required": [
                                              "items",
                                              "matchItems"
                                            ],
                                            "properties": {
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "description": "the set of paths/syscalls/ports/etc.",
                                                  "example": [
                                                    "/bin",
                                                    "usr/bin"
                                                  ]
                                                }
                                              },
                                              "matchItems": {
                                                "type": "boolean",
                                                "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                "example": true
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "ruleType": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "required": [
                                              "ruleType"
                                            ],
                                            "properties": {
                                              "ruleType": {
                                                "type": "string",
                                                "description": "Indicates the rule type",
                                                "enum": [
                                                  "PROCESS",
                                                  "CONTAINER",
                                                  "FILESYSTEM",
                                                  "NETWORK",
                                                  "SYSCALL",
                                                  "FALCO"
                                                ],
                                                "example": "FALCO"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "syscalls",
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "syscalls": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                            "required": [
                                              "items",
                                              "matchItems"
                                            ],
                                            "properties": {
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "description": "the set of paths/syscalls/ports/etc.",
                                                  "example": [
                                                    "/bin",
                                                    "usr/bin"
                                                  ]
                                                }
                                              },
                                              "matchItems": {
                                                "type": "boolean",
                                                "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                "example": true
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "ruleType": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "required": [
                                              "ruleType"
                                            ],
                                            "properties": {
                                              "ruleType": {
                                                "type": "string",
                                                "description": "Indicates the rule type",
                                                "enum": [
                                                  "PROCESS",
                                                  "CONTAINER",
                                                  "FILESYSTEM",
                                                  "NETWORK",
                                                  "SYSCALL",
                                                  "FALCO"
                                                ],
                                                "example": "FALCO"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "containers",
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "containers": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                            "required": [
                                              "items",
                                              "matchItems"
                                            ],
                                            "properties": {
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "description": "the set of paths/syscalls/ports/etc.",
                                                  "example": [
                                                    "/bin",
                                                    "usr/bin"
                                                  ]
                                                }
                                              },
                                              "matchItems": {
                                                "type": "boolean",
                                                "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                "example": true
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "ruleType": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "required": [
                                              "ruleType"
                                            ],
                                            "properties": {
                                              "ruleType": {
                                                "type": "string",
                                                "description": "Indicates the rule type",
                                                "enum": [
                                                  "PROCESS",
                                                  "CONTAINER",
                                                  "FILESYSTEM",
                                                  "NETWORK",
                                                  "SYSCALL",
                                                  "FALCO"
                                                ],
                                                "example": "FALCO"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "tcpListenPorts",
                                      "udpListenPorts",
                                      "allOutbound",
                                      "allInbound",
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "allOutbound": {
                                        "type": "boolean",
                                        "description": "If true, then all outbound connection attempts match this rule",
                                        "example": true
                                      },
                                      "allInbound": {
                                        "type": "boolean",
                                        "description": "If true, then all inbound connection attempts match this rule",
                                        "example": true
                                      },
                                      "tcpListenPorts": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                            "required": [
                                              "items",
                                              "matchItems"
                                            ],
                                            "properties": {
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "description": "the set of paths/syscalls/ports/etc.",
                                                  "example": [
                                                    "/bin",
                                                    "usr/bin"
                                                  ]
                                                }
                                              },
                                              "matchItems": {
                                                "type": "boolean",
                                                "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                "example": true
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "udpListenPorts": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                            "required": [
                                              "items",
                                              "matchItems"
                                            ],
                                            "properties": {
                                              "items": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "description": "the set of paths/syscalls/ports/etc.",
                                                  "example": [
                                                    "/bin",
                                                    "usr/bin"
                                                  ]
                                                }
                                              },
                                              "matchItems": {
                                                "type": "boolean",
                                                "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                "example": true
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "ruleType": {
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "required": [
                                              "ruleType"
                                            ],
                                            "properties": {
                                              "ruleType": {
                                                "type": "string",
                                                "description": "Indicates the rule type",
                                                "enum": [
                                                  "PROCESS",
                                                  "CONTAINER",
                                                  "FILESYSTEM",
                                                  "NETWORK",
                                                  "SYSCALL",
                                                  "FALCO"
                                                ],
                                                "example": "FALCO"
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Policies"
          ],
          "responses": {
            "200": {
              "description": "The newly created policy and rules",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "policy",
                      "rules"
                    ],
                    "properties": {
                      "policy": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "A short name for the policy",
                                "example": "Check filesystem activity"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of policy",
                                "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                              },
                              "severity": {
                                "type": "integer",
                                "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                                "example": 4
                              },
                              "enabled": {
                                "type": "boolean",
                                "description": "True if the policy should be considered",
                                "example": true
                              },
                              "scope": {
                                "type": "string",
                                "description": "Where the policy is being applied- Container, Host etc..",
                                "example": "container.image.repository = sysdig/agent"
                              },
                              "ruleNames": {
                                "type": "array",
                                "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Write below binary dir",
                                  "Write below root",
                                  "Write below monitored dir"
                                ]
                              },
                              "actions": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "POLICY_ACTION_CAPTURE"
                                          ]
                                        },
                                        "filter": {
                                          "type": "string",
                                          "description": "specifies the subset to match",
                                          "example": "proc.name=cat or proc.name=vi"
                                        },
                                        "isLimitedToContainer": {
                                          "type": "boolean"
                                        },
                                        "beforeEventNs": {
                                          "type": "integer",
                                          "description": "period of time to capture before event in nanoseconds"
                                        },
                                        "afterEventNs": {
                                          "type": "integer",
                                          "description": "period of time to capture after event in nanoseconds"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "the name of the file in which the capture will be saved"
                                        },
                                        "storageType": {
                                          "type": "string",
                                          "description": "specifies which strategy will be taken to store the capture",
                                          "enum": [
                                            "LOCAL",
                                            "S3",
                                            "AGENT",
                                            "PROVIDED",
                                            "CASSANDRA"
                                          ]
                                        },
                                        "bucketName": {
                                          "type": "string",
                                          "description": "identifies an s3 compliant bucket"
                                        },
                                        "folder": {
                                          "type": "string",
                                          "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                        },
                                        "storageId": {
                                          "type": "integer",
                                          "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "POLICY_ACTION_STOP"
                                          ]
                                        },
                                        "msg": {
                                          "type": "string",
                                          "description": "a message to send to the thing being stopped"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "POLICY_ACTION_PAUSE"
                                          ]
                                        },
                                        "msg": {
                                          "type": "string",
                                          "description": "a message to send to the thing being paused"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "type"
                                      ],
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "POLICY_ACTION_KILL"
                                          ]
                                        },
                                        "msg": {
                                          "type": "string",
                                          "description": "a message to send to the thing being killed"
                                        }
                                      }
                                    }
                                  ]
                                }
                              },
                              "type": {
                                "type": "string",
                                "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                                "enum": [
                                  "falco",
                                  "list_matching",
                                  "k8s_audit",
                                  "aws_cloudtrail",
                                  "gcp_auditlog",
                                  "azure_platformlogs"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "Unique identifier representing a specific policy.",
                                "example": 1
                              },
                              "version": {
                                "type": "integer",
                                "description": "Version of the object. Incremented on each update and used for optimistic locking",
                                "example": 18
                              },
                              "templateId": {
                                "type": "integer",
                                "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                                "example": 2
                              },
                              "templateVersion": {
                                "type": "integer",
                                "description": "version of the template this policy was most recently updated from.",
                                "example": 4
                              },
                              "isDefault": {
                                "type": "boolean",
                                "description": "is this a default policy",
                                "example": true
                              },
                              "createdOn": {
                                "type": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "notificationChannelIds": {
                                "type": "array",
                                "items": {
                                  "type": "integer",
                                  "example": [
                                    3,
                                    5
                                  ]
                                }
                              },
                              "profile": {
                                "type": "object",
                                "required": [
                                  "profileId",
                                  "profileName",
                                  "profileVersion",
                                  "imageId",
                                  "imageName"
                                ],
                                "properties": {
                                  "profileId": {
                                    "type": "string",
                                    "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                                  },
                                  "profileName": {
                                    "type": "string",
                                    "description": "Name of the profile, which includes registry/repository:tag@hash."
                                  },
                                  "profileVersion": {
                                    "type": "integer",
                                    "description": "Version of the profile, incremented when the model is updated."
                                  },
                                  "imageId": {
                                    "type": "string",
                                    "description": "UUID of the image, based on a SHA256 of the image content."
                                  },
                                  "imageName": {
                                    "type": "string",
                                    "description": "Name of the image, as registry/repository:tag."
                                  }
                                }
                              }
                            }
                          }
                        ]
                      },
                      "rules": {
                        "type": "array",
                        "description": "Array of newly created rules. If no rules were created, this will be an empty array",
                        "items": {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "origin",
                                "versionId",
                                "filename",
                                "version",
                                "modifiedOn",
                                "createdOn"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "A unique identifier representing a specific rule",
                                  "example": 1
                                },
                                "name": {
                                  "type": "string",
                                  "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                  "example": "Write Below Binary Dir"
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                  "enum": [
                                    "Secure UI",
                                    "Sysdig",
                                    "Customer",
                                    "Profiling",
                                    "K8s Policy Advisor",
                                    "Compliance",
                                    "Tuner"
                                  ],
                                  "example": "Secure UI"
                                },
                                "versionId": {
                                  "type": "string",
                                  "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                  "example": "v1.2.3"
                                },
                                "filename": {
                                  "type": "string",
                                  "description": "The name of a Falco rules file",
                                  "example": "falco_rules_local.yaml"
                                },
                                "version": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "The version is incremented when the update is successful.",
                                  "example": 5
                                },
                                "createdOn": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                  "example": 1553702727177
                                },
                                "modifiedOn": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                  "example": 1553702738288
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "tags"
                              ],
                              "properties": {
                                "tags": {
                                  "type": "array",
                                  "description": "The set of tags",
                                  "items": {
                                    "type": "string"
                                  },
                                  "example": [
                                    "Kubernetes",
                                    "CIS Compliance",
                                    "File Integrity"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "description",
                                "details"
                              ],
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "A description of this rule. No newlines/formatting.",
                                  "example": "an attempt to write to any file below a set of binary directories"
                                },
                                "details": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "append": {
                                              "type": "string",
                                              "enum": [
                                                true,
                                                false
                                              ],
                                              "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                              "example": "true"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "ruleType"
                                          ],
                                          "properties": {
                                            "ruleType": {
                                              "type": "string",
                                              "description": "Indicates the rule type",
                                              "enum": [
                                                "PROCESS",
                                                "CONTAINER",
                                                "FILESYSTEM",
                                                "NETWORK",
                                                "SYSCALL",
                                                "FALCO"
                                              ],
                                              "example": "FALCO"
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "condition"
                                          ],
                                          "properties": {
                                            "condition": {
                                              "type": "object",
                                              "required": [
                                                "condition",
                                                "components"
                                              ],
                                              "properties": {
                                                "condition": {
                                                  "type": "string",
                                                  "description": "the full condition text exactly as represented in the yaml file",
                                                  "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                                },
                                                "components": {
                                                  "type": "array",
                                                  "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                                  "items": {
                                                    "type": "object",
                                                    "oneOf": [
                                                      {
                                                        "type": "object",
                                                        "required": [
                                                          "conditionText"
                                                        ],
                                                        "properties": {
                                                          "text": {
                                                            "type": "string",
                                                            "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                            "example": "evt.type in (open, openat) and "
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "required": [
                                                          "falcoMacroReference"
                                                        ],
                                                        "properties": {
                                                          "falcoMacroReference": {
                                                            "type": "string",
                                                            "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                            "example": "bin_dir"
                                                          }
                                                        }
                                                      },
                                                      {
                                                        "type": "object",
                                                        "required": [
                                                          "falcoListReference"
                                                        ],
                                                        "properties": {
                                                          "falcoListReference": {
                                                            "type": "string",
                                                            "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                            "example": "monitored_directories"
                                                          }
                                                        }
                                                      }
                                                    ]
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        {
                                          "type": "object",
                                          "required": [
                                            "output",
                                            "priority"
                                          ],
                                          "properties": {
                                            "output": {
                                              "type": "string",
                                              "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                              "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                            },
                                            "priority": {
                                              "type": "string",
                                              "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                              "enum": [
                                                "emergency",
                                                "alert",
                                                "critical",
                                                "error",
                                                "warning",
                                                "notice",
                                                "informational",
                                                "debug"
                                              ],
                                              "example": "error"
                                            },
                                            "source": {
                                              "type": "string",
                                              "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                              "enum": [
                                                "syscall",
                                                "k8s_audit",
                                                "aws_cloudtrail",
                                                "gcp_auditlog",
                                                "azure_platformlogs"
                                              ]
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "processes",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "processes": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "readWritePaths",
                                        "readPaths",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "readWritePaths": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "readPaths": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "syscalls",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "syscalls": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "containers",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "containers": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "tcpListenPorts",
                                        "udpListenPorts",
                                        "allOutbound",
                                        "allInbound",
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "allOutbound": {
                                          "type": "boolean",
                                          "description": "If true, then all outbound connection attempts match this rule",
                                          "example": true
                                        },
                                        "allInbound": {
                                          "type": "boolean",
                                          "description": "If true, then all inbound connection attempts match this rule",
                                          "example": true
                                        },
                                        "tcpListenPorts": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "udpListenPorts": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                              "required": [
                                                "items",
                                                "matchItems"
                                              ],
                                              "properties": {
                                                "items": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "the set of paths/syscalls/ports/etc.",
                                                    "example": [
                                                      "/bin",
                                                      "usr/bin"
                                                    ]
                                                  }
                                                },
                                                "matchItems": {
                                                  "type": "boolean",
                                                  "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                                  "example": true
                                                }
                                              }
                                            }
                                          ]
                                        },
                                        "ruleType": {
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "required": [
                                                "ruleType"
                                              ],
                                              "properties": {
                                                "ruleType": {
                                                  "type": "string",
                                                  "description": "Indicates the rule type",
                                                  "enum": [
                                                    "PROCESS",
                                                    "CONTAINER",
                                                    "FILESYSTEM",
                                                    "NETWORK",
                                                    "SYSCALL",
                                                    "FALCO"
                                                  ],
                                                  "example": "FALCO"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "A submitted policy or rule was invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v2/policies/batch\"\n\n\tpayload := strings.NewReader(\"{\\\"policy\\\":{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}},\\\"rules\\\":[{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v2/policies/batch \\\n  --header 'content-type: application/json' \\\n  --data '{\"policy\":{\"name\":\"Check filesystem activity\",\"description\":\"Monitor all filesystem operations and look for suspicious or notable behavior\",\"severity\":4,\"enabled\":true,\"scope\":\"container.image.repository = sysdig/agent\",\"ruleNames\":[\"Write below binary dir\",\"Write below root\",\"Write below monitored dir\"],\"actions\":[{\"type\":\"POLICY_ACTION_CAPTURE\",\"filter\":\"proc.name=cat or proc.name=vi\",\"isLimitedToContainer\":true,\"beforeEventNs\":0,\"afterEventNs\":0,\"name\":\"string\",\"storageType\":\"LOCAL\",\"bucketName\":\"string\",\"folder\":\"string\",\"storageId\":0}],\"type\":\"falco\",\"id\":1,\"version\":18,\"templateId\":2,\"templateVersion\":4,\"isDefault\":true,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"notificationChannelIds\":[[3,5]],\"profile\":{\"profileId\":\"string\",\"profileName\":\"string\",\"profileVersion\":0,\"imageId\":\"string\",\"imageName\":\"string\"}},\"rules\":[{\"id\":1,\"name\":\"Write Below Binary Dir\",\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"filename\":\"falco_rules_local.yaml\",\"version\":5,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"tags\":[\"Kubernetes\",\"CIS Compliance\",\"File Integrity\"],\"description\":\"an attempt to write to any file below a set of binary directories\",\"details\":{\"append\":\"true\",\"ruleType\":\"FALCO\",\"condition\":{\"condition\":\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\",\"components\":[{\"text\":\"evt.type in (open, openat) and \"}]},\"output\":\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\",\"priority\":\"error\",\"source\":\"syscall\"}}]}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v2/policies/batch',\n  headers: {'content-type': 'application/json'},\n  body: {\n    policy: {\n      name: 'Check filesystem activity',\n      description: 'Monitor all filesystem operations and look for suspicious or notable behavior',\n      severity: 4,\n      enabled: true,\n      scope: 'container.image.repository = sysdig/agent',\n      ruleNames: ['Write below binary dir', 'Write below root', 'Write below monitored dir'],\n      actions: [\n        {\n          type: 'POLICY_ACTION_CAPTURE',\n          filter: 'proc.name=cat or proc.name=vi',\n          isLimitedToContainer: true,\n          beforeEventNs: 0,\n          afterEventNs: 0,\n          name: 'string',\n          storageType: 'LOCAL',\n          bucketName: 'string',\n          folder: 'string',\n          storageId: 0\n        }\n      ],\n      type: 'falco',\n      id: 1,\n      version: 18,\n      templateId: 2,\n      templateVersion: 4,\n      isDefault: true,\n      createdOn: 1553702727177,\n      modifiedOn: 1553702738288,\n      origin: 'Secure UI',\n      versionId: 'v1.2.3',\n      notificationChannelIds: [[3, 5]],\n      profile: {\n        profileId: 'string',\n        profileName: 'string',\n        profileVersion: 0,\n        imageId: 'string',\n        imageName: 'string'\n      }\n    },\n    rules: [\n      {\n        id: 1,\n        name: 'Write Below Binary Dir',\n        origin: 'Secure UI',\n        versionId: 'v1.2.3',\n        filename: 'falco_rules_local.yaml',\n        version: 5,\n        createdOn: 1553702727177,\n        modifiedOn: 1553702738288,\n        tags: ['Kubernetes', 'CIS Compliance', 'File Integrity'],\n        description: 'an attempt to write to any file below a set of binary directories',\n        details: {\n          append: 'true',\n          ruleType: 'FALCO',\n          condition: {\n            condition: 'evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)',\n            components: [{text: 'evt.type in (open, openat) and '}]\n          },\n          output: 'File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)',\n          priority: 'error',\n          source: 'syscall'\n        }\n      }\n    ]\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v2/policies/batch\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"policy\\\":{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}},\\\"rules\\\":[{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}]}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"policy\\\":{\\\"name\\\":\\\"Check filesystem activity\\\",\\\"description\\\":\\\"Monitor all filesystem operations and look for suspicious or notable behavior\\\",\\\"severity\\\":4,\\\"enabled\\\":true,\\\"scope\\\":\\\"container.image.repository = sysdig/agent\\\",\\\"ruleNames\\\":[\\\"Write below binary dir\\\",\\\"Write below root\\\",\\\"Write below monitored dir\\\"],\\\"actions\\\":[{\\\"type\\\":\\\"POLICY_ACTION_CAPTURE\\\",\\\"filter\\\":\\\"proc.name=cat or proc.name=vi\\\",\\\"isLimitedToContainer\\\":true,\\\"beforeEventNs\\\":0,\\\"afterEventNs\\\":0,\\\"name\\\":\\\"string\\\",\\\"storageType\\\":\\\"LOCAL\\\",\\\"bucketName\\\":\\\"string\\\",\\\"folder\\\":\\\"string\\\",\\\"storageId\\\":0}],\\\"type\\\":\\\"falco\\\",\\\"id\\\":1,\\\"version\\\":18,\\\"templateId\\\":2,\\\"templateVersion\\\":4,\\\"isDefault\\\":true,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"notificationChannelIds\\\":[[3,5]],\\\"profile\\\":{\\\"profileId\\\":\\\"string\\\",\\\"profileName\\\":\\\"string\\\",\\\"profileVersion\\\":0,\\\"imageId\\\":\\\"string\\\",\\\"imageName\\\":\\\"string\\\"}},\\\"rules\\\":[{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}]}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/v2/policies/batch\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/rules": {
        "post": {
          "summary": "Create a new rule",
          "description": "Save a new rule\n",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "origin",
                        "versionId",
                        "filename",
                        "version",
                        "modifiedOn",
                        "createdOn"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "A unique identifier representing a specific rule",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                          "example": "Write Below Binary Dir"
                        },
                        "origin": {
                          "type": "string",
                          "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                          "enum": [
                            "Secure UI",
                            "Sysdig",
                            "Customer",
                            "Profiling",
                            "K8s Policy Advisor",
                            "Compliance",
                            "Tuner"
                          ],
                          "example": "Secure UI"
                        },
                        "versionId": {
                          "type": "string",
                          "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                          "example": "v1.2.3"
                        },
                        "filename": {
                          "type": "string",
                          "description": "The name of a Falco rules file",
                          "example": "falco_rules_local.yaml"
                        },
                        "version": {
                          "type": "number",
                          "format": "integer",
                          "description": "The version is incremented when the update is successful.",
                          "example": 5
                        },
                        "createdOn": {
                          "type": "number",
                          "format": "integer",
                          "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                          "example": 1553702727177
                        },
                        "modifiedOn": {
                          "type": "number",
                          "format": "integer",
                          "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                          "example": 1553702738288
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "tags"
                      ],
                      "properties": {
                        "tags": {
                          "type": "array",
                          "description": "The set of tags",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Kubernetes",
                            "CIS Compliance",
                            "File Integrity"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "description",
                        "details"
                      ],
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "A description of this rule. No newlines/formatting.",
                          "example": "an attempt to write to any file below a set of binary directories"
                        },
                        "details": {
                          "type": "object",
                          "oneOf": [
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "append": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false
                                      ],
                                      "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                      "example": "true"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "ruleType"
                                  ],
                                  "properties": {
                                    "ruleType": {
                                      "type": "string",
                                      "description": "Indicates the rule type",
                                      "enum": [
                                        "PROCESS",
                                        "CONTAINER",
                                        "FILESYSTEM",
                                        "NETWORK",
                                        "SYSCALL",
                                        "FALCO"
                                      ],
                                      "example": "FALCO"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "condition"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "type": "object",
                                      "required": [
                                        "condition",
                                        "components"
                                      ],
                                      "properties": {
                                        "condition": {
                                          "type": "string",
                                          "description": "the full condition text exactly as represented in the yaml file",
                                          "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                        },
                                        "components": {
                                          "type": "array",
                                          "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                          "items": {
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "required": [
                                                  "conditionText"
                                                ],
                                                "properties": {
                                                  "text": {
                                                    "type": "string",
                                                    "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                    "example": "evt.type in (open, openat) and "
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "falcoMacroReference"
                                                ],
                                                "properties": {
                                                  "falcoMacroReference": {
                                                    "type": "string",
                                                    "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                    "example": "bin_dir"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "falcoListReference"
                                                ],
                                                "properties": {
                                                  "falcoListReference": {
                                                    "type": "string",
                                                    "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                    "example": "monitored_directories"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "output",
                                    "priority"
                                  ],
                                  "properties": {
                                    "output": {
                                      "type": "string",
                                      "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                      "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                    },
                                    "priority": {
                                      "type": "string",
                                      "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                      "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notice",
                                        "informational",
                                        "debug"
                                      ],
                                      "example": "error"
                                    },
                                    "source": {
                                      "type": "string",
                                      "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                      "enum": [
                                        "syscall",
                                        "k8s_audit",
                                        "aws_cloudtrail",
                                        "gcp_auditlog",
                                        "azure_platformlogs"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "required": [
                                "processes",
                                "ruleType"
                              ],
                              "properties": {
                                "processes": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "readWritePaths",
                                "readPaths",
                                "ruleType"
                              ],
                              "properties": {
                                "readWritePaths": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "readPaths": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "syscalls",
                                "ruleType"
                              ],
                              "properties": {
                                "syscalls": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "containers",
                                "ruleType"
                              ],
                              "properties": {
                                "containers": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "tcpListenPorts",
                                "udpListenPorts",
                                "allOutbound",
                                "allInbound",
                                "ruleType"
                              ],
                              "properties": {
                                "allOutbound": {
                                  "type": "boolean",
                                  "description": "If true, then all outbound connection attempts match this rule",
                                  "example": true
                                },
                                "allInbound": {
                                  "type": "boolean",
                                  "description": "If true, then all inbound connection attempts match this rule",
                                  "example": true
                                },
                                "tcpListenPorts": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "udpListenPorts": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Rules"
          ],
          "responses": {
            "200": {
              "description": "The saved rule",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "origin",
                          "versionId",
                          "filename",
                          "version",
                          "modifiedOn",
                          "createdOn"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "A unique identifier representing a specific rule",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                            "example": "Write Below Binary Dir"
                          },
                          "origin": {
                            "type": "string",
                            "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                            "enum": [
                              "Secure UI",
                              "Sysdig",
                              "Customer",
                              "Profiling",
                              "K8s Policy Advisor",
                              "Compliance",
                              "Tuner"
                            ],
                            "example": "Secure UI"
                          },
                          "versionId": {
                            "type": "string",
                            "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                            "example": "v1.2.3"
                          },
                          "filename": {
                            "type": "string",
                            "description": "The name of a Falco rules file",
                            "example": "falco_rules_local.yaml"
                          },
                          "version": {
                            "type": "number",
                            "format": "integer",
                            "description": "The version is incremented when the update is successful.",
                            "example": 5
                          },
                          "createdOn": {
                            "type": "number",
                            "format": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                            "example": 1553702727177
                          },
                          "modifiedOn": {
                            "type": "number",
                            "format": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                            "example": 1553702738288
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "tags"
                        ],
                        "properties": {
                          "tags": {
                            "type": "array",
                            "description": "The set of tags",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Kubernetes",
                              "CIS Compliance",
                              "File Integrity"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "description",
                          "details"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "A description of this rule. No newlines/formatting.",
                            "example": "an attempt to write to any file below a set of binary directories"
                          },
                          "details": {
                            "type": "object",
                            "oneOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "append": {
                                        "type": "string",
                                        "enum": [
                                          true,
                                          false
                                        ],
                                        "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                        "example": "true"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "ruleType": {
                                        "type": "string",
                                        "description": "Indicates the rule type",
                                        "enum": [
                                          "PROCESS",
                                          "CONTAINER",
                                          "FILESYSTEM",
                                          "NETWORK",
                                          "SYSCALL",
                                          "FALCO"
                                        ],
                                        "example": "FALCO"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "condition"
                                    ],
                                    "properties": {
                                      "condition": {
                                        "type": "object",
                                        "required": [
                                          "condition",
                                          "components"
                                        ],
                                        "properties": {
                                          "condition": {
                                            "type": "string",
                                            "description": "the full condition text exactly as represented in the yaml file",
                                            "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                          },
                                          "components": {
                                            "type": "array",
                                            "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                            "items": {
                                              "type": "object",
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "conditionText"
                                                  ],
                                                  "properties": {
                                                    "text": {
                                                      "type": "string",
                                                      "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                      "example": "evt.type in (open, openat) and "
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "falcoMacroReference"
                                                  ],
                                                  "properties": {
                                                    "falcoMacroReference": {
                                                      "type": "string",
                                                      "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                      "example": "bin_dir"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "falcoListReference"
                                                  ],
                                                  "properties": {
                                                    "falcoListReference": {
                                                      "type": "string",
                                                      "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                      "example": "monitored_directories"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "output",
                                      "priority"
                                    ],
                                    "properties": {
                                      "output": {
                                        "type": "string",
                                        "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                        "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                      },
                                      "priority": {
                                        "type": "string",
                                        "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                        "enum": [
                                          "emergency",
                                          "alert",
                                          "critical",
                                          "error",
                                          "warning",
                                          "notice",
                                          "informational",
                                          "debug"
                                        ],
                                        "example": "error"
                                      },
                                      "source": {
                                        "type": "string",
                                        "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                        "enum": [
                                          "syscall",
                                          "k8s_audit",
                                          "aws_cloudtrail",
                                          "gcp_auditlog",
                                          "azure_platformlogs"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "required": [
                                  "processes",
                                  "ruleType"
                                ],
                                "properties": {
                                  "processes": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "readWritePaths",
                                  "readPaths",
                                  "ruleType"
                                ],
                                "properties": {
                                  "readWritePaths": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "readPaths": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "syscalls",
                                  "ruleType"
                                ],
                                "properties": {
                                  "syscalls": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "containers",
                                  "ruleType"
                                ],
                                "properties": {
                                  "containers": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tcpListenPorts",
                                  "udpListenPorts",
                                  "allOutbound",
                                  "allInbound",
                                  "ruleType"
                                ],
                                "properties": {
                                  "allOutbound": {
                                    "type": "boolean",
                                    "description": "If true, then all outbound connection attempts match this rule",
                                    "example": true
                                  },
                                  "allInbound": {
                                    "type": "boolean",
                                    "description": "If true, then all inbound connection attempts match this rule",
                                    "example": true
                                  },
                                  "tcpListenPorts": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "udpListenPorts": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The provided rule is not valid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/rules\"\n\n\tpayload := strings.NewReader(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/secure/rules \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":1,\"name\":\"Write Below Binary Dir\",\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"filename\":\"falco_rules_local.yaml\",\"version\":5,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"tags\":[\"Kubernetes\",\"CIS Compliance\",\"File Integrity\"],\"description\":\"an attempt to write to any file below a set of binary directories\",\"details\":{\"append\":\"true\",\"ruleType\":\"FALCO\",\"condition\":{\"condition\":\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\",\"components\":[{\"text\":\"evt.type in (open, openat) and \"}]},\"output\":\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\",\"priority\":\"error\",\"source\":\"syscall\"}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/secure/rules',\n  headers: {'content-type': 'application/json'},\n  body: {\n    id: 1,\n    name: 'Write Below Binary Dir',\n    origin: 'Secure UI',\n    versionId: 'v1.2.3',\n    filename: 'falco_rules_local.yaml',\n    version: 5,\n    createdOn: 1553702727177,\n    modifiedOn: 1553702738288,\n    tags: ['Kubernetes', 'CIS Compliance', 'File Integrity'],\n    description: 'an attempt to write to any file below a set of binary directories',\n    details: {\n      append: 'true',\n      ruleType: 'FALCO',\n      condition: {\n        condition: 'evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)',\n        components: [{text: 'evt.type in (open, openat) and '}]\n      },\n      output: 'File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)',\n      priority: 'error',\n      source: 'syscall'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/secure/rules\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/secure/rules\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/rules/{ruleId}": {
        "get": {
          "summary": "Retrieve info about a single rule",
          "parameters": [
            {
              "name": "ruleId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Rules"
          ],
          "responses": {
            "200": {
              "description": "The rule with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "origin",
                          "versionId",
                          "filename",
                          "version",
                          "modifiedOn",
                          "createdOn"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "A unique identifier representing a specific rule",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                            "example": "Write Below Binary Dir"
                          },
                          "origin": {
                            "type": "string",
                            "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                            "enum": [
                              "Secure UI",
                              "Sysdig",
                              "Customer",
                              "Profiling",
                              "K8s Policy Advisor",
                              "Compliance",
                              "Tuner"
                            ],
                            "example": "Secure UI"
                          },
                          "versionId": {
                            "type": "string",
                            "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                            "example": "v1.2.3"
                          },
                          "filename": {
                            "type": "string",
                            "description": "The name of a Falco rules file",
                            "example": "falco_rules_local.yaml"
                          },
                          "version": {
                            "type": "number",
                            "format": "integer",
                            "description": "The version is incremented when the update is successful.",
                            "example": 5
                          },
                          "createdOn": {
                            "type": "number",
                            "format": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                            "example": 1553702727177
                          },
                          "modifiedOn": {
                            "type": "number",
                            "format": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                            "example": 1553702738288
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "tags"
                        ],
                        "properties": {
                          "tags": {
                            "type": "array",
                            "description": "The set of tags",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Kubernetes",
                              "CIS Compliance",
                              "File Integrity"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "description",
                          "details"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "A description of this rule. No newlines/formatting.",
                            "example": "an attempt to write to any file below a set of binary directories"
                          },
                          "details": {
                            "type": "object",
                            "oneOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "append": {
                                        "type": "string",
                                        "enum": [
                                          true,
                                          false
                                        ],
                                        "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                        "example": "true"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "ruleType": {
                                        "type": "string",
                                        "description": "Indicates the rule type",
                                        "enum": [
                                          "PROCESS",
                                          "CONTAINER",
                                          "FILESYSTEM",
                                          "NETWORK",
                                          "SYSCALL",
                                          "FALCO"
                                        ],
                                        "example": "FALCO"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "condition"
                                    ],
                                    "properties": {
                                      "condition": {
                                        "type": "object",
                                        "required": [
                                          "condition",
                                          "components"
                                        ],
                                        "properties": {
                                          "condition": {
                                            "type": "string",
                                            "description": "the full condition text exactly as represented in the yaml file",
                                            "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                          },
                                          "components": {
                                            "type": "array",
                                            "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                            "items": {
                                              "type": "object",
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "conditionText"
                                                  ],
                                                  "properties": {
                                                    "text": {
                                                      "type": "string",
                                                      "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                      "example": "evt.type in (open, openat) and "
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "falcoMacroReference"
                                                  ],
                                                  "properties": {
                                                    "falcoMacroReference": {
                                                      "type": "string",
                                                      "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                      "example": "bin_dir"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "falcoListReference"
                                                  ],
                                                  "properties": {
                                                    "falcoListReference": {
                                                      "type": "string",
                                                      "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                      "example": "monitored_directories"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "output",
                                      "priority"
                                    ],
                                    "properties": {
                                      "output": {
                                        "type": "string",
                                        "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                        "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                      },
                                      "priority": {
                                        "type": "string",
                                        "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                        "enum": [
                                          "emergency",
                                          "alert",
                                          "critical",
                                          "error",
                                          "warning",
                                          "notice",
                                          "informational",
                                          "debug"
                                        ],
                                        "example": "error"
                                      },
                                      "source": {
                                        "type": "string",
                                        "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                        "enum": [
                                          "syscall",
                                          "k8s_audit",
                                          "aws_cloudtrail",
                                          "gcp_auditlog",
                                          "azure_platformlogs"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "required": [
                                  "processes",
                                  "ruleType"
                                ],
                                "properties": {
                                  "processes": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "readWritePaths",
                                  "readPaths",
                                  "ruleType"
                                ],
                                "properties": {
                                  "readWritePaths": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "readPaths": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "syscalls",
                                  "ruleType"
                                ],
                                "properties": {
                                  "syscalls": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "containers",
                                  "ruleType"
                                ],
                                "properties": {
                                  "containers": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tcpListenPorts",
                                  "udpListenPorts",
                                  "allOutbound",
                                  "allInbound",
                                  "ruleType"
                                ],
                                "properties": {
                                  "allOutbound": {
                                    "type": "boolean",
                                    "description": "If true, then all outbound connection attempts match this rule",
                                    "example": true
                                  },
                                  "allInbound": {
                                    "type": "boolean",
                                    "description": "If true, then all inbound connection attempts match this rule",
                                    "example": true
                                  },
                                  "tcpListenPorts": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "udpListenPorts": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/rules/%7BruleId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/rules/%7BruleId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/secure/rules/%7BruleId%7D'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/rules/%7BruleId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/rules/%7BruleId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update info associated with a rule",
          "parameters": [
            {
              "name": "ruleId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "required": [
                        "id",
                        "name",
                        "origin",
                        "versionId",
                        "filename",
                        "version",
                        "modifiedOn",
                        "createdOn"
                      ],
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "A unique identifier representing a specific rule",
                          "example": 1
                        },
                        "name": {
                          "type": "string",
                          "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                          "example": "Write Below Binary Dir"
                        },
                        "origin": {
                          "type": "string",
                          "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                          "enum": [
                            "Secure UI",
                            "Sysdig",
                            "Customer",
                            "Profiling",
                            "K8s Policy Advisor",
                            "Compliance",
                            "Tuner"
                          ],
                          "example": "Secure UI"
                        },
                        "versionId": {
                          "type": "string",
                          "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                          "example": "v1.2.3"
                        },
                        "filename": {
                          "type": "string",
                          "description": "The name of a Falco rules file",
                          "example": "falco_rules_local.yaml"
                        },
                        "version": {
                          "type": "number",
                          "format": "integer",
                          "description": "The version is incremented when the update is successful.",
                          "example": 5
                        },
                        "createdOn": {
                          "type": "number",
                          "format": "integer",
                          "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                          "example": 1553702727177
                        },
                        "modifiedOn": {
                          "type": "number",
                          "format": "integer",
                          "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                          "example": 1553702738288
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "tags"
                      ],
                      "properties": {
                        "tags": {
                          "type": "array",
                          "description": "The set of tags",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Kubernetes",
                            "CIS Compliance",
                            "File Integrity"
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "description",
                        "details"
                      ],
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "A description of this rule. No newlines/formatting.",
                          "example": "an attempt to write to any file below a set of binary directories"
                        },
                        "details": {
                          "type": "object",
                          "oneOf": [
                            {
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "append": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false
                                      ],
                                      "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                      "example": "true"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "ruleType"
                                  ],
                                  "properties": {
                                    "ruleType": {
                                      "type": "string",
                                      "description": "Indicates the rule type",
                                      "enum": [
                                        "PROCESS",
                                        "CONTAINER",
                                        "FILESYSTEM",
                                        "NETWORK",
                                        "SYSCALL",
                                        "FALCO"
                                      ],
                                      "example": "FALCO"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "condition"
                                  ],
                                  "properties": {
                                    "condition": {
                                      "type": "object",
                                      "required": [
                                        "condition",
                                        "components"
                                      ],
                                      "properties": {
                                        "condition": {
                                          "type": "string",
                                          "description": "the full condition text exactly as represented in the yaml file",
                                          "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                        },
                                        "components": {
                                          "type": "array",
                                          "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                          "items": {
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "type": "object",
                                                "required": [
                                                  "conditionText"
                                                ],
                                                "properties": {
                                                  "text": {
                                                    "type": "string",
                                                    "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                    "example": "evt.type in (open, openat) and "
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "falcoMacroReference"
                                                ],
                                                "properties": {
                                                  "falcoMacroReference": {
                                                    "type": "string",
                                                    "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                    "example": "bin_dir"
                                                  }
                                                }
                                              },
                                              {
                                                "type": "object",
                                                "required": [
                                                  "falcoListReference"
                                                ],
                                                "properties": {
                                                  "falcoListReference": {
                                                    "type": "string",
                                                    "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                    "example": "monitored_directories"
                                                  }
                                                }
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "output",
                                    "priority"
                                  ],
                                  "properties": {
                                    "output": {
                                      "type": "string",
                                      "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                      "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                    },
                                    "priority": {
                                      "type": "string",
                                      "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                      "enum": [
                                        "emergency",
                                        "alert",
                                        "critical",
                                        "error",
                                        "warning",
                                        "notice",
                                        "informational",
                                        "debug"
                                      ],
                                      "example": "error"
                                    },
                                    "source": {
                                      "type": "string",
                                      "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                      "enum": [
                                        "syscall",
                                        "k8s_audit",
                                        "aws_cloudtrail",
                                        "gcp_auditlog",
                                        "azure_platformlogs"
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "required": [
                                "processes",
                                "ruleType"
                              ],
                              "properties": {
                                "processes": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "readWritePaths",
                                "readPaths",
                                "ruleType"
                              ],
                              "properties": {
                                "readWritePaths": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "readPaths": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "syscalls",
                                "ruleType"
                              ],
                              "properties": {
                                "syscalls": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "containers",
                                "ruleType"
                              ],
                              "properties": {
                                "containers": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "required": [
                                "tcpListenPorts",
                                "udpListenPorts",
                                "allOutbound",
                                "allInbound",
                                "ruleType"
                              ],
                              "properties": {
                                "allOutbound": {
                                  "type": "boolean",
                                  "description": "If true, then all outbound connection attempts match this rule",
                                  "example": true
                                },
                                "allInbound": {
                                  "type": "boolean",
                                  "description": "If true, then all inbound connection attempts match this rule",
                                  "example": true
                                },
                                "tcpListenPorts": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "udpListenPorts": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                      "required": [
                                        "items",
                                        "matchItems"
                                      ],
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "the set of paths/syscalls/ports/etc.",
                                            "example": [
                                              "/bin",
                                              "usr/bin"
                                            ]
                                          }
                                        },
                                        "matchItems": {
                                          "type": "boolean",
                                          "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                          "example": true
                                        }
                                      }
                                    }
                                  ]
                                },
                                "ruleType": {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Rules"
          ],
          "responses": {
            "200": {
              "description": "The rule with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "origin",
                          "versionId",
                          "filename",
                          "version",
                          "modifiedOn",
                          "createdOn"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "A unique identifier representing a specific rule",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                            "example": "Write Below Binary Dir"
                          },
                          "origin": {
                            "type": "string",
                            "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                            "enum": [
                              "Secure UI",
                              "Sysdig",
                              "Customer",
                              "Profiling",
                              "K8s Policy Advisor",
                              "Compliance",
                              "Tuner"
                            ],
                            "example": "Secure UI"
                          },
                          "versionId": {
                            "type": "string",
                            "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                            "example": "v1.2.3"
                          },
                          "filename": {
                            "type": "string",
                            "description": "The name of a Falco rules file",
                            "example": "falco_rules_local.yaml"
                          },
                          "version": {
                            "type": "number",
                            "format": "integer",
                            "description": "The version is incremented when the update is successful.",
                            "example": 5
                          },
                          "createdOn": {
                            "type": "number",
                            "format": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                            "example": 1553702727177
                          },
                          "modifiedOn": {
                            "type": "number",
                            "format": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                            "example": 1553702738288
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "tags"
                        ],
                        "properties": {
                          "tags": {
                            "type": "array",
                            "description": "The set of tags",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Kubernetes",
                              "CIS Compliance",
                              "File Integrity"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "description",
                          "details"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "A description of this rule. No newlines/formatting.",
                            "example": "an attempt to write to any file below a set of binary directories"
                          },
                          "details": {
                            "type": "object",
                            "oneOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "append": {
                                        "type": "string",
                                        "enum": [
                                          true,
                                          false
                                        ],
                                        "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                        "example": "true"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "ruleType": {
                                        "type": "string",
                                        "description": "Indicates the rule type",
                                        "enum": [
                                          "PROCESS",
                                          "CONTAINER",
                                          "FILESYSTEM",
                                          "NETWORK",
                                          "SYSCALL",
                                          "FALCO"
                                        ],
                                        "example": "FALCO"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "condition"
                                    ],
                                    "properties": {
                                      "condition": {
                                        "type": "object",
                                        "required": [
                                          "condition",
                                          "components"
                                        ],
                                        "properties": {
                                          "condition": {
                                            "type": "string",
                                            "description": "the full condition text exactly as represented in the yaml file",
                                            "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                          },
                                          "components": {
                                            "type": "array",
                                            "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                            "items": {
                                              "type": "object",
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "conditionText"
                                                  ],
                                                  "properties": {
                                                    "text": {
                                                      "type": "string",
                                                      "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                      "example": "evt.type in (open, openat) and "
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "falcoMacroReference"
                                                  ],
                                                  "properties": {
                                                    "falcoMacroReference": {
                                                      "type": "string",
                                                      "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                      "example": "bin_dir"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "falcoListReference"
                                                  ],
                                                  "properties": {
                                                    "falcoListReference": {
                                                      "type": "string",
                                                      "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                      "example": "monitored_directories"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "output",
                                      "priority"
                                    ],
                                    "properties": {
                                      "output": {
                                        "type": "string",
                                        "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                        "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                      },
                                      "priority": {
                                        "type": "string",
                                        "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                        "enum": [
                                          "emergency",
                                          "alert",
                                          "critical",
                                          "error",
                                          "warning",
                                          "notice",
                                          "informational",
                                          "debug"
                                        ],
                                        "example": "error"
                                      },
                                      "source": {
                                        "type": "string",
                                        "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                        "enum": [
                                          "syscall",
                                          "k8s_audit",
                                          "aws_cloudtrail",
                                          "gcp_auditlog",
                                          "azure_platformlogs"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "required": [
                                  "processes",
                                  "ruleType"
                                ],
                                "properties": {
                                  "processes": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "readWritePaths",
                                  "readPaths",
                                  "ruleType"
                                ],
                                "properties": {
                                  "readWritePaths": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "readPaths": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "syscalls",
                                  "ruleType"
                                ],
                                "properties": {
                                  "syscalls": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "containers",
                                  "ruleType"
                                ],
                                "properties": {
                                  "containers": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tcpListenPorts",
                                  "udpListenPorts",
                                  "allOutbound",
                                  "allInbound",
                                  "ruleType"
                                ],
                                "properties": {
                                  "allOutbound": {
                                    "type": "boolean",
                                    "description": "If true, then all outbound connection attempts match this rule",
                                    "example": true
                                  },
                                  "allInbound": {
                                    "type": "boolean",
                                    "description": "If true, then all inbound connection attempts match this rule",
                                    "example": true
                                  },
                                  "tcpListenPorts": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "udpListenPorts": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The provided rule is not valid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Resource with the specified ID could not be found. More information about 404 can be found at https://httpstatuses.com/404"
            },
            "409": {
              "description": "The user must first perform a GET request to get the current version of the resource. The user must then compare the remote version with the local expected version and merge any updates from remote if needed and then update the local version to match the remote version. More information about 409 can be found at https://httpstatuses.com/409"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/rules/%7BruleId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/secure/rules/%7BruleId%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":1,\"name\":\"Write Below Binary Dir\",\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"filename\":\"falco_rules_local.yaml\",\"version\":5,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"tags\":[\"Kubernetes\",\"CIS Compliance\",\"File Integrity\"],\"description\":\"an attempt to write to any file below a set of binary directories\",\"details\":{\"append\":\"true\",\"ruleType\":\"FALCO\",\"condition\":{\"condition\":\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\",\"components\":[{\"text\":\"evt.type in (open, openat) and \"}]},\"output\":\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\",\"priority\":\"error\",\"source\":\"syscall\"}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/secure/rules/%7BruleId%7D',\n  headers: {'content-type': 'application/json'},\n  body: {\n    id: 1,\n    name: 'Write Below Binary Dir',\n    origin: 'Secure UI',\n    versionId: 'v1.2.3',\n    filename: 'falco_rules_local.yaml',\n    version: 5,\n    createdOn: 1553702727177,\n    modifiedOn: 1553702738288,\n    tags: ['Kubernetes', 'CIS Compliance', 'File Integrity'],\n    description: 'an attempt to write to any file below a set of binary directories',\n    details: {\n      append: 'true',\n      ruleType: 'FALCO',\n      condition: {\n        condition: 'evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)',\n        components: [{text: 'evt.type in (open, openat) and '}]\n      },\n      output: 'File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)',\n      priority: 'error',\n      source: 'syscall'\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/secure/rules/%7BruleId%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"tags\\\":[\\\"Kubernetes\\\",\\\"CIS Compliance\\\",\\\"File Integrity\\\"],\\\"description\\\":\\\"an attempt to write to any file below a set of binary directories\\\",\\\"details\\\":{\\\"append\\\":\\\"true\\\",\\\"ruleType\\\":\\\"FALCO\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]},\\\"output\\\":\\\"File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)\\\",\\\"priority\\\":\\\"error\\\",\\\"source\\\":\\\"syscall\\\"}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/secure/rules/%7BruleId%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete a rule",
          "parameters": [
            {
              "name": "ruleId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Rules"
          ],
          "responses": {
            "200": {
              "description": "The rule that was deleted",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "origin",
                          "versionId",
                          "filename",
                          "version",
                          "modifiedOn",
                          "createdOn"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "A unique identifier representing a specific rule",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                            "example": "Write Below Binary Dir"
                          },
                          "origin": {
                            "type": "string",
                            "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                            "enum": [
                              "Secure UI",
                              "Sysdig",
                              "Customer",
                              "Profiling",
                              "K8s Policy Advisor",
                              "Compliance",
                              "Tuner"
                            ],
                            "example": "Secure UI"
                          },
                          "versionId": {
                            "type": "string",
                            "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                            "example": "v1.2.3"
                          },
                          "filename": {
                            "type": "string",
                            "description": "The name of a Falco rules file",
                            "example": "falco_rules_local.yaml"
                          },
                          "version": {
                            "type": "number",
                            "format": "integer",
                            "description": "The version is incremented when the update is successful.",
                            "example": 5
                          },
                          "createdOn": {
                            "type": "number",
                            "format": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                            "example": 1553702727177
                          },
                          "modifiedOn": {
                            "type": "number",
                            "format": "integer",
                            "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                            "example": 1553702738288
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "tags"
                        ],
                        "properties": {
                          "tags": {
                            "type": "array",
                            "description": "The set of tags",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "Kubernetes",
                              "CIS Compliance",
                              "File Integrity"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "description",
                          "details"
                        ],
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "A description of this rule. No newlines/formatting.",
                            "example": "an attempt to write to any file below a set of binary directories"
                          },
                          "details": {
                            "type": "object",
                            "oneOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "append": {
                                        "type": "string",
                                        "enum": [
                                          true,
                                          false
                                        ],
                                        "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                        "example": "true"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "ruleType"
                                    ],
                                    "properties": {
                                      "ruleType": {
                                        "type": "string",
                                        "description": "Indicates the rule type",
                                        "enum": [
                                          "PROCESS",
                                          "CONTAINER",
                                          "FILESYSTEM",
                                          "NETWORK",
                                          "SYSCALL",
                                          "FALCO"
                                        ],
                                        "example": "FALCO"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "condition"
                                    ],
                                    "properties": {
                                      "condition": {
                                        "type": "object",
                                        "required": [
                                          "condition",
                                          "components"
                                        ],
                                        "properties": {
                                          "condition": {
                                            "type": "string",
                                            "description": "the full condition text exactly as represented in the yaml file",
                                            "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                          },
                                          "components": {
                                            "type": "array",
                                            "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                            "items": {
                                              "type": "object",
                                              "oneOf": [
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "conditionText"
                                                  ],
                                                  "properties": {
                                                    "text": {
                                                      "type": "string",
                                                      "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                      "example": "evt.type in (open, openat) and "
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "falcoMacroReference"
                                                  ],
                                                  "properties": {
                                                    "falcoMacroReference": {
                                                      "type": "string",
                                                      "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                      "example": "bin_dir"
                                                    }
                                                  }
                                                },
                                                {
                                                  "type": "object",
                                                  "required": [
                                                    "falcoListReference"
                                                  ],
                                                  "properties": {
                                                    "falcoListReference": {
                                                      "type": "string",
                                                      "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                      "example": "monitored_directories"
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "output",
                                      "priority"
                                    ],
                                    "properties": {
                                      "output": {
                                        "type": "string",
                                        "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                        "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                      },
                                      "priority": {
                                        "type": "string",
                                        "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                        "enum": [
                                          "emergency",
                                          "alert",
                                          "critical",
                                          "error",
                                          "warning",
                                          "notice",
                                          "informational",
                                          "debug"
                                        ],
                                        "example": "error"
                                      },
                                      "source": {
                                        "type": "string",
                                        "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                        "enum": [
                                          "syscall",
                                          "k8s_audit",
                                          "aws_cloudtrail",
                                          "gcp_auditlog",
                                          "azure_platformlogs"
                                        ]
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "required": [
                                  "processes",
                                  "ruleType"
                                ],
                                "properties": {
                                  "processes": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "readWritePaths",
                                  "readPaths",
                                  "ruleType"
                                ],
                                "properties": {
                                  "readWritePaths": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "readPaths": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "syscalls",
                                  "ruleType"
                                ],
                                "properties": {
                                  "syscalls": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "containers",
                                  "ruleType"
                                ],
                                "properties": {
                                  "containers": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "tcpListenPorts",
                                  "udpListenPorts",
                                  "allOutbound",
                                  "allInbound",
                                  "ruleType"
                                ],
                                "properties": {
                                  "allOutbound": {
                                    "type": "boolean",
                                    "description": "If true, then all outbound connection attempts match this rule",
                                    "example": true
                                  },
                                  "allInbound": {
                                    "type": "boolean",
                                    "description": "If true, then all inbound connection attempts match this rule",
                                    "example": true
                                  },
                                  "tcpListenPorts": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "udpListenPorts": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                        "required": [
                                          "items",
                                          "matchItems"
                                        ],
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "the set of paths/syscalls/ports/etc.",
                                              "example": [
                                                "/bin",
                                                "usr/bin"
                                              ]
                                            }
                                          },
                                          "matchItems": {
                                            "type": "boolean",
                                            "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                            "example": true
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "ruleType": {
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "ruleType"
                                        ],
                                        "properties": {
                                          "ruleType": {
                                            "type": "string",
                                            "description": "Indicates the rule type",
                                            "enum": [
                                              "PROCESS",
                                              "CONTAINER",
                                              "FILESYSTEM",
                                              "NETWORK",
                                              "SYSCALL",
                                              "FALCO"
                                            ],
                                            "example": "FALCO"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/rules/%7BruleId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/secure/rules/%7BruleId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/secure/rules/%7BruleId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/secure/rules/%7BruleId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/secure/rules/%7BruleId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/rules/summaries": {
        "get": {
          "summary": "Retrieve a list of summary rule information, grouped by rule name",
          "description": "Returns the list of rules in the system. These are grouped by name and do not necessarily represent individual rule objects, as multiple rules can have the same name.\n",
          "tags": [
            "Rules"
          ],
          "parameters": [
            {
              "name": "policyType",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                "enum": [
                  "falco",
                  "list_matching",
                  "k8s_audit",
                  "aws_cloudtrail",
                  "gcp_auditlog",
                  "azure_platformlogs"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "An array of rules grouped by name.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "ids",
                            "name",
                            "publishedBys",
                            "modifiedOn"
                          ],
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              },
                              "description": "The specific object ids having this name",
                              "example": [
                                6,
                                17,
                                21
                              ]
                            },
                            "name": {
                              "type": "string",
                              "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                              "example": "Write Below Binary Dir"
                            },
                            "publishedBys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "origin",
                                      "versionId"
                                    ],
                                    "properties": {
                                      "origin": {
                                        "type": "string",
                                        "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                        "enum": [
                                          "Secure UI",
                                          "Sysdig",
                                          "Customer",
                                          "Profiling",
                                          "K8s Policy Advisor",
                                          "Compliance",
                                          "Tuner"
                                        ],
                                        "example": "Secure UI"
                                      },
                                      "versionId": {
                                        "type": "string",
                                        "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                        "example": "v1.2.3"
                                      }
                                    }
                                  }
                                ]
                              },
                              "description": "A set of (origin,versionId) pairs for all the objects sharing this name."
                            },
                            "modifiedOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "ruleType"
                          ],
                          "properties": {
                            "ruleType": {
                              "type": "string",
                              "description": "Indicates the rule type",
                              "enum": [
                                "PROCESS",
                                "CONTAINER",
                                "FILESYSTEM",
                                "NETWORK",
                                "SYSCALL",
                                "FALCO"
                              ],
                              "example": "FALCO"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "usedCount"
                          ],
                          "properties": {
                            "usedCount": {
                              "type": "integer",
                              "description": "The number of rules that refer to this object (macro/list) OR the number of policies that refer to this rule"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "tags"
                          ],
                          "properties": {
                            "tags": {
                              "type": "array",
                              "description": "The set of tags",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Kubernetes",
                                "CIS Compliance",
                                "File Integrity"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/rules/summaries?policyType=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/secure/rules/summaries?policyType=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/rules/summaries',\n  qs: {policyType: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/rules/summaries?policyType=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/rules/summaries?policyType=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/rules/groups": {
        "get": {
          "summary": "Retrieve a group of all rules having a given name",
          "description": "Retrieve a group of all rules having the given name. This is used to show how a base rule is modified by later rules that override/append to the rule.",
          "tags": [
            "Rules"
          ],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "An array of rules",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "origin",
                            "versionId",
                            "filename",
                            "version",
                            "modifiedOn",
                            "createdOn"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "A unique identifier representing a specific rule",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                              "example": "Write Below Binary Dir"
                            },
                            "origin": {
                              "type": "string",
                              "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                              "enum": [
                                "Secure UI",
                                "Sysdig",
                                "Customer",
                                "Profiling",
                                "K8s Policy Advisor",
                                "Compliance",
                                "Tuner"
                              ],
                              "example": "Secure UI"
                            },
                            "versionId": {
                              "type": "string",
                              "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                              "example": "v1.2.3"
                            },
                            "filename": {
                              "type": "string",
                              "description": "The name of a Falco rules file",
                              "example": "falco_rules_local.yaml"
                            },
                            "version": {
                              "type": "number",
                              "format": "integer",
                              "description": "The version is incremented when the update is successful.",
                              "example": 5
                            },
                            "createdOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                              "example": 1553702727177
                            },
                            "modifiedOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "tags"
                          ],
                          "properties": {
                            "tags": {
                              "type": "array",
                              "description": "The set of tags",
                              "items": {
                                "type": "string"
                              },
                              "example": [
                                "Kubernetes",
                                "CIS Compliance",
                                "File Integrity"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "description",
                            "details"
                          ],
                          "properties": {
                            "description": {
                              "type": "string",
                              "description": "A description of this rule. No newlines/formatting.",
                              "example": "an attempt to write to any file below a set of binary directories"
                            },
                            "details": {
                              "type": "object",
                              "oneOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "append": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false
                                          ],
                                          "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                          "example": "true"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "ruleType"
                                      ],
                                      "properties": {
                                        "ruleType": {
                                          "type": "string",
                                          "description": "Indicates the rule type",
                                          "enum": [
                                            "PROCESS",
                                            "CONTAINER",
                                            "FILESYSTEM",
                                            "NETWORK",
                                            "SYSCALL",
                                            "FALCO"
                                          ],
                                          "example": "FALCO"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "condition"
                                      ],
                                      "properties": {
                                        "condition": {
                                          "type": "object",
                                          "required": [
                                            "condition",
                                            "components"
                                          ],
                                          "properties": {
                                            "condition": {
                                              "type": "string",
                                              "description": "the full condition text exactly as represented in the yaml file",
                                              "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                            },
                                            "components": {
                                              "type": "array",
                                              "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                              "items": {
                                                "type": "object",
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "conditionText"
                                                    ],
                                                    "properties": {
                                                      "text": {
                                                        "type": "string",
                                                        "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                                        "example": "evt.type in (open, openat) and "
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "falcoMacroReference"
                                                    ],
                                                    "properties": {
                                                      "falcoMacroReference": {
                                                        "type": "string",
                                                        "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                        "example": "bin_dir"
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "type": "object",
                                                    "required": [
                                                      "falcoListReference"
                                                    ],
                                                    "properties": {
                                                      "falcoListReference": {
                                                        "type": "string",
                                                        "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                                        "example": "monitored_directories"
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "output",
                                        "priority"
                                      ],
                                      "properties": {
                                        "output": {
                                          "type": "string",
                                          "description": "A string describing the output string to generate when this rule matches an event. Should exactly match the output property of the rule\\'s output field",
                                          "example": "File below a known binary directory opened for writing (user=%user.name command=%proc.cmdline file=%fd.name)"
                                        },
                                        "priority": {
                                          "type": "string",
                                          "description": "A string describing the falco rule\\'s priority. This is only included so the resulting rule can be converted back to yaml easily. For the purposes of policy events, the policy\\'s severity should be used instead of this value.",
                                          "enum": [
                                            "emergency",
                                            "alert",
                                            "critical",
                                            "error",
                                            "warning",
                                            "notice",
                                            "informational",
                                            "debug"
                                          ],
                                          "example": "error"
                                        },
                                        "source": {
                                          "type": "string",
                                          "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                                          "enum": [
                                            "syscall",
                                            "k8s_audit",
                                            "aws_cloudtrail",
                                            "gcp_auditlog",
                                            "azure_platformlogs"
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "processes",
                                    "ruleType"
                                  ],
                                  "properties": {
                                    "processes": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                          "required": [
                                            "items",
                                            "matchItems"
                                          ],
                                          "properties": {
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "the set of paths/syscalls/ports/etc.",
                                                "example": [
                                                  "/bin",
                                                  "usr/bin"
                                                ]
                                              }
                                            },
                                            "matchItems": {
                                              "type": "boolean",
                                              "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "ruleType": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "ruleType"
                                          ],
                                          "properties": {
                                            "ruleType": {
                                              "type": "string",
                                              "description": "Indicates the rule type",
                                              "enum": [
                                                "PROCESS",
                                                "CONTAINER",
                                                "FILESYSTEM",
                                                "NETWORK",
                                                "SYSCALL",
                                                "FALCO"
                                              ],
                                              "example": "FALCO"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "readWritePaths",
                                    "readPaths",
                                    "ruleType"
                                  ],
                                  "properties": {
                                    "readWritePaths": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                          "required": [
                                            "items",
                                            "matchItems"
                                          ],
                                          "properties": {
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "the set of paths/syscalls/ports/etc.",
                                                "example": [
                                                  "/bin",
                                                  "usr/bin"
                                                ]
                                              }
                                            },
                                            "matchItems": {
                                              "type": "boolean",
                                              "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "readPaths": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                          "required": [
                                            "items",
                                            "matchItems"
                                          ],
                                          "properties": {
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "the set of paths/syscalls/ports/etc.",
                                                "example": [
                                                  "/bin",
                                                  "usr/bin"
                                                ]
                                              }
                                            },
                                            "matchItems": {
                                              "type": "boolean",
                                              "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "ruleType": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "ruleType"
                                          ],
                                          "properties": {
                                            "ruleType": {
                                              "type": "string",
                                              "description": "Indicates the rule type",
                                              "enum": [
                                                "PROCESS",
                                                "CONTAINER",
                                                "FILESYSTEM",
                                                "NETWORK",
                                                "SYSCALL",
                                                "FALCO"
                                              ],
                                              "example": "FALCO"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "syscalls",
                                    "ruleType"
                                  ],
                                  "properties": {
                                    "syscalls": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                          "required": [
                                            "items",
                                            "matchItems"
                                          ],
                                          "properties": {
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "the set of paths/syscalls/ports/etc.",
                                                "example": [
                                                  "/bin",
                                                  "usr/bin"
                                                ]
                                              }
                                            },
                                            "matchItems": {
                                              "type": "boolean",
                                              "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "ruleType": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "ruleType"
                                          ],
                                          "properties": {
                                            "ruleType": {
                                              "type": "string",
                                              "description": "Indicates the rule type",
                                              "enum": [
                                                "PROCESS",
                                                "CONTAINER",
                                                "FILESYSTEM",
                                                "NETWORK",
                                                "SYSCALL",
                                                "FALCO"
                                              ],
                                              "example": "FALCO"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "containers",
                                    "ruleType"
                                  ],
                                  "properties": {
                                    "containers": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                          "required": [
                                            "items",
                                            "matchItems"
                                          ],
                                          "properties": {
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "the set of paths/syscalls/ports/etc.",
                                                "example": [
                                                  "/bin",
                                                  "usr/bin"
                                                ]
                                              }
                                            },
                                            "matchItems": {
                                              "type": "boolean",
                                              "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "ruleType": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "ruleType"
                                          ],
                                          "properties": {
                                            "ruleType": {
                                              "type": "string",
                                              "description": "Indicates the rule type",
                                              "enum": [
                                                "PROCESS",
                                                "CONTAINER",
                                                "FILESYSTEM",
                                                "NETWORK",
                                                "SYSCALL",
                                                "FALCO"
                                              ],
                                              "example": "FALCO"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "required": [
                                    "tcpListenPorts",
                                    "udpListenPorts",
                                    "allOutbound",
                                    "allInbound",
                                    "ruleType"
                                  ],
                                  "properties": {
                                    "allOutbound": {
                                      "type": "boolean",
                                      "description": "If true, then all outbound connection attempts match this rule",
                                      "example": true
                                    },
                                    "allInbound": {
                                      "type": "boolean",
                                      "description": "If true, then all inbound connection attempts match this rule",
                                      "example": true
                                    },
                                    "tcpListenPorts": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                          "required": [
                                            "items",
                                            "matchItems"
                                          ],
                                          "properties": {
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "the set of paths/syscalls/ports/etc.",
                                                "example": [
                                                  "/bin",
                                                  "usr/bin"
                                                ]
                                              }
                                            },
                                            "matchItems": {
                                              "type": "boolean",
                                              "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "udpListenPorts": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "description": "Represents a list of items and whether the list represents a set of items to match or not match",
                                          "required": [
                                            "items",
                                            "matchItems"
                                          ],
                                          "properties": {
                                            "items": {
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "the set of paths/syscalls/ports/etc.",
                                                "example": [
                                                  "/bin",
                                                  "usr/bin"
                                                ]
                                              }
                                            },
                                            "matchItems": {
                                              "type": "boolean",
                                              "description": "If true, the rule matches if the path/syscall/port matches one of the items in the list. If false, the rule matches if the path/syscall/port/etc does not match any of the items in the list.",
                                              "example": true
                                            }
                                          }
                                        }
                                      ]
                                    },
                                    "ruleType": {
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "required": [
                                            "ruleType"
                                          ],
                                          "properties": {
                                            "ruleType": {
                                              "type": "string",
                                              "description": "Indicates the rule type",
                                              "enum": [
                                                "PROCESS",
                                                "CONTAINER",
                                                "FILESYSTEM",
                                                "NETWORK",
                                                "SYSCALL",
                                                "FALCO"
                                              ],
                                              "example": "FALCO"
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/rules/groups?name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/secure/rules/groups?name=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/rules/groups',\n  qs: {name: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/rules/groups?name=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/rules/groups?name=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/rules/policyMappings": {
        "get": {
          "summary": "Retrieve a map of rule names to their corresponding policies that use them",
          "description": "Retrieve a map of rule names to their corresponding policies that use them. The accept header will include \"lite\" to indicate the lightweight response of the endpoint should be returned e.g. 'application/xhtml+xml; lite' and return the full representation if not requested",
          "tags": [
            "Rules"
          ],
          "parameters": [
            {
              "name": "origin",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                "enum": [
                  "Secure UI",
                  "Sysdig",
                  "Customer",
                  "Profiling",
                  "K8s Policy Advisor",
                  "Compliance",
                  "Tuner"
                ],
                "example": "Secure UI"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "An array of policies",
              "content": {
                "application/json": {
                  "schema": {
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rule": {
                              "type": "string",
                              "description": "the name of a runtime policy rule",
                              "example": "shell_in_container"
                            },
                            "policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "Unique identifier representing a specific policy.",
                                    "example": 1
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "A short name for the policy",
                                    "example": "Check filesystem activity"
                                  },
                                  "enabled": {
                                    "type": "boolean",
                                    "description": "True if the policy should be considered",
                                    "example": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "rule": {
                              "type": "string",
                              "description": "the name of a runtime policy rule",
                              "example": "shell_in_container"
                            },
                            "policies": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "A short name for the policy",
                                        "example": "Check filesystem activity"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "Description of policy",
                                        "example": "Monitor all filesystem operations and look for suspicious or notable behavior"
                                      },
                                      "severity": {
                                        "type": "integer",
                                        "description": "How severe is this policy when violated. Range from 0 to 7 included.",
                                        "example": 4
                                      },
                                      "enabled": {
                                        "type": "boolean",
                                        "description": "True if the policy should be considered",
                                        "example": true
                                      },
                                      "scope": {
                                        "type": "string",
                                        "description": "Where the policy is being applied- Container, Host etc..",
                                        "example": "container.image.repository = sysdig/agent"
                                      },
                                      "ruleNames": {
                                        "type": "array",
                                        "description": "Array of rule names. (They must be names instead of ids, as the rules list view is by name, to account for multiple rules having the same name).",
                                        "items": {
                                          "type": "string"
                                        },
                                        "example": [
                                          "Write below binary dir",
                                          "Write below root",
                                          "Write below monitored dir"
                                        ]
                                      },
                                      "actions": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Functional behavior that can be enabled within a policy and should be performed if the condition of a policy is met. Certain actions may only make sense for policies of a particular type.",
                                          "oneOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "POLICY_ACTION_CAPTURE"
                                                  ]
                                                },
                                                "filter": {
                                                  "type": "string",
                                                  "description": "specifies the subset to match",
                                                  "example": "proc.name=cat or proc.name=vi"
                                                },
                                                "isLimitedToContainer": {
                                                  "type": "boolean"
                                                },
                                                "beforeEventNs": {
                                                  "type": "integer",
                                                  "description": "period of time to capture before event in nanoseconds"
                                                },
                                                "afterEventNs": {
                                                  "type": "integer",
                                                  "description": "period of time to capture after event in nanoseconds"
                                                },
                                                "name": {
                                                  "type": "string",
                                                  "description": "the name of the file in which the capture will be saved"
                                                },
                                                "storageType": {
                                                  "type": "string",
                                                  "description": "specifies which strategy will be taken to store the capture",
                                                  "enum": [
                                                    "LOCAL",
                                                    "S3",
                                                    "AGENT",
                                                    "PROVIDED",
                                                    "CASSANDRA"
                                                  ]
                                                },
                                                "bucketName": {
                                                  "type": "string",
                                                  "description": "identifies an s3 compliant bucket"
                                                },
                                                "folder": {
                                                  "type": "string",
                                                  "description": "the name of an s3 folder (enables the user to specify a bucket that is not in the default bucket root folder '/')"
                                                },
                                                "storageId": {
                                                  "type": "integer",
                                                  "description": "specifies the id of a row in the file_storage table that corresponds to a FileStorageDetails.java object"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "type"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "POLICY_ACTION_STOP"
                                                  ]
                                                },
                                                "msg": {
                                                  "type": "string",
                                                  "description": "a message to send to the thing being stopped"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "type"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "POLICY_ACTION_PAUSE"
                                                  ]
                                                },
                                                "msg": {
                                                  "type": "string",
                                                  "description": "a message to send to the thing being paused"
                                                }
                                              }
                                            },
                                            {
                                              "type": "object",
                                              "required": [
                                                "type"
                                              ],
                                              "properties": {
                                                "type": {
                                                  "type": "string",
                                                  "enum": [
                                                    "POLICY_ACTION_KILL"
                                                  ]
                                                },
                                                "msg": {
                                                  "type": "string",
                                                  "description": "a message to send to the thing being killed"
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "A name for a non overlapping subset of policies that share common characteristics. The enums falco and list_matching correspond to the FalcoSource enum syscall, k8s_audit corresponds to k8s_audit, and the others will map to a future enum value once OSS Falco decides a name",
                                        "enum": [
                                          "falco",
                                          "list_matching",
                                          "k8s_audit",
                                          "aws_cloudtrail",
                                          "gcp_auditlog",
                                          "azure_platformlogs"
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "integer",
                                        "description": "Unique identifier representing a specific policy.",
                                        "example": 1
                                      },
                                      "version": {
                                        "type": "integer",
                                        "description": "Version of the object. Incremented on each update and used for optimistic locking",
                                        "example": 18
                                      },
                                      "templateId": {
                                        "type": "integer",
                                        "description": "id of the template this policy was birthed from.  For unmanaged policies this value is nil",
                                        "example": 2
                                      },
                                      "templateVersion": {
                                        "type": "integer",
                                        "description": "version of the template this policy was most recently updated from.",
                                        "example": 4
                                      },
                                      "isDefault": {
                                        "type": "boolean",
                                        "description": "is this a default policy",
                                        "example": true
                                      },
                                      "createdOn": {
                                        "type": "integer",
                                        "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                        "example": 1553702727177
                                      },
                                      "modifiedOn": {
                                        "type": "integer",
                                        "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                        "example": 1553702738288
                                      },
                                      "origin": {
                                        "type": "string",
                                        "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                        "enum": [
                                          "Secure UI",
                                          "Sysdig",
                                          "Customer",
                                          "Profiling",
                                          "K8s Policy Advisor",
                                          "Compliance",
                                          "Tuner"
                                        ],
                                        "example": "Secure UI"
                                      },
                                      "versionId": {
                                        "type": "string",
                                        "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                        "example": "v1.2.3"
                                      },
                                      "notificationChannelIds": {
                                        "type": "array",
                                        "items": {
                                          "type": "integer",
                                          "example": [
                                            3,
                                            5
                                          ]
                                        }
                                      },
                                      "profile": {
                                        "type": "object",
                                        "required": [
                                          "profileId",
                                          "profileName",
                                          "profileVersion",
                                          "imageId",
                                          "imageName"
                                        ],
                                        "properties": {
                                          "profileId": {
                                            "type": "string",
                                            "description": "UUID of the profile, based on a SHA of (imageId + profileVersion)."
                                          },
                                          "profileName": {
                                            "type": "string",
                                            "description": "Name of the profile, which includes registry/repository:tag@hash."
                                          },
                                          "profileVersion": {
                                            "type": "integer",
                                            "description": "Version of the profile, incremented when the model is updated."
                                          },
                                          "imageId": {
                                            "type": "string",
                                            "description": "UUID of the image, based on a SHA256 of the image content."
                                          },
                                          "imageName": {
                                            "type": "string",
                                            "description": "Name of the image, as registry/repository:tag."
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/rules/policyMappings?origin=Secure%20UI\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/secure/rules/policyMappings?origin=Secure%20UI'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/rules/policyMappings',\n  qs: {origin: 'Secure UI'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/rules/policyMappings?origin=Secure%20UI\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/rules/policyMappings?origin=Secure%20UI\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/rules/tags": {
        "get": {
          "summary": "Retrieves every tag associated with a runtime policy rule",
          "description": "Retrieves every tag associated with a runtime rule irrespective of whether or not that rule is used by a policy",
          "tags": [
            "Rules"
          ],
          "responses": {
            "200": {
              "description": "The array representing all the tags",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/rules/tags\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/rules/tags"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {method: 'GET', url: 'https://secure.sysdig.com/api/secure/rules/tags'};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/rules/tags\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/rules/tags\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/falco/macros": {
        "post": {
          "summary": "Create a new Falco macro",
          "description": "Save a new macro\n",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "origin",
                            "versionId",
                            "filename",
                            "version",
                            "modifiedOn",
                            "createdOn"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "A unique identifier representing a specific rule",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                              "example": "Write Below Binary Dir"
                            },
                            "origin": {
                              "type": "string",
                              "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                              "enum": [
                                "Secure UI",
                                "Sysdig",
                                "Customer",
                                "Profiling",
                                "K8s Policy Advisor",
                                "Compliance",
                                "Tuner"
                              ],
                              "example": "Secure UI"
                            },
                            "versionId": {
                              "type": "string",
                              "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                              "example": "v1.2.3"
                            },
                            "filename": {
                              "type": "string",
                              "description": "The name of a Falco rules file",
                              "example": "falco_rules_local.yaml"
                            },
                            "version": {
                              "type": "number",
                              "format": "integer",
                              "description": "The version is incremented when the update is successful.",
                              "example": 5
                            },
                            "createdOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                              "example": 1553702727177
                            },
                            "modifiedOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "append": {
                              "type": "string",
                              "enum": [
                                true,
                                false
                              ],
                              "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                              "example": "true"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "condition"
                      ],
                      "properties": {
                        "condition": {
                          "type": "object",
                          "required": [
                            "condition",
                            "components"
                          ],
                          "properties": {
                            "condition": {
                              "type": "string",
                              "description": "the full condition text exactly as represented in the yaml file",
                              "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                            },
                            "components": {
                              "type": "array",
                              "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "conditionText"
                                    ],
                                    "properties": {
                                      "text": {
                                        "type": "string",
                                        "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                        "example": "evt.type in (open, openat) and "
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "falcoMacroReference"
                                    ],
                                    "properties": {
                                      "falcoMacroReference": {
                                        "type": "string",
                                        "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                        "example": "bin_dir"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "falcoListReference"
                                    ],
                                    "properties": {
                                      "falcoListReference": {
                                        "type": "string",
                                        "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                        "example": "monitored_directories"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Falco Macros"
          ],
          "responses": {
            "200": {
              "description": "The saved FalcoMacro",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "condition"
                        ],
                        "properties": {
                          "condition": {
                            "type": "object",
                            "required": [
                              "condition",
                              "components"
                            ],
                            "properties": {
                              "condition": {
                                "type": "string",
                                "description": "the full condition text exactly as represented in the yaml file",
                                "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "conditionText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                          "example": "evt.type in (open, openat) and "
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoMacroReference"
                                      ],
                                      "properties": {
                                        "falcoMacroReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "bin_dir"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The provided FalcoMacro was invalid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/macros\"\n\n\tpayload := strings.NewReader(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/secure/falco/macros \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":1,\"name\":\"Write Below Binary Dir\",\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"filename\":\"falco_rules_local.yaml\",\"version\":5,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"append\":\"true\",\"condition\":{\"condition\":\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\",\"components\":[{\"text\":\"evt.type in (open, openat) and \"}]}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/secure/falco/macros',\n  headers: {'content-type': 'application/json'},\n  body: {\n    id: 1,\n    name: 'Write Below Binary Dir',\n    origin: 'Secure UI',\n    versionId: 'v1.2.3',\n    filename: 'falco_rules_local.yaml',\n    version: 5,\n    createdOn: 1553702727177,\n    modifiedOn: 1553702738288,\n    append: 'true',\n    condition: {\n      condition: 'evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)',\n      components: [{text: 'evt.type in (open, openat) and '}]\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/secure/falco/macros\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/secure/falco/macros\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/falco/macros/{macroId}": {
        "get": {
          "summary": "Retrieve a Falco macro",
          "parameters": [
            {
              "name": "macroId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Falco Macros"
          ],
          "responses": {
            "200": {
              "description": "The macro with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "condition"
                        ],
                        "properties": {
                          "condition": {
                            "type": "object",
                            "required": [
                              "condition",
                              "components"
                            ],
                            "properties": {
                              "condition": {
                                "type": "string",
                                "description": "the full condition text exactly as represented in the yaml file",
                                "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "conditionText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                          "example": "evt.type in (open, openat) and "
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoMacroReference"
                                      ],
                                      "properties": {
                                        "falcoMacroReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "bin_dir"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/falco/macros/%7BmacroId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update a Falco macro",
          "parameters": [
            {
              "name": "macroId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "origin",
                            "versionId",
                            "filename",
                            "version",
                            "modifiedOn",
                            "createdOn"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "A unique identifier representing a specific rule",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                              "example": "Write Below Binary Dir"
                            },
                            "origin": {
                              "type": "string",
                              "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                              "enum": [
                                "Secure UI",
                                "Sysdig",
                                "Customer",
                                "Profiling",
                                "K8s Policy Advisor",
                                "Compliance",
                                "Tuner"
                              ],
                              "example": "Secure UI"
                            },
                            "versionId": {
                              "type": "string",
                              "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                              "example": "v1.2.3"
                            },
                            "filename": {
                              "type": "string",
                              "description": "The name of a Falco rules file",
                              "example": "falco_rules_local.yaml"
                            },
                            "version": {
                              "type": "number",
                              "format": "integer",
                              "description": "The version is incremented when the update is successful.",
                              "example": 5
                            },
                            "createdOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                              "example": 1553702727177
                            },
                            "modifiedOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "append": {
                              "type": "string",
                              "enum": [
                                true,
                                false
                              ],
                              "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                              "example": "true"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "condition"
                      ],
                      "properties": {
                        "condition": {
                          "type": "object",
                          "required": [
                            "condition",
                            "components"
                          ],
                          "properties": {
                            "condition": {
                              "type": "string",
                              "description": "the full condition text exactly as represented in the yaml file",
                              "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                            },
                            "components": {
                              "type": "array",
                              "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "conditionText"
                                    ],
                                    "properties": {
                                      "text": {
                                        "type": "string",
                                        "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                        "example": "evt.type in (open, openat) and "
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "falcoMacroReference"
                                    ],
                                    "properties": {
                                      "falcoMacroReference": {
                                        "type": "string",
                                        "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                        "example": "bin_dir"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "falcoListReference"
                                    ],
                                    "properties": {
                                      "falcoListReference": {
                                        "type": "string",
                                        "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                        "example": "monitored_directories"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Falco Macros"
          ],
          "responses": {
            "200": {
              "description": "The macro with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "condition"
                        ],
                        "properties": {
                          "condition": {
                            "type": "object",
                            "required": [
                              "condition",
                              "components"
                            ],
                            "properties": {
                              "condition": {
                                "type": "string",
                                "description": "the full condition text exactly as represented in the yaml file",
                                "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "conditionText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                          "example": "evt.type in (open, openat) and "
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoMacroReference"
                                      ],
                                      "properties": {
                                        "falcoMacroReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "bin_dir"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The updated macro is not valid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Resource with the specified ID could not be found. More information about 404 can be found at https://httpstatuses.com/404"
            },
            "409": {
              "description": "The user must first perform a GET request to get the current version of the resource. The user must then compare the remote version with the local expected version and merge any updates from remote if needed and then update the local version to match the remote version. More information about 409 can be found at https://httpstatuses.com/409"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":1,\"name\":\"Write Below Binary Dir\",\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"filename\":\"falco_rules_local.yaml\",\"version\":5,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"append\":\"true\",\"condition\":{\"condition\":\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\",\"components\":[{\"text\":\"evt.type in (open, openat) and \"}]}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D',\n  headers: {'content-type': 'application/json'},\n  body: {\n    id: 1,\n    name: 'Write Below Binary Dir',\n    origin: 'Secure UI',\n    versionId: 'v1.2.3',\n    filename: 'falco_rules_local.yaml',\n    version: 5,\n    createdOn: 1553702727177,\n    modifiedOn: 1553702738288,\n    append: 'true',\n    condition: {\n      condition: 'evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)',\n      components: [{text: 'evt.type in (open, openat) and '}]\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"condition\\\":{\\\"condition\\\":\\\"evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)\\\",\\\"components\\\":[{\\\"text\\\":\\\"evt.type in (open, openat) and \\\"}]}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/secure/falco/macros/%7BmacroId%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete a Falco macro",
          "parameters": [
            {
              "name": "macroId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Falco Macros"
          ],
          "responses": {
            "200": {
              "description": "The macro that was just deleted",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "condition"
                        ],
                        "properties": {
                          "condition": {
                            "type": "object",
                            "required": [
                              "condition",
                              "components"
                            ],
                            "properties": {
                              "condition": {
                                "type": "string",
                                "description": "the full condition text exactly as represented in the yaml file",
                                "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "conditionText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                          "example": "evt.type in (open, openat) and "
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoMacroReference"
                                      ],
                                      "properties": {
                                        "falcoMacroReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "bin_dir"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/secure/falco/macros/%7BmacroId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/secure/falco/macros/%7BmacroId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/falco/macros/summaries": {
        "get": {
          "summary": "Retrieve a list of summary macro information, grouped by macro name",
          "description": "Returns the list of macros in the system. These are grouped by name and do not necessarily represent individual macro objects, as multiple macros can have the same name.\n",
          "tags": [
            "Falco Macros"
          ],
          "responses": {
            "200": {
              "description": "An array of macros grouped by name.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "ids",
                            "name",
                            "publishedBys",
                            "modifiedOn"
                          ],
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              },
                              "description": "The specific object ids having this name",
                              "example": [
                                6,
                                17,
                                21
                              ]
                            },
                            "name": {
                              "type": "string",
                              "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                              "example": "Write Below Binary Dir"
                            },
                            "publishedBys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "origin",
                                      "versionId"
                                    ],
                                    "properties": {
                                      "origin": {
                                        "type": "string",
                                        "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                        "enum": [
                                          "Secure UI",
                                          "Sysdig",
                                          "Customer",
                                          "Profiling",
                                          "K8s Policy Advisor",
                                          "Compliance",
                                          "Tuner"
                                        ],
                                        "example": "Secure UI"
                                      },
                                      "versionId": {
                                        "type": "string",
                                        "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                        "example": "v1.2.3"
                                      }
                                    }
                                  }
                                ]
                              },
                              "description": "A set of (origin,versionId) pairs for all the objects sharing this name."
                            },
                            "modifiedOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "usedCount"
                          ],
                          "properties": {
                            "usedCount": {
                              "type": "integer",
                              "description": "The number of rules that refer to this object (macro/list) OR the number of policies that refer to this rule"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/macros/summaries\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/falco/macros/summaries"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/falco/macros/summaries'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/falco/macros/summaries\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/falco/macros/summaries\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/falco/macros/groups": {
        "get": {
          "summary": "Retrieve a group of all falco macros having a given name",
          "description": "Retrieve a group of all falco macros having the given name. This is used to show how a base macro is modified by later macros that override/append to the macro.",
          "tags": [
            "Falco Macros"
          ],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "An array of macros",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "origin",
                                "versionId",
                                "filename",
                                "version",
                                "modifiedOn",
                                "createdOn"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "A unique identifier representing a specific rule",
                                  "example": 1
                                },
                                "name": {
                                  "type": "string",
                                  "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                  "example": "Write Below Binary Dir"
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                  "enum": [
                                    "Secure UI",
                                    "Sysdig",
                                    "Customer",
                                    "Profiling",
                                    "K8s Policy Advisor",
                                    "Compliance",
                                    "Tuner"
                                  ],
                                  "example": "Secure UI"
                                },
                                "versionId": {
                                  "type": "string",
                                  "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                  "example": "v1.2.3"
                                },
                                "filename": {
                                  "type": "string",
                                  "description": "The name of a Falco rules file",
                                  "example": "falco_rules_local.yaml"
                                },
                                "version": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "The version is incremented when the update is successful.",
                                  "example": 5
                                },
                                "createdOn": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                  "example": 1553702727177
                                },
                                "modifiedOn": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                  "example": 1553702738288
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "append": {
                                  "type": "string",
                                  "enum": [
                                    true,
                                    false
                                  ],
                                  "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                  "example": "true"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "required": [
                            "condition"
                          ],
                          "properties": {
                            "condition": {
                              "type": "object",
                              "required": [
                                "condition",
                                "components"
                              ],
                              "properties": {
                                "condition": {
                                  "type": "string",
                                  "description": "the full condition text exactly as represented in the yaml file",
                                  "example": "evt.type in (open, openat) and bin_dir and fd.name in (monitored_directories)"
                                },
                                "components": {
                                  "type": "array",
                                  "description": "an array containing the broken-up components of this falco rule\\'s condition field",
                                  "items": {
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "conditionText"
                                        ],
                                        "properties": {
                                          "text": {
                                            "type": "string",
                                            "description": "An opaque hunk of condition text. May contain a mix of fields, relational operators, etc. Basically anything between Macro/List references.",
                                            "example": "evt.type in (open, openat) and "
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "falcoMacroReference"
                                        ],
                                        "properties": {
                                          "falcoMacroReference": {
                                            "type": "string",
                                            "description": "The name of a FalcoMacro object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                            "example": "bin_dir"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "falcoListReference"
                                        ],
                                        "properties": {
                                          "falcoListReference": {
                                            "type": "string",
                                            "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                            "example": "monitored_directories"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/macros/groups?name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/secure/falco/macros/groups?name=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/falco/macros/groups',\n  qs: {name: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/falco/macros/groups?name=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/falco/macros/groups?name=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/falco/lists": {
        "post": {
          "summary": "Create a new falco list",
          "description": "Save a new falcolist\n",
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "origin",
                            "versionId",
                            "filename",
                            "version",
                            "modifiedOn",
                            "createdOn"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "A unique identifier representing a specific rule",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                              "example": "Write Below Binary Dir"
                            },
                            "origin": {
                              "type": "string",
                              "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                              "enum": [
                                "Secure UI",
                                "Sysdig",
                                "Customer",
                                "Profiling",
                                "K8s Policy Advisor",
                                "Compliance",
                                "Tuner"
                              ],
                              "example": "Secure UI"
                            },
                            "versionId": {
                              "type": "string",
                              "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                              "example": "v1.2.3"
                            },
                            "filename": {
                              "type": "string",
                              "description": "The name of a Falco rules file",
                              "example": "falco_rules_local.yaml"
                            },
                            "version": {
                              "type": "number",
                              "format": "integer",
                              "description": "The version is incremented when the update is successful.",
                              "example": 5
                            },
                            "createdOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                              "example": 1553702727177
                            },
                            "modifiedOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "append": {
                              "type": "string",
                              "enum": [
                                true,
                                false
                              ],
                              "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                              "example": "true"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "type": "object",
                          "required": [
                            "items",
                            "components"
                          ],
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "the array of items as represented in the yaml List",
                              "example": [
                                "bash",
                                "\"sh -c node -e \\\"require('nan')\\\"\"",
                                "monitored_directories"
                              ],
                              "items": {
                                "type": "string",
                                "description": "the item text or list name",
                                "example": "monitored_directories"
                              }
                            },
                            "components": {
                              "type": "array",
                              "description": "an array containing the broken-up components of this falco list\\'s items field",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "listText"
                                    ],
                                    "properties": {
                                      "text": {
                                        "type": "string",
                                        "description": "Any sort of text that might make sense to put in a list",
                                        "example": "item 1"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "falcoListReference"
                                    ],
                                    "properties": {
                                      "falcoListReference": {
                                        "type": "string",
                                        "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                        "example": "monitored_directories"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Falco Lists"
          ],
          "responses": {
            "200": {
              "description": "The saved falco list",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "items"
                        ],
                        "properties": {
                          "items": {
                            "type": "object",
                            "required": [
                              "items",
                              "components"
                            ],
                            "properties": {
                              "items": {
                                "type": "array",
                                "description": "the array of items as represented in the yaml List",
                                "example": [
                                  "bash",
                                  "\"sh -c node -e \\\"require('nan')\\\"\"",
                                  "monitored_directories"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "the item text or list name",
                                  "example": "monitored_directories"
                                }
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco list\\'s items field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "listText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "Any sort of text that might make sense to put in a list",
                                          "example": "item 1"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The provided falco list is not valid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/lists\"\n\n\tpayload := strings.NewReader(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"items\\\":{\\\"items\\\":[\\\"bash\\\",\\\"\\\\\\\"sh -c node -e \\\\\\\\\\\\\\\"require('nan')\\\\\\\\\\\\\\\"\\\\\\\"\\\",\\\"monitored_directories\\\"],\\\"components\\\":[{\\\"text\\\":\\\"item 1\\\"}]}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/secure/falco/lists \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":1,\"name\":\"Write Below Binary Dir\",\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"filename\":\"falco_rules_local.yaml\",\"version\":5,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"append\":\"true\",\"items\":{\"items\":[\"bash\",\"\\\"sh -c node -e \\\\\\\"require('\\''nan'\\'')\\\\\\\"\\\"\",\"monitored_directories\"],\"components\":[{\"text\":\"item 1\"}]}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/secure/falco/lists',\n  headers: {'content-type': 'application/json'},\n  body: {\n    id: 1,\n    name: 'Write Below Binary Dir',\n    origin: 'Secure UI',\n    versionId: 'v1.2.3',\n    filename: 'falco_rules_local.yaml',\n    version: 5,\n    createdOn: 1553702727177,\n    modifiedOn: 1553702738288,\n    append: 'true',\n    items: {\n      items: ['bash', '\"sh -c node -e \\\"require(\\'nan\\')\\\"\"', 'monitored_directories'],\n      components: [{text: 'item 1'}]\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/secure/falco/lists\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"items\\\":{\\\"items\\\":[\\\"bash\\\",\\\"\\\\\\\"sh -c node -e \\\\\\\\\\\\\\\"require('nan')\\\\\\\\\\\\\\\"\\\\\\\"\\\",\\\"monitored_directories\\\"],\\\"components\\\":[{\\\"text\\\":\\\"item 1\\\"}]}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"items\\\":{\\\"items\\\":[\\\"bash\\\",\\\"\\\\\\\"sh -c node -e \\\\\\\\\\\\\\\"require('nan')\\\\\\\\\\\\\\\"\\\\\\\"\\\",\\\"monitored_directories\\\"],\\\"components\\\":[{\\\"text\\\":\\\"item 1\\\"}]}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/secure/falco/lists\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/falco/lists/{listId}": {
        "get": {
          "summary": "Retrieve a Falco list",
          "parameters": [
            {
              "name": "listId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Falco Lists"
          ],
          "responses": {
            "200": {
              "description": "The falco list with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "items"
                        ],
                        "properties": {
                          "items": {
                            "type": "object",
                            "required": [
                              "items",
                              "components"
                            ],
                            "properties": {
                              "items": {
                                "type": "array",
                                "description": "the array of items as represented in the yaml List",
                                "example": [
                                  "bash",
                                  "\"sh -c node -e \\\"require('nan')\\\"\"",
                                  "monitored_directories"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "the item text or list name",
                                  "example": "monitored_directories"
                                }
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco list\\'s items field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "listText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "Any sort of text that might make sense to put in a list",
                                          "example": "item 1"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/falco/lists/%7BlistId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "put": {
          "summary": "Update a Falco list",
          "parameters": [
            {
              "name": "listId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "id",
                            "name",
                            "origin",
                            "versionId",
                            "filename",
                            "version",
                            "modifiedOn",
                            "createdOn"
                          ],
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "A unique identifier representing a specific rule",
                              "example": 1
                            },
                            "name": {
                              "type": "string",
                              "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                              "example": "Write Below Binary Dir"
                            },
                            "origin": {
                              "type": "string",
                              "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                              "enum": [
                                "Secure UI",
                                "Sysdig",
                                "Customer",
                                "Profiling",
                                "K8s Policy Advisor",
                                "Compliance",
                                "Tuner"
                              ],
                              "example": "Secure UI"
                            },
                            "versionId": {
                              "type": "string",
                              "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                              "example": "v1.2.3"
                            },
                            "filename": {
                              "type": "string",
                              "description": "The name of a Falco rules file",
                              "example": "falco_rules_local.yaml"
                            },
                            "version": {
                              "type": "number",
                              "format": "integer",
                              "description": "The version is incremented when the update is successful.",
                              "example": 5
                            },
                            "createdOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                              "example": 1553702727177
                            },
                            "modifiedOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "append": {
                              "type": "string",
                              "enum": [
                                true,
                                false
                              ],
                              "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                              "example": "true"
                            }
                          }
                        }
                      ]
                    },
                    {
                      "type": "object",
                      "required": [
                        "items"
                      ],
                      "properties": {
                        "items": {
                          "type": "object",
                          "required": [
                            "items",
                            "components"
                          ],
                          "properties": {
                            "items": {
                              "type": "array",
                              "description": "the array of items as represented in the yaml List",
                              "example": [
                                "bash",
                                "\"sh -c node -e \\\"require('nan')\\\"\"",
                                "monitored_directories"
                              ],
                              "items": {
                                "type": "string",
                                "description": "the item text or list name",
                                "example": "monitored_directories"
                              }
                            },
                            "components": {
                              "type": "array",
                              "description": "an array containing the broken-up components of this falco list\\'s items field",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "listText"
                                    ],
                                    "properties": {
                                      "text": {
                                        "type": "string",
                                        "description": "Any sort of text that might make sense to put in a list",
                                        "example": "item 1"
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "required": [
                                      "falcoListReference"
                                    ],
                                    "properties": {
                                      "falcoListReference": {
                                        "type": "string",
                                        "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                        "example": "monitored_directories"
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "tags": [
            "Falco Lists"
          ],
          "responses": {
            "200": {
              "description": "The falco list with the given id",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "items"
                        ],
                        "properties": {
                          "items": {
                            "type": "object",
                            "required": [
                              "items",
                              "components"
                            ],
                            "properties": {
                              "items": {
                                "type": "array",
                                "description": "the array of items as represented in the yaml List",
                                "example": [
                                  "bash",
                                  "\"sh -c node -e \\\"require('nan')\\\"\"",
                                  "monitored_directories"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "the item text or list name",
                                  "example": "monitored_directories"
                                }
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco list\\'s items field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "listText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "Any sort of text that might make sense to put in a list",
                                          "example": "item 1"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "The provided falcolist is not valid",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "404": {
              "description": "Resource with the specified ID could not be found. More information about 404 can be found at https://httpstatuses.com/404"
            },
            "409": {
              "description": "The user must first perform a GET request to get the current version of the resource. The user must then compare the remote version with the local expected version and merge any updates from remote if needed and then update the local version to match the remote version. More information about 409 can be found at https://httpstatuses.com/409"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D\"\n\n\tpayload := strings.NewReader(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"items\\\":{\\\"items\\\":[\\\"bash\\\",\\\"\\\\\\\"sh -c node -e \\\\\\\\\\\\\\\"require('nan')\\\\\\\\\\\\\\\"\\\\\\\"\\\",\\\"monitored_directories\\\"],\\\"components\\\":[{\\\"text\\\":\\\"item 1\\\"}]}}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request PUT \\\n  --url https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D \\\n  --header 'content-type: application/json' \\\n  --data '{\"id\":1,\"name\":\"Write Below Binary Dir\",\"origin\":\"Secure UI\",\"versionId\":\"v1.2.3\",\"filename\":\"falco_rules_local.yaml\",\"version\":5,\"createdOn\":1553702727177,\"modifiedOn\":1553702738288,\"append\":\"true\",\"items\":{\"items\":[\"bash\",\"\\\"sh -c node -e \\\\\\\"require('\\''nan'\\'')\\\\\\\"\\\"\",\"monitored_directories\"],\"components\":[{\"text\":\"item 1\"}]}}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'PUT',\n  url: 'https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D',\n  headers: {'content-type': 'application/json'},\n  body: {\n    id: 1,\n    name: 'Write Below Binary Dir',\n    origin: 'Secure UI',\n    versionId: 'v1.2.3',\n    filename: 'falco_rules_local.yaml',\n    version: 5,\n    createdOn: 1553702727177,\n    modifiedOn: 1553702738288,\n    append: 'true',\n    items: {\n      items: ['bash', '\"sh -c node -e \\\"require(\\'nan\\')\\\"\"', 'monitored_directories'],\n      components: [{text: 'item 1'}]\n    }\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.put(\"https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"items\\\":{\\\"items\\\":[\\\"bash\\\",\\\"\\\\\\\"sh -c node -e \\\\\\\\\\\\\\\"require('nan')\\\\\\\\\\\\\\\"\\\\\\\"\\\",\\\"monitored_directories\\\"],\\\"components\\\":[{\\\"text\\\":\\\"item 1\\\"}]}}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"id\\\":1,\\\"name\\\":\\\"Write Below Binary Dir\\\",\\\"origin\\\":\\\"Secure UI\\\",\\\"versionId\\\":\\\"v1.2.3\\\",\\\"filename\\\":\\\"falco_rules_local.yaml\\\",\\\"version\\\":5,\\\"createdOn\\\":1553702727177,\\\"modifiedOn\\\":1553702738288,\\\"append\\\":\\\"true\\\",\\\"items\\\":{\\\"items\\\":[\\\"bash\\\",\\\"\\\\\\\"sh -c node -e \\\\\\\\\\\\\\\"require('nan')\\\\\\\\\\\\\\\"\\\\\\\"\\\",\\\"monitored_directories\\\"],\\\"components\\\":[{\\\"text\\\":\\\"item 1\\\"}]}}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"PUT\", \"/api/secure/falco/lists/%7BlistId%7D\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        },
        "delete": {
          "summary": "Delete a Falco list",
          "parameters": [
            {
              "name": "listId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "tags": [
            "Falco Lists"
          ],
          "responses": {
            "200": {
              "description": "The falco list that was just deleted",
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "origin",
                              "versionId",
                              "filename",
                              "version",
                              "modifiedOn",
                              "createdOn"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "A unique identifier representing a specific rule",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                "example": "Write Below Binary Dir"
                              },
                              "origin": {
                                "type": "string",
                                "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                "enum": [
                                  "Secure UI",
                                  "Sysdig",
                                  "Customer",
                                  "Profiling",
                                  "K8s Policy Advisor",
                                  "Compliance",
                                  "Tuner"
                                ],
                                "example": "Secure UI"
                              },
                              "versionId": {
                                "type": "string",
                                "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                "example": "v1.2.3"
                              },
                              "filename": {
                                "type": "string",
                                "description": "The name of a Falco rules file",
                                "example": "falco_rules_local.yaml"
                              },
                              "version": {
                                "type": "number",
                                "format": "integer",
                                "description": "The version is incremented when the update is successful.",
                                "example": 5
                              },
                              "createdOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                "example": 1553702727177
                              },
                              "modifiedOn": {
                                "type": "number",
                                "format": "integer",
                                "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                "example": 1553702738288
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "append": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false
                                ],
                                "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                "example": "true"
                              }
                            }
                          }
                        ]
                      },
                      {
                        "type": "object",
                        "required": [
                          "items"
                        ],
                        "properties": {
                          "items": {
                            "type": "object",
                            "required": [
                              "items",
                              "components"
                            ],
                            "properties": {
                              "items": {
                                "type": "array",
                                "description": "the array of items as represented in the yaml List",
                                "example": [
                                  "bash",
                                  "\"sh -c node -e \\\"require('nan')\\\"\"",
                                  "monitored_directories"
                                ],
                                "items": {
                                  "type": "string",
                                  "description": "the item text or list name",
                                  "example": "monitored_directories"
                                }
                              },
                              "components": {
                                "type": "array",
                                "description": "an array containing the broken-up components of this falco list\\'s items field",
                                "items": {
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "required": [
                                        "listText"
                                      ],
                                      "properties": {
                                        "text": {
                                          "type": "string",
                                          "description": "Any sort of text that might make sense to put in a list",
                                          "example": "item 1"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "required": [
                                        "falcoListReference"
                                      ],
                                      "properties": {
                                        "falcoListReference": {
                                          "type": "string",
                                          "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                          "example": "monitored_directories"
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request DELETE \\\n  --url https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'DELETE',\n  url: 'https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.delete(\"https://secure.sysdig.com/api/secure/falco/lists/%7BlistId%7D\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"DELETE\", \"/api/secure/falco/lists/%7BlistId%7D\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/falco/lists/summaries": {
        "get": {
          "summary": "Retrieve a list of summary falco list information, grouped by list name",
          "description": "Returns the list of falco lists in the system. These are grouped by name and do not necessarily represent individual falco list objects, as multiple falco lists can have the same name.\n",
          "tags": [
            "Falco Lists"
          ],
          "responses": {
            "200": {
              "description": "An array of falco lists grouped by name.",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "required": [
                            "ids",
                            "name",
                            "publishedBys",
                            "modifiedOn"
                          ],
                          "properties": {
                            "ids": {
                              "type": "array",
                              "items": {
                                "type": "integer"
                              },
                              "description": "The specific object ids having this name",
                              "example": [
                                6,
                                17,
                                21
                              ]
                            },
                            "name": {
                              "type": "string",
                              "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                              "example": "Write Below Binary Dir"
                            },
                            "publishedBys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "required": [
                                      "origin",
                                      "versionId"
                                    ],
                                    "properties": {
                                      "origin": {
                                        "type": "string",
                                        "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                        "enum": [
                                          "Secure UI",
                                          "Sysdig",
                                          "Customer",
                                          "Profiling",
                                          "K8s Policy Advisor",
                                          "Compliance",
                                          "Tuner"
                                        ],
                                        "example": "Secure UI"
                                      },
                                      "versionId": {
                                        "type": "string",
                                        "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                        "example": "v1.2.3"
                                      }
                                    }
                                  }
                                ]
                              },
                              "description": "A set of (origin,versionId) pairs for all the objects sharing this name."
                            },
                            "modifiedOn": {
                              "type": "number",
                              "format": "integer",
                              "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                              "example": 1553702738288
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "usedCount"
                          ],
                          "properties": {
                            "usedCount": {
                              "type": "integer",
                              "description": "The number of rules that refer to this object (macro/list) OR the number of policies that refer to this rule"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/lists/summaries\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/secure/falco/lists/summaries"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/falco/lists/summaries'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/falco/lists/summaries\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/falco/lists/summaries\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/secure/falco/lists/groups": {
        "get": {
          "summary": "Retrieve a group of falco lists having a given name",
          "description": "Retrieve a group of all falco lists having the given name. This is used to show how a base list is modified by later lists that override/append to the list.",
          "tags": [
            "Falco Lists"
          ],
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "An array of lists",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "required": [
                                "id",
                                "name",
                                "origin",
                                "versionId",
                                "filename",
                                "version",
                                "modifiedOn",
                                "createdOn"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "A unique identifier representing a specific rule",
                                  "example": 1
                                },
                                "name": {
                                  "type": "string",
                                  "description": "A name for this object. For Falco rules/macros/lists, should exactly be the value of the \"rule\"/\"macro\"/\"list\" property of the yaml object.",
                                  "example": "Write Below Binary Dir"
                                },
                                "origin": {
                                  "type": "string",
                                  "description": "A string naming the entity that created this rule. This, combined with the version identifier, corresponds to the \"Published by\" field in the UI. The origin should be \"Secure UI\" for objects created by the Secure UI, \"Sysdig\" for objects provided by Sysdig, and \"Customer\" for objects provided programmatically by the customer.",
                                  "enum": [
                                    "Secure UI",
                                    "Sysdig",
                                    "Customer",
                                    "Profiling",
                                    "K8s Policy Advisor",
                                    "Compliance",
                                    "Tuner"
                                  ],
                                  "example": "Secure UI"
                                },
                                "versionId": {
                                  "type": "string",
                                  "description": "A string representing the version of the file that contained this rule. This, combined with the origin, corresponds to the \"Published by\" field in the UI. For rules with origin == Sysdig/Customer, the version identifier should come from the version property of the FalcoRulesFiles object that originally contained the rule. For rules with origin == Secure UI, the version should be a constant string \"current\".",
                                  "example": "v1.2.3"
                                },
                                "filename": {
                                  "type": "string",
                                  "description": "The name of a Falco rules file",
                                  "example": "falco_rules_local.yaml"
                                },
                                "version": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "The version is incremented when the update is successful.",
                                  "example": 5
                                },
                                "createdOn": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "A timestamp (in milliseconds) of when the rules object was first created.",
                                  "example": 1553702727177
                                },
                                "modifiedOn": {
                                  "type": "number",
                                  "format": "integer",
                                  "description": "A timestamp (in milliseconds) of when the rules object was last modified.",
                                  "example": 1553702738288
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "append": {
                                  "type": "string",
                                  "enum": [
                                    true,
                                    false
                                  ],
                                  "description": "If true, this object should be appended to an object with the same name that has already been loaded. Defaults to false if not present.",
                                  "example": "true"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "required": [
                            "items"
                          ],
                          "properties": {
                            "items": {
                              "type": "object",
                              "required": [
                                "items",
                                "components"
                              ],
                              "properties": {
                                "items": {
                                  "type": "array",
                                  "description": "the array of items as represented in the yaml List",
                                  "example": [
                                    "bash",
                                    "\"sh -c node -e \\\"require('nan')\\\"\"",
                                    "monitored_directories"
                                  ],
                                  "items": {
                                    "type": "string",
                                    "description": "the item text or list name",
                                    "example": "monitored_directories"
                                  }
                                },
                                "components": {
                                  "type": "array",
                                  "description": "an array containing the broken-up components of this falco list\\'s items field",
                                  "items": {
                                    "type": "object",
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "required": [
                                          "listText"
                                        ],
                                        "properties": {
                                          "text": {
                                            "type": "string",
                                            "description": "Any sort of text that might make sense to put in a list",
                                            "example": "item 1"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "required": [
                                          "falcoListReference"
                                        ],
                                        "properties": {
                                          "falcoListReference": {
                                            "type": "string",
                                            "description": "The name of a FalcoList object. (Intentionally using names instead of ids so it can be passed directly from falco without falco having its own notion of rule/macro/list ids).",
                                            "example": "monitored_directories"
                                          }
                                        }
                                      }
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/secure/falco/lists/groups?name=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/secure/falco/lists/groups?name=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/secure/falco/lists/groups',\n  qs: {name: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/secure/falco/lists/groups?name=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/secure/falco/lists/groups?name=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/settings/falco/filters": {
        "get": {
          "summary": "View the available falco filters for a customer",
          "description": "Returns what falco filters are available to customer to configure falco rules",
          "tags": [
            "Falco Metadata"
          ],
          "parameters": [
            {
              "name": "eventSource",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string",
                "description": "An event source through which Falco rules are evaluated. The enum syscall corresponds to the policy types falco and list_matching. The enum k8s_audit corresponds to the policy type k8s_audit",
                "enum": [
                  "syscall",
                  "k8s_audit",
                  "aws_cloudtrail",
                  "gcp_auditlog",
                  "azure_platformlogs"
                ]
              },
              "description": "when provided only falco filters corresponding to the specified event source will be included in the response"
            }
          ],
          "responses": {
            "200": {
              "description": "The falco filters available to customer to configure falco rules",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Indicates what the falco filter is called",
                          "example": "container.healthcheck"
                        },
                        "description": {
                          "type": "string",
                          "description": "Provides additional context about the filter such as when it evaluates to true or false and the range of potential evaluation values",
                          "example": "The container's health check. Will be the null value if no healthcheck configured, NONE if configured but explicitly not created, and the healthcheck command line otherwise"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/settings/falco/filters?eventSource=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url 'https://secure.sysdig.com/api/settings/falco/filters?eventSource=SOME_STRING_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/settings/falco/filters',\n  qs: {eventSource: 'SOME_STRING_VALUE'}\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/settings/falco/filters?eventSource=SOME_STRING_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/settings/falco/filters?eventSource=SOME_STRING_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secure/policyTuner/enable": {
        "post": {
          "summary": "The policy tuner service records this customer as enabled such that a tune will be run for this customer during the next run cycle",
          "description": "The policy tuner service records this customer as enabled such that a tune will be run for this customer during the next run cycle",
          "tags": [
            "Tuner"
          ],
          "responses": {
            "200": {
              "description": "Success"
            },
            "400": {
              "description": "Sysdig has not enabled tuning for this customer",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/policyTuner/enable\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/secure/policyTuner/enable"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/secure/policyTuner/enable'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/secure/policyTuner/enable\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/v1/secure/policyTuner/enable\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secure/policyTuner/disable": {
        "post": {
          "summary": "The policy tuner service records this customer as disabled such that a tune will not be run for this customer during the next run cycle",
          "description": "The policy tuner service records this customer as disabled such that a tune will not be run for this customer during the next run cycle",
          "tags": [
            "Tuner"
          ],
          "responses": {
            "200": {
              "description": "Success"
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/policyTuner/disable\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/secure/policyTuner/disable"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/secure/policyTuner/disable'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/secure/policyTuner/disable\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/v1/secure/policyTuner/disable\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secure/policyTuner/tuneNow": {
        "post": {
          "summary": "The policy tuner immediately runs tuning for the customer",
          "description": "The policy tuner immediately runs tuning for the customer",
          "tags": [
            "Tuner"
          ],
          "responses": {
            "200": {
              "description": "The generated tuner FalcoRulesFile",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "name",
                      "variants"
                    ],
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "A name for this file. Should be used in UI to distinguish between files.",
                        "example": "falco_rules.yaml"
                      },
                      "variants": {
                        "type": "array",
                        "description": "An array of alternate versions for the given file. An agent should choose the highest version that is compatible with its included falco engine.",
                        "items": {
                          "type": "object",
                          "required": [
                            "requiredEngineVersion",
                            "content"
                          ],
                          "properties": {
                            "required_engine_version": {
                              "type": "number",
                              "format": "integer",
                              "description": "The minimum falco engine version that can read this rules file variant."
                            },
                            "content": {
                              "type": "string",
                              "description": "A string containing the yaml contents of a falco rules file variant.",
                              "example": "- macro: open_write\n  condition: something"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Sysdig has not enabled tuning for this customer",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/policyTuner/tuneNow\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/secure/policyTuner/tuneNow"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/secure/policyTuner/tuneNow'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/secure/policyTuner/tuneNow\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/v1/secure/policyTuner/tuneNow\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secure/policyTuner/tuningEnabled": {
        "get": {
          "summary": "Checks if tuning is enabled",
          "description": "Checks if tuning is enabled",
          "tags": [
            "Tuner"
          ],
          "responses": {
            "200": {
              "description": "Indicates whether tuning is enabled or disabled",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "enabledStatus"
                    ],
                    "properties": {
                      "enabledStatus": {
                        "type": "boolean",
                        "description": "returns True if tuning is enabled, False if tuning is disabled",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/policyTuner/tuningEnabled\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/secure/policyTuner/tuningEnabled"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/secure/policyTuner/tuningEnabled'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secure/policyTuner/tuningEnabled\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secure/policyTuner/tuningEnabled\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secure/policyTuner/status": {
        "get": {
          "summary": "Ping the status",
          "description": "Retrieves a 200 to double check if the policy tuner feature on the\nbackend is available.\n",
          "tags": [
            "Tuner"
          ],
          "responses": {
            "200": {
              "description": "Indicates the policy tuner feature is available",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "required": [
                      "status"
                    ],
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The status.",
                        "enum": [
                          "ok"
                        ],
                        "example": "ok"
                      }
                    }
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/policyTuner/status\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request GET \\\n  --url https://secure.sysdig.com/api/v1/secure/policyTuner/status"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'GET',\n  url: 'https://secure.sysdig.com/api/v1/secure/policyTuner/status'\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.get(\"https://secure.sysdig.com/api/v1/secure/policyTuner/status\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"GET\", \"/api/v1/secure/policyTuner/status\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secure/policyTuner/excludeEvents": {
        "post": {
          "summary": "Returns a list of exceptions to exclude the events matching a set of parameters",
          "description": "Returns a list of exceptions to exclude the events matching a set of parameters",
          "tags": [
            "Tuner"
          ],
          "parameters": [
            {
              "name": "filter",
              "in": "query",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "start",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "The timestamp in seconds in which the events to be excluded begin"
            },
            {
              "name": "end",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              },
              "description": "The timestamp in seconds in which the events to be excluded end"
            },
            {
              "name": "limit",
              "in": "query",
              "required": false,
              "schema": {
                "type": "integer"
              },
              "description": "The number of suggested exclusion proposals to return in the responses. The request will be rejected if it is greater than 10 or less than 1."
            }
          ],
          "responses": {
            "200": {
              "description": "Indicates the service was able to successfully find a list of exceptions to exclude the provided events",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "exclusionProposals": {
                        "type": "array",
                        "items": {
                          "required": [
                            "ruleName",
                            "exception"
                          ],
                          "properties": {
                            "ruleName": {
                              "type": "string"
                            },
                            "exception": {
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "fields": {
                                  "properties": {
                                    "stringlist": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "string": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "comps": {
                                  "properties": {
                                    "stringlist": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "string": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "values": {
                                  "properties": {
                                    "strings": {
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "tuples": {
                                      "type": "array",
                                      "items": {
                                        "properties": {
                                          "items": {
                                            "type": "array",
                                            "items": {
                                              "properties": {
                                                "stringlist": {
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string"
                                                  }
                                                },
                                                "string": {
                                                  "type": "string"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "eventCount": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "totalEvents": {
                        "type": "integer"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Returned if the start param occurs after the end or if the parameters are of the wrong data type or the limit is out of range",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/policyTuner/excludeEvents?filter=SOME_STRING_VALUE&start=SOME_INTEGER_VALUE&end=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url 'https://secure.sysdig.com/api/v1/secure/policyTuner/excludeEvents?filter=SOME_STRING_VALUE&start=SOME_INTEGER_VALUE&end=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/secure/policyTuner/excludeEvents',\n  qs: {\n    filter: 'SOME_STRING_VALUE',\n    start: 'SOME_INTEGER_VALUE',\n    end: 'SOME_INTEGER_VALUE',\n    limit: 'SOME_INTEGER_VALUE'\n  }\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/secure/policyTuner/excludeEvents?filter=SOME_STRING_VALUE&start=SOME_INTEGER_VALUE&end=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\nconn.request(\"POST\", \"/api/v1/secure/policyTuner/excludeEvents?filter=SOME_STRING_VALUE&start=SOME_INTEGER_VALUE&end=SOME_INTEGER_VALUE&limit=SOME_INTEGER_VALUE\")\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      },
      "/api/v1/secure/policyTuner/exceptions": {
        "post": {
          "summary": "Adds a provided set of exceptions to the tuner file",
          "description": "Adds a provided set of exceptions to the tuner file",
          "tags": [
            "Tuner"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exclusionProposals": {
                      "type": "array",
                      "items": {
                        "required": [
                          "ruleName",
                          "exception"
                        ],
                        "properties": {
                          "ruleName": {
                            "type": "string"
                          },
                          "exception": {
                            "required": [
                              "name"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "fields": {
                                "properties": {
                                  "stringlist": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "string": {
                                    "type": "string"
                                  }
                                }
                              },
                              "comps": {
                                "properties": {
                                  "stringlist": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "string": {
                                    "type": "string"
                                  }
                                }
                              },
                              "values": {
                                "properties": {
                                  "strings": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "tuples": {
                                    "type": "array",
                                    "items": {
                                      "properties": {
                                        "items": {
                                          "type": "array",
                                          "items": {
                                            "properties": {
                                              "stringlist": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                }
                                              },
                                              "string": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "eventCount": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "totalEvents": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Indicates the new exceptions were successfully added to the tuner file"
            },
            "400": {
              "description": "Indicates one of the fields in the request body was missing, the wrong data type, or the exception values did not match the expected form of the exception",
              "content": {
                "text/plain": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "x-codeSamples": [
            {
              "lang": "Go",
              "source": "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://secure.sysdig.com/api/v1/secure/policyTuner/exceptions\"\n\n\tpayload := strings.NewReader(\"{\\\"exclusionProposals\\\":[{\\\"ruleName\\\":\\\"string\\\",\\\"exception\\\":{\\\"name\\\":\\\"string\\\",\\\"fields\\\":{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"},\\\"comps\\\":{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"},\\\"values\\\":{\\\"strings\\\":[\\\"string\\\"],\\\"tuples\\\":[{\\\"items\\\":[{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"}]}]}},\\\"eventCount\\\":0}],\\\"totalEvents\\\":0}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
            },
            {
              "lang": "Curl",
              "source": "curl --request POST \\\n  --url https://secure.sysdig.com/api/v1/secure/policyTuner/exceptions \\\n  --header 'content-type: application/json' \\\n  --data '{\"exclusionProposals\":[{\"ruleName\":\"string\",\"exception\":{\"name\":\"string\",\"fields\":{\"stringlist\":[\"string\"],\"string\":\"string\"},\"comps\":{\"stringlist\":[\"string\"],\"string\":\"string\"},\"values\":{\"strings\":[\"string\"],\"tuples\":[{\"items\":[{\"stringlist\":[\"string\"],\"string\":\"string\"}]}]}},\"eventCount\":0}],\"totalEvents\":0}'"
            },
            {
              "lang": "Node",
              "source": "const request = require('request');\n\nconst options = {\n  method: 'POST',\n  url: 'https://secure.sysdig.com/api/v1/secure/policyTuner/exceptions',\n  headers: {'content-type': 'application/json'},\n  body: {\n    exclusionProposals: [\n      {\n        ruleName: 'string',\n        exception: {\n          name: 'string',\n          fields: {stringlist: ['string'], string: 'string'},\n          comps: {stringlist: ['string'], string: 'string'},\n          values: {\n            strings: ['string'],\n            tuples: [{items: [{stringlist: ['string'], string: 'string'}]}]\n          }\n        },\n        eventCount: 0\n      }\n    ],\n    totalEvents: 0\n  },\n  json: true\n};\n\nrequest(options, function (error, response, body) {\n  if (error) throw new Error(error);\n\n  console.log(body);\n});\n"
            },
            {
              "lang": "Java",
              "source": "HttpResponse<String> response = Unirest.post(\"https://secure.sysdig.com/api/v1/secure/policyTuner/exceptions\")\n  .header(\"content-type\", \"application/json\")\n  .body(\"{\\\"exclusionProposals\\\":[{\\\"ruleName\\\":\\\"string\\\",\\\"exception\\\":{\\\"name\\\":\\\"string\\\",\\\"fields\\\":{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"},\\\"comps\\\":{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"},\\\"values\\\":{\\\"strings\\\":[\\\"string\\\"],\\\"tuples\\\":[{\\\"items\\\":[{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"}]}]}},\\\"eventCount\\\":0}],\\\"totalEvents\\\":0}\")\n  .asString();"
            },
            {
              "lang": "Python",
              "source": "import http.client\n\nconn = http.client.HTTPSConnection(\"secure.sysdig.com\")\n\npayload = \"{\\\"exclusionProposals\\\":[{\\\"ruleName\\\":\\\"string\\\",\\\"exception\\\":{\\\"name\\\":\\\"string\\\",\\\"fields\\\":{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"},\\\"comps\\\":{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"},\\\"values\\\":{\\\"strings\\\":[\\\"string\\\"],\\\"tuples\\\":[{\\\"items\\\":[{\\\"stringlist\\\":[\\\"string\\\"],\\\"string\\\":\\\"string\\\"}]}]}},\\\"eventCount\\\":0}],\\\"totalEvents\\\":0}\"\n\nheaders = { 'content-type': \"application/json\" }\n\nconn.request(\"POST\", \"/api/v1/secure/policyTuner/exceptions\", payload, headers)\n\nres = conn.getresponse()\ndata = res.read()\n\nprint(data.decode(\"utf-8\"))"
            }
          ]
        }
      }
    },
    "components": {}
}